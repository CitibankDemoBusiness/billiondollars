/* 
 * Money Movement
 *
 * <P>The Money Movement API allow you to move money from Citi customers account. Transfers can be made to predefined payees by customer and individuals not included in the payee list</P> The segment of API will allow to perform below category of transfers:<br><br><b>Personal Transfer-</b> Allowing customer to initiate the money transfers within customer�s own Citi accounts.<br><br><b>Internal transfer-</b> Allowing customer to initiate the money transfer from customer Citi own accounts to other Citi accounts locally.<br><br><b>External transfer-</b> Allowing customer to initiate the money transfer from customer Citi own accounts to other bank accounts locally.<br><br><b>Bill Payment-</b> Allowing customer to initiate the bill payment from customer Citi own accounts to billing organization.<br><br><b>Citi Global Transfer-</b> Allowing customer to initiate the money transfer from customer Citi own accounts to other Citi bank accounts across various Countries.<br><br><b>SEPA Transfer-</b> Allowing customer to initiate money transfer to other European bank accounts within the SEPA territory.<br><br><b>Cross border transfer-</b> Allowing customer to initiate money transfer from customer own account to cross border bank accounts.<br>
 *
 * OpenAPI spec version: 1.0.0e
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using IO.Swagger.Client;
using IO.Swagger.Model;

namespace IO.Swagger.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public interface IAccountsApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// This API provides unmasked account number for the requested account Id.
        /// </summary>
        /// <remarks>
        /// This API returns unmasked account number for the requested account Id. To retrieve the unmasked account number, simply pass the account id parameter, which you can get from the ‘Account Summary’ API for Accounts (AIS) and Source account eligibility API for Money Movement (PIS).Note: This API works for both Accounts (AIS) and Money Movement (PIS) APIs.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveUnmaskedAccountDataRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random universally unique identifier (UUID) generated for every request.</param>
        /// <param name="accept">Content-Types that are acceptable for the response. Always pass application/json.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId. (optional)</param>
        /// <returns>RetrieveUnmaskedAccountDataResponse</returns>
        RetrieveUnmaskedAccountDataResponse RetrieveUnmaskedAccountData (RetrieveUnmaskedAccountDataRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null);

        /// <summary>
        /// This API provides unmasked account number for the requested account Id.
        /// </summary>
        /// <remarks>
        /// This API returns unmasked account number for the requested account Id. To retrieve the unmasked account number, simply pass the account id parameter, which you can get from the ‘Account Summary’ API for Accounts (AIS) and Source account eligibility API for Money Movement (PIS).Note: This API works for both Accounts (AIS) and Money Movement (PIS) APIs.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveUnmaskedAccountDataRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random universally unique identifier (UUID) generated for every request.</param>
        /// <param name="accept">Content-Types that are acceptable for the response. Always pass application/json.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId. (optional)</param>
        /// <returns>ApiResponse of RetrieveUnmaskedAccountDataResponse</returns>
        ApiResponse<RetrieveUnmaskedAccountDataResponse> RetrieveUnmaskedAccountDataWithHttpInfo (RetrieveUnmaskedAccountDataRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// This API provides unmasked account number for the requested account Id.
        /// </summary>
        /// <remarks>
        /// This API returns unmasked account number for the requested account Id. To retrieve the unmasked account number, simply pass the account id parameter, which you can get from the ‘Account Summary’ API for Accounts (AIS) and Source account eligibility API for Money Movement (PIS).Note: This API works for both Accounts (AIS) and Money Movement (PIS) APIs.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveUnmaskedAccountDataRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random universally unique identifier (UUID) generated for every request.</param>
        /// <param name="accept">Content-Types that are acceptable for the response. Always pass application/json.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId. (optional)</param>
        /// <returns>Task of RetrieveUnmaskedAccountDataResponse</returns>
        System.Threading.Tasks.Task<RetrieveUnmaskedAccountDataResponse> RetrieveUnmaskedAccountDataAsync (RetrieveUnmaskedAccountDataRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null);

        /// <summary>
        /// This API provides unmasked account number for the requested account Id.
        /// </summary>
        /// <remarks>
        /// This API returns unmasked account number for the requested account Id. To retrieve the unmasked account number, simply pass the account id parameter, which you can get from the ‘Account Summary’ API for Accounts (AIS) and Source account eligibility API for Money Movement (PIS).Note: This API works for both Accounts (AIS) and Money Movement (PIS) APIs.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveUnmaskedAccountDataRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random universally unique identifier (UUID) generated for every request.</param>
        /// <param name="accept">Content-Types that are acceptable for the response. Always pass application/json.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId. (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveUnmaskedAccountDataResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveUnmaskedAccountDataResponse>> RetrieveUnmaskedAccountDataAsyncWithHttpInfo (RetrieveUnmaskedAccountDataRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public partial class AccountsApi : IAccountsApi
    {
        private IO.Swagger.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="AccountsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AccountsApi(String basePath)
        {
            this.Configuration = new IO.Swagger.Client.Configuration { BasePath = basePath };

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AccountsApi"/> class
        /// </summary>
        /// <returns></returns>
        public AccountsApi()
        {
            this.Configuration = IO.Swagger.Client.Configuration.Default;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AccountsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public AccountsApi(IO.Swagger.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = IO.Swagger.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public IO.Swagger.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public IO.Swagger.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// This API provides unmasked account number for the requested account Id. This API returns unmasked account number for the requested account Id. To retrieve the unmasked account number, simply pass the account id parameter, which you can get from the ‘Account Summary’ API for Accounts (AIS) and Source account eligibility API for Money Movement (PIS).Note: This API works for both Accounts (AIS) and Money Movement (PIS) APIs.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveUnmaskedAccountDataRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random universally unique identifier (UUID) generated for every request.</param>
        /// <param name="accept">Content-Types that are acceptable for the response. Always pass application/json.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId. (optional)</param>
        /// <returns>RetrieveUnmaskedAccountDataResponse</returns>
        public RetrieveUnmaskedAccountDataResponse RetrieveUnmaskedAccountData (RetrieveUnmaskedAccountDataRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null)
        {
             ApiResponse<RetrieveUnmaskedAccountDataResponse> localVarResponse = RetrieveUnmaskedAccountDataWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API provides unmasked account number for the requested account Id. This API returns unmasked account number for the requested account Id. To retrieve the unmasked account number, simply pass the account id parameter, which you can get from the ‘Account Summary’ API for Accounts (AIS) and Source account eligibility API for Money Movement (PIS).Note: This API works for both Accounts (AIS) and Money Movement (PIS) APIs.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveUnmaskedAccountDataRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random universally unique identifier (UUID) generated for every request.</param>
        /// <param name="accept">Content-Types that are acceptable for the response. Always pass application/json.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId. (optional)</param>
        /// <returns>ApiResponse of RetrieveUnmaskedAccountDataResponse</returns>
        public ApiResponse< RetrieveUnmaskedAccountDataResponse > RetrieveUnmaskedAccountDataWithHttpInfo (RetrieveUnmaskedAccountDataRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling AccountsApi->RetrieveUnmaskedAccountData");

            var localVarPath = "/v1/accounts/clearData/retrieve";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveUnmaskedAccountData", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveUnmaskedAccountDataResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveUnmaskedAccountDataResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveUnmaskedAccountDataResponse)));
        }

        /// <summary>
        /// This API provides unmasked account number for the requested account Id. This API returns unmasked account number for the requested account Id. To retrieve the unmasked account number, simply pass the account id parameter, which you can get from the ‘Account Summary’ API for Accounts (AIS) and Source account eligibility API for Money Movement (PIS).Note: This API works for both Accounts (AIS) and Money Movement (PIS) APIs.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveUnmaskedAccountDataRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random universally unique identifier (UUID) generated for every request.</param>
        /// <param name="accept">Content-Types that are acceptable for the response. Always pass application/json.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId. (optional)</param>
        /// <returns>Task of RetrieveUnmaskedAccountDataResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveUnmaskedAccountDataResponse> RetrieveUnmaskedAccountDataAsync (RetrieveUnmaskedAccountDataRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null)
        {
             ApiResponse<RetrieveUnmaskedAccountDataResponse> localVarResponse = await RetrieveUnmaskedAccountDataAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API provides unmasked account number for the requested account Id. This API returns unmasked account number for the requested account Id. To retrieve the unmasked account number, simply pass the account id parameter, which you can get from the ‘Account Summary’ API for Accounts (AIS) and Source account eligibility API for Money Movement (PIS).Note: This API works for both Accounts (AIS) and Money Movement (PIS) APIs.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveUnmaskedAccountDataRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random universally unique identifier (UUID) generated for every request.</param>
        /// <param name="accept">Content-Types that are acceptable for the response. Always pass application/json.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId. (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveUnmaskedAccountDataResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveUnmaskedAccountDataResponse>> RetrieveUnmaskedAccountDataAsyncWithHttpInfo (RetrieveUnmaskedAccountDataRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling AccountsApi->RetrieveUnmaskedAccountData");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling AccountsApi->RetrieveUnmaskedAccountData");

            var localVarPath = "/v1/accounts/clearData/retrieve";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveUnmaskedAccountData", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveUnmaskedAccountDataResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveUnmaskedAccountDataResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveUnmaskedAccountDataResponse)));
        }

    }
}
