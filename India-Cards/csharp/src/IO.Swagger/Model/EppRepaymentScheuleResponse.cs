/* 
 * Cards
 *
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EppRepaymentScheuleResponse
    /// </summary>
    [DataContract]
        public partial class EppRepaymentScheuleResponse :  IEquatable<EppRepaymentScheuleResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EppRepaymentScheuleResponse" /> class.
        /// </summary>
        /// <param name="eppAmortizationSchedule">eppAmortizationSchedule.</param>
        /// <param name="totalLoanCost">Principal and total Interest amount to be paid by borrower for the loan..</param>
        public EppRepaymentScheuleResponse(List<EppAmortizationSchedule> eppAmortizationSchedule = default(List<EppAmortizationSchedule>), double? totalLoanCost = default(double?))
        {
            this.EppAmortizationSchedule = eppAmortizationSchedule;
            this.TotalLoanCost = totalLoanCost;
        }
        
        /// <summary>
        /// Gets or Sets EppAmortizationSchedule
        /// </summary>
        [DataMember(Name="eppAmortizationSchedule", EmitDefaultValue=false)]
        public List<EppAmortizationSchedule> EppAmortizationSchedule { get; set; }

        /// <summary>
        /// Principal and total Interest amount to be paid by borrower for the loan.
        /// </summary>
        /// <value>Principal and total Interest amount to be paid by borrower for the loan.</value>
        [DataMember(Name="totalLoanCost", EmitDefaultValue=false)]
        public double? TotalLoanCost { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EppRepaymentScheuleResponse {\n");
            sb.Append("  EppAmortizationSchedule: ").Append(EppAmortizationSchedule).Append("\n");
            sb.Append("  TotalLoanCost: ").Append(TotalLoanCost).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EppRepaymentScheuleResponse);
        }

        /// <summary>
        /// Returns true if EppRepaymentScheuleResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of EppRepaymentScheuleResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EppRepaymentScheuleResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EppAmortizationSchedule == input.EppAmortizationSchedule ||
                    this.EppAmortizationSchedule != null &&
                    input.EppAmortizationSchedule != null &&
                    this.EppAmortizationSchedule.SequenceEqual(input.EppAmortizationSchedule)
                ) && 
                (
                    this.TotalLoanCost == input.TotalLoanCost ||
                    (this.TotalLoanCost != null &&
                    this.TotalLoanCost.Equals(input.TotalLoanCost))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EppAmortizationSchedule != null)
                    hashCode = hashCode * 59 + this.EppAmortizationSchedule.GetHashCode();
                if (this.TotalLoanCost != null)
                    hashCode = hashCode * 59 + this.TotalLoanCost.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
