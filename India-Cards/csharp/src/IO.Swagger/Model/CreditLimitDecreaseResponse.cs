/* 
 * Cards
 *
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// CreditLimitDecreaseResponse
    /// </summary>
    [DataContract]
        public partial class CreditLimitDecreaseResponse :  IEquatable<CreditLimitDecreaseResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreditLimitDecreaseResponse" /> class.
        /// </summary>
        /// <param name="controlFlowId">It is used to control the flow for subsequent requests in the session..</param>
        /// <param name="creditLimitdDecreaseReferenceId">Unique Reference Id for the request for credit limit decrease request..</param>
        /// <param name="customerConsentRequiredFlag">This refers that consent is required from customer as new limit lower than the outstanding request..</param>
        public CreditLimitDecreaseResponse(string controlFlowId = default(string), string creditLimitdDecreaseReferenceId = default(string), bool? customerConsentRequiredFlag = default(bool?))
        {
            this.ControlFlowId = controlFlowId;
            this.CreditLimitdDecreaseReferenceId = creditLimitdDecreaseReferenceId;
            this.CustomerConsentRequiredFlag = customerConsentRequiredFlag;
        }
        
        /// <summary>
        /// It is used to control the flow for subsequent requests in the session.
        /// </summary>
        /// <value>It is used to control the flow for subsequent requests in the session.</value>
        [DataMember(Name="controlFlowId", EmitDefaultValue=false)]
        public string ControlFlowId { get; set; }

        /// <summary>
        /// Unique Reference Id for the request for credit limit decrease request.
        /// </summary>
        /// <value>Unique Reference Id for the request for credit limit decrease request.</value>
        [DataMember(Name="creditLimitdDecreaseReferenceId", EmitDefaultValue=false)]
        public string CreditLimitdDecreaseReferenceId { get; set; }

        /// <summary>
        /// This refers that consent is required from customer as new limit lower than the outstanding request.
        /// </summary>
        /// <value>This refers that consent is required from customer as new limit lower than the outstanding request.</value>
        [DataMember(Name="customerConsentRequiredFlag", EmitDefaultValue=false)]
        public bool? CustomerConsentRequiredFlag { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreditLimitDecreaseResponse {\n");
            sb.Append("  ControlFlowId: ").Append(ControlFlowId).Append("\n");
            sb.Append("  CreditLimitdDecreaseReferenceId: ").Append(CreditLimitdDecreaseReferenceId).Append("\n");
            sb.Append("  CustomerConsentRequiredFlag: ").Append(CustomerConsentRequiredFlag).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreditLimitDecreaseResponse);
        }

        /// <summary>
        /// Returns true if CreditLimitDecreaseResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CreditLimitDecreaseResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreditLimitDecreaseResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ControlFlowId == input.ControlFlowId ||
                    (this.ControlFlowId != null &&
                    this.ControlFlowId.Equals(input.ControlFlowId))
                ) && 
                (
                    this.CreditLimitdDecreaseReferenceId == input.CreditLimitdDecreaseReferenceId ||
                    (this.CreditLimitdDecreaseReferenceId != null &&
                    this.CreditLimitdDecreaseReferenceId.Equals(input.CreditLimitdDecreaseReferenceId))
                ) && 
                (
                    this.CustomerConsentRequiredFlag == input.CustomerConsentRequiredFlag ||
                    (this.CustomerConsentRequiredFlag != null &&
                    this.CustomerConsentRequiredFlag.Equals(input.CustomerConsentRequiredFlag))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ControlFlowId != null)
                    hashCode = hashCode * 59 + this.ControlFlowId.GetHashCode();
                if (this.CreditLimitdDecreaseReferenceId != null)
                    hashCode = hashCode * 59 + this.CreditLimitdDecreaseReferenceId.GetHashCode();
                if (this.CustomerConsentRequiredFlag != null)
                    hashCode = hashCode * 59 + this.CustomerConsentRequiredFlag.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
