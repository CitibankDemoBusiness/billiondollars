/* 
 * Cards
 *
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse
    /// </summary>
    [DataContract]
        public partial class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse :  IEquatable<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse" /> class.
        /// </summary>
        /// <param name="listResponse">listResponse.</param>
        /// <param name="orgCode">Organization of the card.</param>
        /// <param name="loanAmortizationSchedule">loanAmortizationSchedule.</param>
        /// <param name="loanSummary">loanSummary.</param>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse(ListResponse listResponse = default(ListResponse), string orgCode = default(string), List<LoanPaymentSchedule> loanAmortizationSchedule = default(List<LoanPaymentSchedule>), LoanSummary loanSummary = default(LoanSummary))
        {
            this.ListResponse = listResponse;
            this.OrgCode = orgCode;
            this.LoanAmortizationSchedule = loanAmortizationSchedule;
            this.LoanSummary = loanSummary;
        }
        
        /// <summary>
        /// Gets or Sets ListResponse
        /// </summary>
        [DataMember(Name="listResponse", EmitDefaultValue=false)]
        public ListResponse ListResponse { get; set; }

        /// <summary>
        /// Organization of the card
        /// </summary>
        /// <value>Organization of the card</value>
        [DataMember(Name="orgCode", EmitDefaultValue=false)]
        public string OrgCode { get; set; }

        /// <summary>
        /// Gets or Sets LoanAmortizationSchedule
        /// </summary>
        [DataMember(Name="loanAmortizationSchedule", EmitDefaultValue=false)]
        public List<LoanPaymentSchedule> LoanAmortizationSchedule { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummary
        /// </summary>
        [DataMember(Name="loanSummary", EmitDefaultValue=false)]
        public LoanSummary LoanSummary { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse {\n");
            sb.Append("  ListResponse: ").Append(ListResponse).Append("\n");
            sb.Append("  OrgCode: ").Append(OrgCode).Append("\n");
            sb.Append("  LoanAmortizationSchedule: ").Append(LoanAmortizationSchedule).Append("\n");
            sb.Append("  LoanSummary: ").Append(LoanSummary).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse);
        }

        /// <summary>
        /// Returns true if RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanPaymentSchedulesResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ListResponse == input.ListResponse ||
                    (this.ListResponse != null &&
                    this.ListResponse.Equals(input.ListResponse))
                ) && 
                (
                    this.OrgCode == input.OrgCode ||
                    (this.OrgCode != null &&
                    this.OrgCode.Equals(input.OrgCode))
                ) && 
                (
                    this.LoanAmortizationSchedule == input.LoanAmortizationSchedule ||
                    this.LoanAmortizationSchedule != null &&
                    input.LoanAmortizationSchedule != null &&
                    this.LoanAmortizationSchedule.SequenceEqual(input.LoanAmortizationSchedule)
                ) && 
                (
                    this.LoanSummary == input.LoanSummary ||
                    (this.LoanSummary != null &&
                    this.LoanSummary.Equals(input.LoanSummary))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ListResponse != null)
                    hashCode = hashCode * 59 + this.ListResponse.GetHashCode();
                if (this.OrgCode != null)
                    hashCode = hashCode * 59 + this.OrgCode.GetHashCode();
                if (this.LoanAmortizationSchedule != null)
                    hashCode = hashCode * 59 + this.LoanAmortizationSchedule.GetHashCode();
                if (this.LoanSummary != null)
                    hashCode = hashCode * 59 + this.LoanSummary.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
