/* 
 * Cards
 *
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CreditCardsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CreditCardsApiTests
    {
        private CreditCardsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CreditCardsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CreditCardsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CreditCardsApi
            //Assert.IsInstanceOfType(typeof(CreditCardsApi), instance, "instance is a CreditCardsApi");
        }

        /// <summary>
        /// Test CompanionCardApplication
        /// </summary>
        [Test]
        public void CompanionCardApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string contentType = null;
            //string clientId = null;
            //string cardId = null;
            //CompanionCardApplicationRequest body = null;
            //string clientDetails = null;
            //var response = instance.CompanionCardApplication(authorization, uuid, accept, contentType, clientId, cardId, body, clientDetails);
            //Assert.IsInstanceOf<CompanionCardApplicationResponse> (response, "response is CompanionCardApplicationResponse");
        }
        /// <summary>
        /// Test EasyPaymentPlansTransactionEligibility
        /// </summary>
        [Test]
        public void EasyPaymentPlansTransactionEligibilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string cardId = null;
            //double? eligbleLoanAmount = null;
            //string clientDetails = null;
            //var response = instance.EasyPaymentPlansTransactionEligibility(authorization, uuid, accept, clientId, cardId, eligbleLoanAmount, clientDetails);
            //Assert.IsInstanceOf<EasyPaymentPlansTransactionEligibilityResponse> (response, "response is EasyPaymentPlansTransactionEligibilityResponse");
        }
        /// <summary>
        /// Test V1CreditCardsCardIdEasyPaymentPlansBookingsPost
        /// </summary>
        [Test]
        public void V1CreditCardsCardIdEasyPaymentPlansBookingsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EppLoanBookingRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string cardId = null;
            //string clientDetails = null;
            //var response = instance.V1CreditCardsCardIdEasyPaymentPlansBookingsPost(body, authorization, uuid, accept, clientId, contentType, cardId, clientDetails);
            //Assert.IsInstanceOf<EppLoanBookingResponse> (response, "response is EppLoanBookingResponse");
        }
        /// <summary>
        /// Test V1CreditCardsCardIdEasyPaymentPlansEligibilityGet
        /// </summary>
        [Test]
        public void V1CreditCardsCardIdEasyPaymentPlansEligibilityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string cardId = null;
            //string eppLoanBookingType = null;
            //string clientDetails = null;
            //string nextStartIndex = null;
            //var response = instance.V1CreditCardsCardIdEasyPaymentPlansEligibilityGet(authorization, uuid, accept, clientId, cardId, eppLoanBookingType, clientDetails, nextStartIndex);
            //Assert.IsInstanceOf<EasyPaymentPlansEligibilityInquiryResponse> (response, "response is EasyPaymentPlansEligibilityInquiryResponse");
        }
        /// <summary>
        /// Test V1CreditCardsCardIdEasyPaymentPlansRepaymentSchedulesGet
        /// </summary>
        [Test]
        public void V1CreditCardsCardIdEasyPaymentPlansRepaymentSchedulesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string cardId = null;
            //double? loanAmount = null;
            //decimal? tenor = null;
            //string clientDetails = null;
            //string nextStartIndex = null;
            //var response = instance.V1CreditCardsCardIdEasyPaymentPlansRepaymentSchedulesGet(authorization, uuid, accept, clientId, cardId, loanAmount, tenor, clientDetails, nextStartIndex);
            //Assert.IsInstanceOf<EppRepaymentScheuleResponse> (response, "response is EppRepaymentScheuleResponse");
        }
        /// <summary>
        /// Test V1CreditCardsCardIdEasyPaymentPlansSearchPost
        /// </summary>
        [Test]
        public void V1CreditCardsCardIdEasyPaymentPlansSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EppRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string cardId = null;
            //string clientDetails = null;
            //var response = instance.V1CreditCardsCardIdEasyPaymentPlansSearchPost(body, authorization, uuid, accept, clientId, cardId, clientDetails);
            //Assert.IsInstanceOf<EppResponse> (response, "response is EppResponse");
        }
        /// <summary>
        /// Test V1CreditCardsCardIdSupplementaryCardsGet
        /// </summary>
        [Test]
        public void V1CreditCardsCardIdSupplementaryCardsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string cardId = null;
            //string clientDetails = null;
            //var response = instance.V1CreditCardsCardIdSupplementaryCardsGet(authorization, uuid, accept, clientId, cardId, clientDetails);
            //Assert.IsInstanceOf<SupplementaryCardListingResponse> (response, "response is SupplementaryCardListingResponse");
        }
        /// <summary>
        /// Test V1CreditCardsStatementsSummarySearchPost
        /// </summary>
        [Test]
        public void V1CreditCardsStatementsSummarySearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardStatementSummaryRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string clientDetails = null;
            //var response = instance.V1CreditCardsStatementsSummarySearchPost(body, authorization, uuid, accept, clientId, contentType, clientDetails);
            //Assert.IsInstanceOf<CardStatementSummaryResponse> (response, "response is CardStatementSummaryResponse");
        }
    }

}
