/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ErrorResponse;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * RewardAccount
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class RewardAccount {
  @SerializedName("cardId")
  private String cardId = null;

  @SerializedName("displayCardNumber")
  private String displayCardNumber = null;

  @SerializedName("availablePointBalance")
  private BigDecimal availablePointBalance = null;

  @SerializedName("rewardCategoryCode")
  private String rewardCategoryCode = null;

  @SerializedName("lastStatementPointBalance")
  private Double lastStatementPointBalance = null;

  @SerializedName("pointsEarned")
  private Double pointsEarned = null;

  @SerializedName("rewardAccountErrorDetails")
  private ErrorResponse rewardAccountErrorDetails = null;

  public RewardAccount cardId(String cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * The card id  in encrypted format
   * @return cardId
  **/
  @Schema(example = "3255613852316f2b4d4d796c344e38756339654972776f663745446e6d4c32486f455a4165374a476858343d", required = true, description = "The card id  in encrypted format")
  public String getCardId() {
    return cardId;
  }

  public void setCardId(String cardId) {
    this.cardId = cardId;
  }

  public RewardAccount displayCardNumber(String displayCardNumber) {
    this.displayCardNumber = displayCardNumber;
    return this;
  }

   /**
   * A masked card number that can be displayed to the customer.
   * @return displayCardNumber
  **/
  @Schema(example = "XXXXXXXXXXXX4521", required = true, description = "A masked card number that can be displayed to the customer.")
  public String getDisplayCardNumber() {
    return displayCardNumber;
  }

  public void setDisplayCardNumber(String displayCardNumber) {
    this.displayCardNumber = displayCardNumber;
  }

  public RewardAccount availablePointBalance(BigDecimal availablePointBalance) {
    this.availablePointBalance = availablePointBalance;
    return this;
  }

   /**
   * Number of rewards points or miles available.
   * @return availablePointBalance
  **/
  @Schema(example = "10000.0", required = true, description = "Number of rewards points or miles available.")
  public BigDecimal getAvailablePointBalance() {
    return availablePointBalance;
  }

  public void setAvailablePointBalance(BigDecimal availablePointBalance) {
    this.availablePointBalance = availablePointBalance;
  }

  public RewardAccount rewardCategoryCode(String rewardCategoryCode) {
    this.rewardCategoryCode = rewardCategoryCode;
    return this;
  }

   /**
   * Reward category code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{rewardCategoryCode} resource to get valid value of this field with description.
   * @return rewardCategoryCode
  **/
  @Schema(example = "POINTS", description = "Reward category code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{rewardCategoryCode} resource to get valid value of this field with description.")
  public String getRewardCategoryCode() {
    return rewardCategoryCode;
  }

  public void setRewardCategoryCode(String rewardCategoryCode) {
    this.rewardCategoryCode = rewardCategoryCode;
  }

  public RewardAccount lastStatementPointBalance(Double lastStatementPointBalance) {
    this.lastStatementPointBalance = lastStatementPointBalance;
    return this;
  }

   /**
   * Number of rewards points or miles available since last statement balance.
   * @return lastStatementPointBalance
  **/
  @Schema(example = "15000.25", description = "Number of rewards points or miles available since last statement balance.")
  public Double getLastStatementPointBalance() {
    return lastStatementPointBalance;
  }

  public void setLastStatementPointBalance(Double lastStatementPointBalance) {
    this.lastStatementPointBalance = lastStatementPointBalance;
  }

  public RewardAccount pointsEarned(Double pointsEarned) {
    this.pointsEarned = pointsEarned;
    return this;
  }

   /**
   * Number of rewards points or miles earned since last statement date.
   * @return pointsEarned
  **/
  @Schema(example = "2250.15", description = "Number of rewards points or miles earned since last statement date.")
  public Double getPointsEarned() {
    return pointsEarned;
  }

  public void setPointsEarned(Double pointsEarned) {
    this.pointsEarned = pointsEarned;
  }

  public RewardAccount rewardAccountErrorDetails(ErrorResponse rewardAccountErrorDetails) {
    this.rewardAccountErrorDetails = rewardAccountErrorDetails;
    return this;
  }

   /**
   * Get rewardAccountErrorDetails
   * @return rewardAccountErrorDetails
  **/
  @Schema(description = "")
  public ErrorResponse getRewardAccountErrorDetails() {
    return rewardAccountErrorDetails;
  }

  public void setRewardAccountErrorDetails(ErrorResponse rewardAccountErrorDetails) {
    this.rewardAccountErrorDetails = rewardAccountErrorDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RewardAccount rewardAccount = (RewardAccount) o;
    return Objects.equals(this.cardId, rewardAccount.cardId) &&
        Objects.equals(this.displayCardNumber, rewardAccount.displayCardNumber) &&
        Objects.equals(this.availablePointBalance, rewardAccount.availablePointBalance) &&
        Objects.equals(this.rewardCategoryCode, rewardAccount.rewardCategoryCode) &&
        Objects.equals(this.lastStatementPointBalance, rewardAccount.lastStatementPointBalance) &&
        Objects.equals(this.pointsEarned, rewardAccount.pointsEarned) &&
        Objects.equals(this.rewardAccountErrorDetails, rewardAccount.rewardAccountErrorDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardId, displayCardNumber, availablePointBalance, rewardCategoryCode, lastStatementPointBalance, pointsEarned, rewardAccountErrorDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RewardAccount {\n");
    
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    displayCardNumber: ").append(toIndentedString(displayCardNumber)).append("\n");
    sb.append("    availablePointBalance: ").append(toIndentedString(availablePointBalance)).append("\n");
    sb.append("    rewardCategoryCode: ").append(toIndentedString(rewardCategoryCode)).append("\n");
    sb.append("    lastStatementPointBalance: ").append(toIndentedString(lastStatementPointBalance)).append("\n");
    sb.append("    pointsEarned: ").append(toIndentedString(pointsEarned)).append("\n");
    sb.append("    rewardAccountErrorDetails: ").append(toIndentedString(rewardAccountErrorDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
