/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DataFeesCharges;
import io.swagger.client.model.DataProductDetails;
import io.swagger.client.model.DataProductOfferings;
import io.swagger.client.model.DataPromotions;
import io.swagger.client.model.DataRequirements;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Data
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class Data {
  @SerializedName("product_details")
  private DataProductDetails productDetails = null;

  @SerializedName("requirements")
  private DataRequirements requirements = null;

  @SerializedName("product_offerings")
  private DataProductOfferings productOfferings = null;

  @SerializedName("fees_charges")
  private DataFeesCharges feesCharges = null;

  @SerializedName("promotions")
  private DataPromotions promotions = null;

  public Data productDetails(DataProductDetails productDetails) {
    this.productDetails = productDetails;
    return this;
  }

   /**
   * Get productDetails
   * @return productDetails
  **/
  @Schema(description = "")
  public DataProductDetails getProductDetails() {
    return productDetails;
  }

  public void setProductDetails(DataProductDetails productDetails) {
    this.productDetails = productDetails;
  }

  public Data requirements(DataRequirements requirements) {
    this.requirements = requirements;
    return this;
  }

   /**
   * Get requirements
   * @return requirements
  **/
  @Schema(description = "")
  public DataRequirements getRequirements() {
    return requirements;
  }

  public void setRequirements(DataRequirements requirements) {
    this.requirements = requirements;
  }

  public Data productOfferings(DataProductOfferings productOfferings) {
    this.productOfferings = productOfferings;
    return this;
  }

   /**
   * Get productOfferings
   * @return productOfferings
  **/
  @Schema(description = "")
  public DataProductOfferings getProductOfferings() {
    return productOfferings;
  }

  public void setProductOfferings(DataProductOfferings productOfferings) {
    this.productOfferings = productOfferings;
  }

  public Data feesCharges(DataFeesCharges feesCharges) {
    this.feesCharges = feesCharges;
    return this;
  }

   /**
   * Get feesCharges
   * @return feesCharges
  **/
  @Schema(description = "")
  public DataFeesCharges getFeesCharges() {
    return feesCharges;
  }

  public void setFeesCharges(DataFeesCharges feesCharges) {
    this.feesCharges = feesCharges;
  }

  public Data promotions(DataPromotions promotions) {
    this.promotions = promotions;
    return this;
  }

   /**
   * Get promotions
   * @return promotions
  **/
  @Schema(description = "")
  public DataPromotions getPromotions() {
    return promotions;
  }

  public void setPromotions(DataPromotions promotions) {
    this.promotions = promotions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Data data = (Data) o;
    return Objects.equals(this.productDetails, data.productDetails) &&
        Objects.equals(this.requirements, data.requirements) &&
        Objects.equals(this.productOfferings, data.productOfferings) &&
        Objects.equals(this.feesCharges, data.feesCharges) &&
        Objects.equals(this.promotions, data.promotions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productDetails, requirements, productOfferings, feesCharges, promotions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Data {\n");
    
    sb.append("    productDetails: ").append(toIndentedString(productDetails)).append("\n");
    sb.append("    requirements: ").append(toIndentedString(requirements)).append("\n");
    sb.append("    productOfferings: ").append(toIndentedString(productOfferings)).append("\n");
    sb.append("    feesCharges: ").append(toIndentedString(feesCharges)).append("\n");
    sb.append("    promotions: ").append(toIndentedString(promotions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
