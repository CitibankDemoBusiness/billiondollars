/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AmortizationSchedule;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse {
  @SerializedName("nextStartIndex")
  private String nextStartIndex = null;

  @SerializedName("totalLoanCost")
  private Double totalLoanCost = null;

  @SerializedName("amortizationSchedule")
  private AmortizationSchedule amortizationSchedule = null;

  @SerializedName("binaryData")
  private String binaryData = null;

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse nextStartIndex(String nextStartIndex) {
    this.nextStartIndex = nextStartIndex;
    return this;
  }

   /**
   * The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.
   * @return nextStartIndex
  **/
  @Schema(description = "The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.")
  public String getNextStartIndex() {
    return nextStartIndex;
  }

  public void setNextStartIndex(String nextStartIndex) {
    this.nextStartIndex = nextStartIndex;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse totalLoanCost(Double totalLoanCost) {
    this.totalLoanCost = totalLoanCost;
    return this;
  }

   /**
   * This amount is the full cost of credit which includes the total principal and total interest.
   * @return totalLoanCost
  **/
  @Schema(example = "1258.0", description = "This amount is the full cost of credit which includes the total principal and total interest.")
  public Double getTotalLoanCost() {
    return totalLoanCost;
  }

  public void setTotalLoanCost(Double totalLoanCost) {
    this.totalLoanCost = totalLoanCost;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse amortizationSchedule(AmortizationSchedule amortizationSchedule) {
    this.amortizationSchedule = amortizationSchedule;
    return this;
  }

   /**
   * Get amortizationSchedule
   * @return amortizationSchedule
  **/
  @Schema(description = "")
  public AmortizationSchedule getAmortizationSchedule() {
    return amortizationSchedule;
  }

  public void setAmortizationSchedule(AmortizationSchedule amortizationSchedule) {
    this.amortizationSchedule = amortizationSchedule;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse binaryData(String binaryData) {
    this.binaryData = binaryData;
    return this;
  }

   /**
   * This field contains binary data of the Repayment Schedule.
   * @return binaryData
  **/
  @Schema(example = "0101010001101000011010010111001100100000011001100", description = "This field contains binary data of the Repayment Schedule.")
  public String getBinaryData() {
    return binaryData;
  }

  public void setBinaryData(String binaryData) {
    this.binaryData = binaryData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse = (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse) o;
    return Objects.equals(this.nextStartIndex, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse.nextStartIndex) &&
        Objects.equals(this.totalLoanCost, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse.totalLoanCost) &&
        Objects.equals(this.amortizationSchedule, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse.amortizationSchedule) &&
        Objects.equals(this.binaryData, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse.binaryData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextStartIndex, totalLoanCost, amortizationSchedule, binaryData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse {\n");
    
    sb.append("    nextStartIndex: ").append(toIndentedString(nextStartIndex)).append("\n");
    sb.append("    totalLoanCost: ").append(toIndentedString(totalLoanCost)).append("\n");
    sb.append("    amortizationSchedule: ").append(toIndentedString(amortizationSchedule)).append("\n");
    sb.append("    binaryData: ").append(toIndentedString(binaryData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
