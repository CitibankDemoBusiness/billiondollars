/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * RewardPoints
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class RewardPoints {
  @SerializedName("rewardCategoryCode")
  private String rewardCategoryCode = null;

  @SerializedName("basePointBalance")
  private BigDecimal basePointBalance = null;

  @SerializedName("earnedRewardPoints")
  private BigDecimal earnedRewardPoints = null;

  @SerializedName("bonusRewardPoints")
  private BigDecimal bonusRewardPoints = null;

  @SerializedName("adjustedRewardPoints")
  private BigDecimal adjustedRewardPoints = null;

  @SerializedName("redeemedRewardPoints")
  private BigDecimal redeemedRewardPoints = null;

  @SerializedName("availablePointBalance")
  private BigDecimal availablePointBalance = null;

  public RewardPoints rewardCategoryCode(String rewardCategoryCode) {
    this.rewardCategoryCode = rewardCategoryCode;
    return this;
  }

   /**
   * Reward category code. This is a reference data field. Please use /v1/utilities/referenceData/{rewardCategoryCode} resource to get valid value of this field with description.
   * @return rewardCategoryCode
  **/
  @Schema(example = "POINTS", description = "Reward category code. This is a reference data field. Please use /v1/utilities/referenceData/{rewardCategoryCode} resource to get valid value of this field with description.")
  public String getRewardCategoryCode() {
    return rewardCategoryCode;
  }

  public void setRewardCategoryCode(String rewardCategoryCode) {
    this.rewardCategoryCode = rewardCategoryCode;
  }

  public RewardPoints basePointBalance(BigDecimal basePointBalance) {
    this.basePointBalance = basePointBalance;
    return this;
  }

   /**
   * Points or Miles accumulated by the user at the start of the statement period
   * @return basePointBalance
  **/
  @Schema(example = "5000.0", description = "Points or Miles accumulated by the user at the start of the statement period")
  public BigDecimal getBasePointBalance() {
    return basePointBalance;
  }

  public void setBasePointBalance(BigDecimal basePointBalance) {
    this.basePointBalance = basePointBalance;
  }

  public RewardPoints earnedRewardPoints(BigDecimal earnedRewardPoints) {
    this.earnedRewardPoints = earnedRewardPoints;
    return this;
  }

   /**
   * Points or Miles earned by the user for the statement period.
   * @return earnedRewardPoints
  **/
  @Schema(example = "11500.0", description = "Points or Miles earned by the user for the statement period.")
  public BigDecimal getEarnedRewardPoints() {
    return earnedRewardPoints;
  }

  public void setEarnedRewardPoints(BigDecimal earnedRewardPoints) {
    this.earnedRewardPoints = earnedRewardPoints;
  }

  public RewardPoints bonusRewardPoints(BigDecimal bonusRewardPoints) {
    this.bonusRewardPoints = bonusRewardPoints;
    return this;
  }

   /**
   * Bonus Points or Miles  earned by a user for the statement period. Bonus programs operate under the umbrella of a specific reward program since multiple bonus programs can be defined for one reward program.
   * @return bonusRewardPoints
  **/
  @Schema(example = "2000.0", description = "Bonus Points or Miles  earned by a user for the statement period. Bonus programs operate under the umbrella of a specific reward program since multiple bonus programs can be defined for one reward program.")
  public BigDecimal getBonusRewardPoints() {
    return bonusRewardPoints;
  }

  public void setBonusRewardPoints(BigDecimal bonusRewardPoints) {
    this.bonusRewardPoints = bonusRewardPoints;
  }

  public RewardPoints adjustedRewardPoints(BigDecimal adjustedRewardPoints) {
    this.adjustedRewardPoints = adjustedRewardPoints;
    return this;
  }

   /**
   * Number of rewards points or miles adjusted for the user in the statement period. It will contain the value of adjusted points as a result of incorrect addition/redemption.
   * @return adjustedRewardPoints
  **/
  @Schema(example = "18500.0", description = "Number of rewards points or miles adjusted for the user in the statement period. It will contain the value of adjusted points as a result of incorrect addition/redemption.")
  public BigDecimal getAdjustedRewardPoints() {
    return adjustedRewardPoints;
  }

  public void setAdjustedRewardPoints(BigDecimal adjustedRewardPoints) {
    this.adjustedRewardPoints = adjustedRewardPoints;
  }

  public RewardPoints redeemedRewardPoints(BigDecimal redeemedRewardPoints) {
    this.redeemedRewardPoints = redeemedRewardPoints;
    return this;
  }

   /**
   * Bonus Points or Miles  redeemed  by a user for the statement period.
   * @return redeemedRewardPoints
  **/
  @Schema(example = "8500.0", description = "Bonus Points or Miles  redeemed  by a user for the statement period.")
  public BigDecimal getRedeemedRewardPoints() {
    return redeemedRewardPoints;
  }

  public void setRedeemedRewardPoints(BigDecimal redeemedRewardPoints) {
    this.redeemedRewardPoints = redeemedRewardPoints;
  }

  public RewardPoints availablePointBalance(BigDecimal availablePointBalance) {
    this.availablePointBalance = availablePointBalance;
    return this;
  }

   /**
   * This field indicate the reward points or miles currently available to the user.
   * @return availablePointBalance
  **/
  @Schema(example = "10000.0", description = "This field indicate the reward points or miles currently available to the user.")
  public BigDecimal getAvailablePointBalance() {
    return availablePointBalance;
  }

  public void setAvailablePointBalance(BigDecimal availablePointBalance) {
    this.availablePointBalance = availablePointBalance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RewardPoints rewardPoints = (RewardPoints) o;
    return Objects.equals(this.rewardCategoryCode, rewardPoints.rewardCategoryCode) &&
        Objects.equals(this.basePointBalance, rewardPoints.basePointBalance) &&
        Objects.equals(this.earnedRewardPoints, rewardPoints.earnedRewardPoints) &&
        Objects.equals(this.bonusRewardPoints, rewardPoints.bonusRewardPoints) &&
        Objects.equals(this.adjustedRewardPoints, rewardPoints.adjustedRewardPoints) &&
        Objects.equals(this.redeemedRewardPoints, rewardPoints.redeemedRewardPoints) &&
        Objects.equals(this.availablePointBalance, rewardPoints.availablePointBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rewardCategoryCode, basePointBalance, earnedRewardPoints, bonusRewardPoints, adjustedRewardPoints, redeemedRewardPoints, availablePointBalance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RewardPoints {\n");
    
    sb.append("    rewardCategoryCode: ").append(toIndentedString(rewardCategoryCode)).append("\n");
    sb.append("    basePointBalance: ").append(toIndentedString(basePointBalance)).append("\n");
    sb.append("    earnedRewardPoints: ").append(toIndentedString(earnedRewardPoints)).append("\n");
    sb.append("    bonusRewardPoints: ").append(toIndentedString(bonusRewardPoints)).append("\n");
    sb.append("    adjustedRewardPoints: ").append(toIndentedString(adjustedRewardPoints)).append("\n");
    sb.append("    redeemedRewardPoints: ").append(toIndentedString(redeemedRewardPoints)).append("\n");
    sb.append("    availablePointBalance: ").append(toIndentedString(availablePointBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
