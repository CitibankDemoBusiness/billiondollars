/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CountryCodes;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * OverseasTravelPlanAddRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class OverseasTravelPlanAddRequest {
  @SerializedName("countryCodes")
  private List<CountryCodes> countryCodes = null;

  @SerializedName("travelPlanStartDate")
  private LocalDate travelPlanStartDate = null;

  @SerializedName("travelPlanEndDate")
  private LocalDate travelPlanEndDate = null;

  public OverseasTravelPlanAddRequest countryCodes(List<CountryCodes> countryCodes) {
    this.countryCodes = countryCodes;
    return this;
  }

  public OverseasTravelPlanAddRequest addCountryCodesItem(CountryCodes countryCodesItem) {
    if (this.countryCodes == null) {
      this.countryCodes = new ArrayList<CountryCodes>();
    }
    this.countryCodes.add(countryCodesItem);
    return this;
  }

   /**
   * Get countryCodes
   * @return countryCodes
  **/
  @Schema(description = "")
  public List<CountryCodes> getCountryCodes() {
    return countryCodes;
  }

  public void setCountryCodes(List<CountryCodes> countryCodes) {
    this.countryCodes = countryCodes;
  }

  public OverseasTravelPlanAddRequest travelPlanStartDate(LocalDate travelPlanStartDate) {
    this.travelPlanStartDate = travelPlanStartDate;
    return this;
  }

   /**
   * Travel plan start date in ISO 8601 date format YYYY-MM-DD
   * @return travelPlanStartDate
  **/
  @Schema(example = "Tue May 01 00:00:00 UTC 2018", required = true, description = "Travel plan start date in ISO 8601 date format YYYY-MM-DD")
  public LocalDate getTravelPlanStartDate() {
    return travelPlanStartDate;
  }

  public void setTravelPlanStartDate(LocalDate travelPlanStartDate) {
    this.travelPlanStartDate = travelPlanStartDate;
  }

  public OverseasTravelPlanAddRequest travelPlanEndDate(LocalDate travelPlanEndDate) {
    this.travelPlanEndDate = travelPlanEndDate;
    return this;
  }

   /**
   * Travel plan end date in ISO 8601 date format YYYY-MM-DD
   * @return travelPlanEndDate
  **/
  @Schema(example = "Sun Jul 01 00:00:00 UTC 2018", required = true, description = "Travel plan end date in ISO 8601 date format YYYY-MM-DD")
  public LocalDate getTravelPlanEndDate() {
    return travelPlanEndDate;
  }

  public void setTravelPlanEndDate(LocalDate travelPlanEndDate) {
    this.travelPlanEndDate = travelPlanEndDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OverseasTravelPlanAddRequest overseasTravelPlanAddRequest = (OverseasTravelPlanAddRequest) o;
    return Objects.equals(this.countryCodes, overseasTravelPlanAddRequest.countryCodes) &&
        Objects.equals(this.travelPlanStartDate, overseasTravelPlanAddRequest.travelPlanStartDate) &&
        Objects.equals(this.travelPlanEndDate, overseasTravelPlanAddRequest.travelPlanEndDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countryCodes, travelPlanStartDate, travelPlanEndDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OverseasTravelPlanAddRequest {\n");
    
    sb.append("    countryCodes: ").append(toIndentedString(countryCodes)).append("\n");
    sb.append("    travelPlanStartDate: ").append(toIndentedString(travelPlanStartDate)).append("\n");
    sb.append("    travelPlanEndDate: ").append(toIndentedString(travelPlanEndDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
