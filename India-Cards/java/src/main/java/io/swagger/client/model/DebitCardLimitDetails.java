/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DebitCardLimitDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class DebitCardLimitDetails {
  @SerializedName("posSpendingLimitAmount")
  private Double posSpendingLimitAmount = null;

  @SerializedName("dailyAtmWithdrawalLimitAmount")
  private Double dailyAtmWithdrawalLimitAmount = null;

  @SerializedName("dailyInternetPurchaseLimitAmount")
  private Double dailyInternetPurchaseLimitAmount = null;

  public DebitCardLimitDetails posSpendingLimitAmount(Double posSpendingLimitAmount) {
    this.posSpendingLimitAmount = posSpendingLimitAmount;
    return this;
  }

   /**
   * Field to indicate the limit on merchant POS spending amount per transaction
   * @return posSpendingLimitAmount
  **/
  @Schema(example = "5000.0", description = "Field to indicate the limit on merchant POS spending amount per transaction")
  public Double getPosSpendingLimitAmount() {
    return posSpendingLimitAmount;
  }

  public void setPosSpendingLimitAmount(Double posSpendingLimitAmount) {
    this.posSpendingLimitAmount = posSpendingLimitAmount;
  }

  public DebitCardLimitDetails dailyAtmWithdrawalLimitAmount(Double dailyAtmWithdrawalLimitAmount) {
    this.dailyAtmWithdrawalLimitAmount = dailyAtmWithdrawalLimitAmount;
    return this;
  }

   /**
   * Field to indicate the limit on local ATM withdrawal amount
   * @return dailyAtmWithdrawalLimitAmount
  **/
  @Schema(example = "2000.0", description = "Field to indicate the limit on local ATM withdrawal amount")
  public Double getDailyAtmWithdrawalLimitAmount() {
    return dailyAtmWithdrawalLimitAmount;
  }

  public void setDailyAtmWithdrawalLimitAmount(Double dailyAtmWithdrawalLimitAmount) {
    this.dailyAtmWithdrawalLimitAmount = dailyAtmWithdrawalLimitAmount;
  }

  public DebitCardLimitDetails dailyInternetPurchaseLimitAmount(Double dailyInternetPurchaseLimitAmount) {
    this.dailyInternetPurchaseLimitAmount = dailyInternetPurchaseLimitAmount;
    return this;
  }

   /**
   * Field to indicate the limit on internet purchase  in a day
   * @return dailyInternetPurchaseLimitAmount
  **/
  @Schema(example = "5000.0", description = "Field to indicate the limit on internet purchase  in a day")
  public Double getDailyInternetPurchaseLimitAmount() {
    return dailyInternetPurchaseLimitAmount;
  }

  public void setDailyInternetPurchaseLimitAmount(Double dailyInternetPurchaseLimitAmount) {
    this.dailyInternetPurchaseLimitAmount = dailyInternetPurchaseLimitAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DebitCardLimitDetails debitCardLimitDetails = (DebitCardLimitDetails) o;
    return Objects.equals(this.posSpendingLimitAmount, debitCardLimitDetails.posSpendingLimitAmount) &&
        Objects.equals(this.dailyAtmWithdrawalLimitAmount, debitCardLimitDetails.dailyAtmWithdrawalLimitAmount) &&
        Objects.equals(this.dailyInternetPurchaseLimitAmount, debitCardLimitDetails.dailyInternetPurchaseLimitAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(posSpendingLimitAmount, dailyAtmWithdrawalLimitAmount, dailyInternetPurchaseLimitAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DebitCardLimitDetails {\n");
    
    sb.append("    posSpendingLimitAmount: ").append(toIndentedString(posSpendingLimitAmount)).append("\n");
    sb.append("    dailyAtmWithdrawalLimitAmount: ").append(toIndentedString(dailyAtmWithdrawalLimitAmount)).append("\n");
    sb.append("    dailyInternetPurchaseLimitAmount: ").append(toIndentedString(dailyInternetPurchaseLimitAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
