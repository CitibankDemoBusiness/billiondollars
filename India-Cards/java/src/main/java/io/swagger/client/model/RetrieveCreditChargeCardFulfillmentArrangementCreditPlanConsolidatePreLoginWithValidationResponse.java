/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse {
  @SerializedName("initialFeeAmount")
  private Double initialFeeAmount = null;

  @SerializedName("closureInterestAmount")
  private Double closureInterestAmount = null;

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse initialFeeAmount(Double initialFeeAmount) {
    this.initialFeeAmount = initialFeeAmount;
    return this;
  }

   /**
   * First month fee/interest charge incurred from booking date to next statement cycle date
   * @return initialFeeAmount
  **/
  @Schema(example = "100.25", description = "First month fee/interest charge incurred from booking date to next statement cycle date")
  public Double getInitialFeeAmount() {
    return initialFeeAmount;
  }

  public void setInitialFeeAmount(Double initialFeeAmount) {
    this.initialFeeAmount = initialFeeAmount;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse closureInterestAmount(Double closureInterestAmount) {
    this.closureInterestAmount = closureInterestAmount;
    return this;
  }

   /**
   * Closure Interest accrued from last cycle/booking date till date, to be charged for each of the loans getting closed due to Top up post merger
   * @return closureInterestAmount
  **/
  @Schema(example = "100.25", description = "Closure Interest accrued from last cycle/booking date till date, to be charged for each of the loans getting closed due to Top up post merger")
  public Double getClosureInterestAmount() {
    return closureInterestAmount;
  }

  public void setClosureInterestAmount(Double closureInterestAmount) {
    this.closureInterestAmount = closureInterestAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse = (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse) o;
    return Objects.equals(this.initialFeeAmount, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse.initialFeeAmount) &&
        Objects.equals(this.closureInterestAmount, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse.closureInterestAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initialFeeAmount, closureInterestAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithValidationResponse {\n");
    
    sb.append("    initialFeeAmount: ").append(toIndentedString(initialFeeAmount)).append("\n");
    sb.append("    closureInterestAmount: ").append(toIndentedString(closureInterestAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
