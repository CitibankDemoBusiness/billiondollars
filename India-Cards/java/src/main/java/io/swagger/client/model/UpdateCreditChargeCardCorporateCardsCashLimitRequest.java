/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CorporateOfficerDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * UpdateCreditChargeCardCorporateCardsCashLimitRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class UpdateCreditChargeCardCorporateCardsCashLimitRequest {
  @SerializedName("tokenizedCardNumber")
  private String tokenizedCardNumber = null;

  @SerializedName("corporateOfficerDetails")
  private CorporateOfficerDetails corporateOfficerDetails = null;

  @SerializedName("maximumDailyCashLimitAmount")
  private Long maximumDailyCashLimitAmount = null;

  @SerializedName("maximumWeeklyCashLimitAmount")
  private Long maximumWeeklyCashLimitAmount = null;

  @SerializedName("maximumMonthlyCashLimitAmount")
  private Long maximumMonthlyCashLimitAmount = null;

  @SerializedName("maximumIndividualTxnLimitAmount")
  private Long maximumIndividualTxnLimitAmount = null;

  public UpdateCreditChargeCardCorporateCardsCashLimitRequest tokenizedCardNumber(String tokenizedCardNumber) {
    this.tokenizedCardNumber = tokenizedCardNumber;
    return this;
  }

   /**
   * Tokenized card number
   * @return tokenizedCardNumber
  **/
  @Schema(example = "asdsdf2341d5166h", required = true, description = "Tokenized card number")
  public String getTokenizedCardNumber() {
    return tokenizedCardNumber;
  }

  public void setTokenizedCardNumber(String tokenizedCardNumber) {
    this.tokenizedCardNumber = tokenizedCardNumber;
  }

  public UpdateCreditChargeCardCorporateCardsCashLimitRequest corporateOfficerDetails(CorporateOfficerDetails corporateOfficerDetails) {
    this.corporateOfficerDetails = corporateOfficerDetails;
    return this;
  }

   /**
   * Get corporateOfficerDetails
   * @return corporateOfficerDetails
  **/
  @Schema(description = "")
  public CorporateOfficerDetails getCorporateOfficerDetails() {
    return corporateOfficerDetails;
  }

  public void setCorporateOfficerDetails(CorporateOfficerDetails corporateOfficerDetails) {
    this.corporateOfficerDetails = corporateOfficerDetails;
  }

  public UpdateCreditChargeCardCorporateCardsCashLimitRequest maximumDailyCashLimitAmount(Long maximumDailyCashLimitAmount) {
    this.maximumDailyCashLimitAmount = maximumDailyCashLimitAmount;
    return this;
  }

   /**
   * This is the max daily Cash limit Amount allowed for the cardholder
   * @return maximumDailyCashLimitAmount
  **/
  @Schema(example = "25000", description = "This is the max daily Cash limit Amount allowed for the cardholder")
  public Long getMaximumDailyCashLimitAmount() {
    return maximumDailyCashLimitAmount;
  }

  public void setMaximumDailyCashLimitAmount(Long maximumDailyCashLimitAmount) {
    this.maximumDailyCashLimitAmount = maximumDailyCashLimitAmount;
  }

  public UpdateCreditChargeCardCorporateCardsCashLimitRequest maximumWeeklyCashLimitAmount(Long maximumWeeklyCashLimitAmount) {
    this.maximumWeeklyCashLimitAmount = maximumWeeklyCashLimitAmount;
    return this;
  }

   /**
   * This is the max weekly Cash limit Amount allowed for the cardholder
   * @return maximumWeeklyCashLimitAmount
  **/
  @Schema(example = "25000", description = "This is the max weekly Cash limit Amount allowed for the cardholder")
  public Long getMaximumWeeklyCashLimitAmount() {
    return maximumWeeklyCashLimitAmount;
  }

  public void setMaximumWeeklyCashLimitAmount(Long maximumWeeklyCashLimitAmount) {
    this.maximumWeeklyCashLimitAmount = maximumWeeklyCashLimitAmount;
  }

  public UpdateCreditChargeCardCorporateCardsCashLimitRequest maximumMonthlyCashLimitAmount(Long maximumMonthlyCashLimitAmount) {
    this.maximumMonthlyCashLimitAmount = maximumMonthlyCashLimitAmount;
    return this;
  }

   /**
   * This is the max monthly Cash limit Amount allowed for the cardholder
   * @return maximumMonthlyCashLimitAmount
  **/
  @Schema(example = "25000", description = "This is the max monthly Cash limit Amount allowed for the cardholder")
  public Long getMaximumMonthlyCashLimitAmount() {
    return maximumMonthlyCashLimitAmount;
  }

  public void setMaximumMonthlyCashLimitAmount(Long maximumMonthlyCashLimitAmount) {
    this.maximumMonthlyCashLimitAmount = maximumMonthlyCashLimitAmount;
  }

  public UpdateCreditChargeCardCorporateCardsCashLimitRequest maximumIndividualTxnLimitAmount(Long maximumIndividualTxnLimitAmount) {
    this.maximumIndividualTxnLimitAmount = maximumIndividualTxnLimitAmount;
    return this;
  }

   /**
   * This is the max Cash Amount allowed for the cardholder per transaction
   * @return maximumIndividualTxnLimitAmount
  **/
  @Schema(example = "25000", description = "This is the max Cash Amount allowed for the cardholder per transaction")
  public Long getMaximumIndividualTxnLimitAmount() {
    return maximumIndividualTxnLimitAmount;
  }

  public void setMaximumIndividualTxnLimitAmount(Long maximumIndividualTxnLimitAmount) {
    this.maximumIndividualTxnLimitAmount = maximumIndividualTxnLimitAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateCreditChargeCardCorporateCardsCashLimitRequest updateCreditChargeCardCorporateCardsCashLimitRequest = (UpdateCreditChargeCardCorporateCardsCashLimitRequest) o;
    return Objects.equals(this.tokenizedCardNumber, updateCreditChargeCardCorporateCardsCashLimitRequest.tokenizedCardNumber) &&
        Objects.equals(this.corporateOfficerDetails, updateCreditChargeCardCorporateCardsCashLimitRequest.corporateOfficerDetails) &&
        Objects.equals(this.maximumDailyCashLimitAmount, updateCreditChargeCardCorporateCardsCashLimitRequest.maximumDailyCashLimitAmount) &&
        Objects.equals(this.maximumWeeklyCashLimitAmount, updateCreditChargeCardCorporateCardsCashLimitRequest.maximumWeeklyCashLimitAmount) &&
        Objects.equals(this.maximumMonthlyCashLimitAmount, updateCreditChargeCardCorporateCardsCashLimitRequest.maximumMonthlyCashLimitAmount) &&
        Objects.equals(this.maximumIndividualTxnLimitAmount, updateCreditChargeCardCorporateCardsCashLimitRequest.maximumIndividualTxnLimitAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tokenizedCardNumber, corporateOfficerDetails, maximumDailyCashLimitAmount, maximumWeeklyCashLimitAmount, maximumMonthlyCashLimitAmount, maximumIndividualTxnLimitAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateCreditChargeCardCorporateCardsCashLimitRequest {\n");
    
    sb.append("    tokenizedCardNumber: ").append(toIndentedString(tokenizedCardNumber)).append("\n");
    sb.append("    corporateOfficerDetails: ").append(toIndentedString(corporateOfficerDetails)).append("\n");
    sb.append("    maximumDailyCashLimitAmount: ").append(toIndentedString(maximumDailyCashLimitAmount)).append("\n");
    sb.append("    maximumWeeklyCashLimitAmount: ").append(toIndentedString(maximumWeeklyCashLimitAmount)).append("\n");
    sb.append("    maximumMonthlyCashLimitAmount: ").append(toIndentedString(maximumMonthlyCashLimitAmount)).append("\n");
    sb.append("    maximumIndividualTxnLimitAmount: ").append(toIndentedString(maximumIndividualTxnLimitAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
