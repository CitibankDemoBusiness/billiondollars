/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * LoanPaymentPlans
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class LoanPaymentPlans {
  @SerializedName("loanTenure")
  private String loanTenure = null;

  @SerializedName("baseInterestRate")
  private Double baseInterestRate = null;

  @SerializedName("annualPercentageRate")
  private Double annualPercentageRate = null;

  @SerializedName("installmentAmount")
  private Double installmentAmount = null;

  @SerializedName("interestRate")
  private Double interestRate = null;

  @SerializedName("installmentInterestAmount")
  private Double installmentInterestAmount = null;

  @SerializedName("firstTotalInstallmentAmount")
  private Double firstTotalInstallmentAmount = null;

  @SerializedName("loanCetPercentage")
  private Double loanCetPercentage = null;

  @SerializedName("fixedInterestRate")
  private Double fixedInterestRate = null;

  @SerializedName("loanBookingFeeIndicator")
  private String loanBookingFeeIndicator = null;

  @SerializedName("loanBookingFee")
  private Double loanBookingFee = null;

  @SerializedName("loanBookingFeePercentage")
  private Double loanBookingFeePercentage = null;

  @SerializedName("initialInterestAmount")
  private Double initialInterestAmount = null;

  @SerializedName("initialFeeAmount")
  private Double initialFeeAmount = null;

  public LoanPaymentPlans loanTenure(String loanTenure) {
    this.loanTenure = loanTenure;
    return this;
  }

   /**
   * Tenure of loan against card
   * @return loanTenure
  **/
  @Schema(example = "4", required = true, description = "Tenure of loan against card")
  public String getLoanTenure() {
    return loanTenure;
  }

  public void setLoanTenure(String loanTenure) {
    this.loanTenure = loanTenure;
  }

  public LoanPaymentPlans baseInterestRate(Double baseInterestRate) {
    this.baseInterestRate = baseInterestRate;
    return this;
  }

   /**
   * Base Interest rate
   * @return baseInterestRate
  **/
  @Schema(example = "1.2", description = "Base Interest rate")
  public Double getBaseInterestRate() {
    return baseInterestRate;
  }

  public void setBaseInterestRate(Double baseInterestRate) {
    this.baseInterestRate = baseInterestRate;
  }

  public LoanPaymentPlans annualPercentageRate(Double annualPercentageRate) {
    this.annualPercentageRate = annualPercentageRate;
    return this;
  }

   /**
   * Annual percentage rate of the loan
   * @return annualPercentageRate
  **/
  @Schema(example = "1.1", description = "Annual percentage rate of the loan")
  public Double getAnnualPercentageRate() {
    return annualPercentageRate;
  }

  public void setAnnualPercentageRate(Double annualPercentageRate) {
    this.annualPercentageRate = annualPercentageRate;
  }

  public LoanPaymentPlans installmentAmount(Double installmentAmount) {
    this.installmentAmount = installmentAmount;
    return this;
  }

   /**
   * Installment amount to be payed by customer in order to repay the loan.
   * @return installmentAmount
  **/
  @Schema(example = "10000.0", description = "Installment amount to be payed by customer in order to repay the loan.")
  public Double getInstallmentAmount() {
    return installmentAmount;
  }

  public void setInstallmentAmount(Double installmentAmount) {
    this.installmentAmount = installmentAmount;
  }

  public LoanPaymentPlans interestRate(Double interestRate) {
    this.interestRate = interestRate;
    return this;
  }

   /**
   * Interest rate for the loan
   * @return interestRate
  **/
  @Schema(example = "10.5", description = "Interest rate for the loan")
  public Double getInterestRate() {
    return interestRate;
  }

  public void setInterestRate(Double interestRate) {
    this.interestRate = interestRate;
  }

  public LoanPaymentPlans installmentInterestAmount(Double installmentInterestAmount) {
    this.installmentInterestAmount = installmentInterestAmount;
    return this;
  }

   /**
   * The interest amount to be paid as installment
   * @return installmentInterestAmount
  **/
  @Schema(example = "500.0", description = "The interest amount to be paid as installment")
  public Double getInstallmentInterestAmount() {
    return installmentInterestAmount;
  }

  public void setInstallmentInterestAmount(Double installmentInterestAmount) {
    this.installmentInterestAmount = installmentInterestAmount;
  }

  public LoanPaymentPlans firstTotalInstallmentAmount(Double firstTotalInstallmentAmount) {
    this.firstTotalInstallmentAmount = firstTotalInstallmentAmount;
    return this;
  }

   /**
   * Monthly total (Interest + Amount)
   * @return firstTotalInstallmentAmount
  **/
  @Schema(example = "1500.0", description = "Monthly total (Interest + Amount)")
  public Double getFirstTotalInstallmentAmount() {
    return firstTotalInstallmentAmount;
  }

  public void setFirstTotalInstallmentAmount(Double firstTotalInstallmentAmount) {
    this.firstTotalInstallmentAmount = firstTotalInstallmentAmount;
  }

  public LoanPaymentPlans loanCetPercentage(Double loanCetPercentage) {
    this.loanCetPercentage = loanCetPercentage;
    return this;
  }

   /**
   * Loan CET Percentage
   * @return loanCetPercentage
  **/
  @Schema(example = "15.0", description = "Loan CET Percentage")
  public Double getLoanCetPercentage() {
    return loanCetPercentage;
  }

  public void setLoanCetPercentage(Double loanCetPercentage) {
    this.loanCetPercentage = loanCetPercentage;
  }

  public LoanPaymentPlans fixedInterestRate(Double fixedInterestRate) {
    this.fixedInterestRate = fixedInterestRate;
    return this;
  }

   /**
   * Fixed interest rate
   * @return fixedInterestRate
  **/
  @Schema(example = "9.0", description = "Fixed interest rate")
  public Double getFixedInterestRate() {
    return fixedInterestRate;
  }

  public void setFixedInterestRate(Double fixedInterestRate) {
    this.fixedInterestRate = fixedInterestRate;
  }

  public LoanPaymentPlans loanBookingFeeIndicator(String loanBookingFeeIndicator) {
    this.loanBookingFeeIndicator = loanBookingFeeIndicator;
    return this;
  }

   /**
   * Loan booking fee indicator
   * @return loanBookingFeeIndicator
  **/
  @Schema(example = "Y", description = "Loan booking fee indicator")
  public String getLoanBookingFeeIndicator() {
    return loanBookingFeeIndicator;
  }

  public void setLoanBookingFeeIndicator(String loanBookingFeeIndicator) {
    this.loanBookingFeeIndicator = loanBookingFeeIndicator;
  }

  public LoanPaymentPlans loanBookingFee(Double loanBookingFee) {
    this.loanBookingFee = loanBookingFee;
    return this;
  }

   /**
   * Loan booking fee
   * @return loanBookingFee
  **/
  @Schema(example = "100.0", description = "Loan booking fee")
  public Double getLoanBookingFee() {
    return loanBookingFee;
  }

  public void setLoanBookingFee(Double loanBookingFee) {
    this.loanBookingFee = loanBookingFee;
  }

  public LoanPaymentPlans loanBookingFeePercentage(Double loanBookingFeePercentage) {
    this.loanBookingFeePercentage = loanBookingFeePercentage;
    return this;
  }

   /**
   * Loan booking fee percentage
   * @return loanBookingFeePercentage
  **/
  @Schema(example = "2.0", description = "Loan booking fee percentage")
  public Double getLoanBookingFeePercentage() {
    return loanBookingFeePercentage;
  }

  public void setLoanBookingFeePercentage(Double loanBookingFeePercentage) {
    this.loanBookingFeePercentage = loanBookingFeePercentage;
  }

  public LoanPaymentPlans initialInterestAmount(Double initialInterestAmount) {
    this.initialInterestAmount = initialInterestAmount;
    return this;
  }

   /**
   * Initial interest(0th interest)
   * @return initialInterestAmount
  **/
  @Schema(example = "500.0", description = "Initial interest(0th interest)")
  public Double getInitialInterestAmount() {
    return initialInterestAmount;
  }

  public void setInitialInterestAmount(Double initialInterestAmount) {
    this.initialInterestAmount = initialInterestAmount;
  }

  public LoanPaymentPlans initialFeeAmount(Double initialFeeAmount) {
    this.initialFeeAmount = initialFeeAmount;
    return this;
  }

   /**
   * Initial fee amount charged to customer
   * @return initialFeeAmount
  **/
  @Schema(example = "7.95", description = "Initial fee amount charged to customer")
  public Double getInitialFeeAmount() {
    return initialFeeAmount;
  }

  public void setInitialFeeAmount(Double initialFeeAmount) {
    this.initialFeeAmount = initialFeeAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanPaymentPlans loanPaymentPlans = (LoanPaymentPlans) o;
    return Objects.equals(this.loanTenure, loanPaymentPlans.loanTenure) &&
        Objects.equals(this.baseInterestRate, loanPaymentPlans.baseInterestRate) &&
        Objects.equals(this.annualPercentageRate, loanPaymentPlans.annualPercentageRate) &&
        Objects.equals(this.installmentAmount, loanPaymentPlans.installmentAmount) &&
        Objects.equals(this.interestRate, loanPaymentPlans.interestRate) &&
        Objects.equals(this.installmentInterestAmount, loanPaymentPlans.installmentInterestAmount) &&
        Objects.equals(this.firstTotalInstallmentAmount, loanPaymentPlans.firstTotalInstallmentAmount) &&
        Objects.equals(this.loanCetPercentage, loanPaymentPlans.loanCetPercentage) &&
        Objects.equals(this.fixedInterestRate, loanPaymentPlans.fixedInterestRate) &&
        Objects.equals(this.loanBookingFeeIndicator, loanPaymentPlans.loanBookingFeeIndicator) &&
        Objects.equals(this.loanBookingFee, loanPaymentPlans.loanBookingFee) &&
        Objects.equals(this.loanBookingFeePercentage, loanPaymentPlans.loanBookingFeePercentage) &&
        Objects.equals(this.initialInterestAmount, loanPaymentPlans.initialInterestAmount) &&
        Objects.equals(this.initialFeeAmount, loanPaymentPlans.initialFeeAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loanTenure, baseInterestRate, annualPercentageRate, installmentAmount, interestRate, installmentInterestAmount, firstTotalInstallmentAmount, loanCetPercentage, fixedInterestRate, loanBookingFeeIndicator, loanBookingFee, loanBookingFeePercentage, initialInterestAmount, initialFeeAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanPaymentPlans {\n");
    
    sb.append("    loanTenure: ").append(toIndentedString(loanTenure)).append("\n");
    sb.append("    baseInterestRate: ").append(toIndentedString(baseInterestRate)).append("\n");
    sb.append("    annualPercentageRate: ").append(toIndentedString(annualPercentageRate)).append("\n");
    sb.append("    installmentAmount: ").append(toIndentedString(installmentAmount)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    installmentInterestAmount: ").append(toIndentedString(installmentInterestAmount)).append("\n");
    sb.append("    firstTotalInstallmentAmount: ").append(toIndentedString(firstTotalInstallmentAmount)).append("\n");
    sb.append("    loanCetPercentage: ").append(toIndentedString(loanCetPercentage)).append("\n");
    sb.append("    fixedInterestRate: ").append(toIndentedString(fixedInterestRate)).append("\n");
    sb.append("    loanBookingFeeIndicator: ").append(toIndentedString(loanBookingFeeIndicator)).append("\n");
    sb.append("    loanBookingFee: ").append(toIndentedString(loanBookingFee)).append("\n");
    sb.append("    loanBookingFeePercentage: ").append(toIndentedString(loanBookingFeePercentage)).append("\n");
    sb.append("    initialInterestAmount: ").append(toIndentedString(initialInterestAmount)).append("\n");
    sb.append("    initialFeeAmount: ").append(toIndentedString(initialFeeAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
