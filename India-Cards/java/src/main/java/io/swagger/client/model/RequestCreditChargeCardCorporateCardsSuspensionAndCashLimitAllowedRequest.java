/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CorporateOfficerDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest {
  @SerializedName("tokenizedCardNumber")
  private String tokenizedCardNumber = null;

  @SerializedName("corporateOfficerDetails")
  private CorporateOfficerDetails corporateOfficerDetails = null;

  @SerializedName("cashLimitUpdateAllowedFlag")
  private Boolean cashLimitUpdateAllowedFlag = null;

  @SerializedName("cardStatus")
  private String cardStatus = null;

  public RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest tokenizedCardNumber(String tokenizedCardNumber) {
    this.tokenizedCardNumber = tokenizedCardNumber;
    return this;
  }

   /**
   * Tokenized card number
   * @return tokenizedCardNumber
  **/
  @Schema(example = "asdsdf56751d5675k59", required = true, description = "Tokenized card number")
  public String getTokenizedCardNumber() {
    return tokenizedCardNumber;
  }

  public void setTokenizedCardNumber(String tokenizedCardNumber) {
    this.tokenizedCardNumber = tokenizedCardNumber;
  }

  public RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest corporateOfficerDetails(CorporateOfficerDetails corporateOfficerDetails) {
    this.corporateOfficerDetails = corporateOfficerDetails;
    return this;
  }

   /**
   * Get corporateOfficerDetails
   * @return corporateOfficerDetails
  **/
  @Schema(description = "")
  public CorporateOfficerDetails getCorporateOfficerDetails() {
    return corporateOfficerDetails;
  }

  public void setCorporateOfficerDetails(CorporateOfficerDetails corporateOfficerDetails) {
    this.corporateOfficerDetails = corporateOfficerDetails;
  }

  public RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest cashLimitUpdateAllowedFlag(Boolean cashLimitUpdateAllowedFlag) {
    this.cashLimitUpdateAllowedFlag = cashLimitUpdateAllowedFlag;
    return this;
  }

   /**
   * This field is used to indicate whether cash withdrawal is allowed for the corporate card
   * @return cashLimitUpdateAllowedFlag
  **/
  @Schema(example = "true", description = "This field is used to indicate whether cash withdrawal is allowed for the corporate card")
  public Boolean isCashLimitUpdateAllowedFlag() {
    return cashLimitUpdateAllowedFlag;
  }

  public void setCashLimitUpdateAllowedFlag(Boolean cashLimitUpdateAllowedFlag) {
    this.cashLimitUpdateAllowedFlag = cashLimitUpdateAllowedFlag;
  }

  public RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest cardStatus(String cardStatus) {
    this.cardStatus = cardStatus;
    return this;
  }

   /**
   * This field is used to indicate whether to  suspend or unsuspend the corporate card.This is a reference data field. Please use /v1/utilities/referenceData/{cardStatus} resource to get possible values of this field with descriptions
   * @return cardStatus
  **/
  @Schema(example = "SUSPEND", description = "This field is used to indicate whether to  suspend or unsuspend the corporate card.This is a reference data field. Please use /v1/utilities/referenceData/{cardStatus} resource to get possible values of this field with descriptions")
  public String getCardStatus() {
    return cardStatus;
  }

  public void setCardStatus(String cardStatus) {
    this.cardStatus = cardStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest requestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest = (RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest) o;
    return Objects.equals(this.tokenizedCardNumber, requestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest.tokenizedCardNumber) &&
        Objects.equals(this.corporateOfficerDetails, requestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest.corporateOfficerDetails) &&
        Objects.equals(this.cashLimitUpdateAllowedFlag, requestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest.cashLimitUpdateAllowedFlag) &&
        Objects.equals(this.cardStatus, requestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest.cardStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tokenizedCardNumber, corporateOfficerDetails, cashLimitUpdateAllowedFlag, cardStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest {\n");
    
    sb.append("    tokenizedCardNumber: ").append(toIndentedString(tokenizedCardNumber)).append("\n");
    sb.append("    corporateOfficerDetails: ").append(toIndentedString(corporateOfficerDetails)).append("\n");
    sb.append("    cashLimitUpdateAllowedFlag: ").append(toIndentedString(cashLimitUpdateAllowedFlag)).append("\n");
    sb.append("    cardStatus: ").append(toIndentedString(cardStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
