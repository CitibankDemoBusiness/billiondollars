/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DebitCardEnrollmentDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class DebitCardEnrollmentDetails {
  @SerializedName("internetPurchaseAccessFlag")
  private Boolean internetPurchaseAccessFlag = null;

  @SerializedName("contactlessPaymentEnrolledFlag")
  private Boolean contactlessPaymentEnrolledFlag = null;

  @SerializedName("overseasAtmAccessAllowedFlag")
  private Boolean overseasAtmAccessAllowedFlag = null;

  public DebitCardEnrollmentDetails internetPurchaseAccessFlag(Boolean internetPurchaseAccessFlag) {
    this.internetPurchaseAccessFlag = internetPurchaseAccessFlag;
    return this;
  }

   /**
   * Flag to indicate if internet purchase access is enabled or not on the debit/credit card
   * @return internetPurchaseAccessFlag
  **/
  @Schema(example = "true", description = "Flag to indicate if internet purchase access is enabled or not on the debit/credit card")
  public Boolean isInternetPurchaseAccessFlag() {
    return internetPurchaseAccessFlag;
  }

  public void setInternetPurchaseAccessFlag(Boolean internetPurchaseAccessFlag) {
    this.internetPurchaseAccessFlag = internetPurchaseAccessFlag;
  }

  public DebitCardEnrollmentDetails contactlessPaymentEnrolledFlag(Boolean contactlessPaymentEnrolledFlag) {
    this.contactlessPaymentEnrolledFlag = contactlessPaymentEnrolledFlag;
    return this;
  }

   /**
   * Flag to indicate if contact-less payment is enabled or not on the debit/credit card
   * @return contactlessPaymentEnrolledFlag
  **/
  @Schema(example = "true", description = "Flag to indicate if contact-less payment is enabled or not on the debit/credit card")
  public Boolean isContactlessPaymentEnrolledFlag() {
    return contactlessPaymentEnrolledFlag;
  }

  public void setContactlessPaymentEnrolledFlag(Boolean contactlessPaymentEnrolledFlag) {
    this.contactlessPaymentEnrolledFlag = contactlessPaymentEnrolledFlag;
  }

  public DebitCardEnrollmentDetails overseasAtmAccessAllowedFlag(Boolean overseasAtmAccessAllowedFlag) {
    this.overseasAtmAccessAllowedFlag = overseasAtmAccessAllowedFlag;
    return this;
  }

   /**
   * This field is to indicate if overseas ATM access is allowed to the card.
   * @return overseasAtmAccessAllowedFlag
  **/
  @Schema(example = "true", description = "This field is to indicate if overseas ATM access is allowed to the card.")
  public Boolean isOverseasAtmAccessAllowedFlag() {
    return overseasAtmAccessAllowedFlag;
  }

  public void setOverseasAtmAccessAllowedFlag(Boolean overseasAtmAccessAllowedFlag) {
    this.overseasAtmAccessAllowedFlag = overseasAtmAccessAllowedFlag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DebitCardEnrollmentDetails debitCardEnrollmentDetails = (DebitCardEnrollmentDetails) o;
    return Objects.equals(this.internetPurchaseAccessFlag, debitCardEnrollmentDetails.internetPurchaseAccessFlag) &&
        Objects.equals(this.contactlessPaymentEnrolledFlag, debitCardEnrollmentDetails.contactlessPaymentEnrolledFlag) &&
        Objects.equals(this.overseasAtmAccessAllowedFlag, debitCardEnrollmentDetails.overseasAtmAccessAllowedFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internetPurchaseAccessFlag, contactlessPaymentEnrolledFlag, overseasAtmAccessAllowedFlag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DebitCardEnrollmentDetails {\n");
    
    sb.append("    internetPurchaseAccessFlag: ").append(toIndentedString(internetPurchaseAccessFlag)).append("\n");
    sb.append("    contactlessPaymentEnrolledFlag: ").append(toIndentedString(contactlessPaymentEnrolledFlag)).append("\n");
    sb.append("    overseasAtmAccessAllowedFlag: ").append(toIndentedString(overseasAtmAccessAllowedFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
