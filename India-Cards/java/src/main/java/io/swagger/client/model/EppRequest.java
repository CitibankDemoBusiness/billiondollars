/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.TransactionAuthorizationCodes;
import io.swagger.client.model.TransactionReferenceId;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * EppRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class EppRequest {
  @SerializedName("eppLoanBookingType")
  private String eppLoanBookingType = null;

  @SerializedName("tenor")
  private BigDecimal tenor = null;

  @SerializedName("loanAmount")
  private Double loanAmount = null;

  @SerializedName("transactionReferenceIds")
  private List<TransactionReferenceId> transactionReferenceIds = null;

  @SerializedName("transactionAuthorizationCodes")
  private List<TransactionAuthorizationCodes> transactionAuthorizationCodes = null;

  public EppRequest eppLoanBookingType(String eppLoanBookingType) {
    this.eppLoanBookingType = eppLoanBookingType;
    return this;
  }

   /**
   * Type of the easy payment plan loan booking.This is a reference data field. Please use /v1/apac/utilities/referenceData/{eppLoanBookingType} resource to get possible value of this field with description.
   * @return eppLoanBookingType
  **/
  @Schema(example = "STATEMENT", required = true, description = "Type of the easy payment plan loan booking.This is a reference data field. Please use /v1/apac/utilities/referenceData/{eppLoanBookingType} resource to get possible value of this field with description.")
  public String getEppLoanBookingType() {
    return eppLoanBookingType;
  }

  public void setEppLoanBookingType(String eppLoanBookingType) {
    this.eppLoanBookingType = eppLoanBookingType;
  }

  public EppRequest tenor(BigDecimal tenor) {
    this.tenor = tenor;
    return this;
  }

   /**
   * Tenure of loan in months.
   * @return tenor
  **/
  @Schema(example = "6.0", description = "Tenure of loan in months.")
  public BigDecimal getTenor() {
    return tenor;
  }

  public void setTenor(BigDecimal tenor) {
    this.tenor = tenor;
  }

  public EppRequest loanAmount(Double loanAmount) {
    this.loanAmount = loanAmount;
    return this;
  }

   /**
   * Eligible loan amount. Applicable only for EPP of type STATEMENT.
   * @return loanAmount
  **/
  @Schema(example = "2200.32", description = "Eligible loan amount. Applicable only for EPP of type STATEMENT.")
  public Double getLoanAmount() {
    return loanAmount;
  }

  public void setLoanAmount(Double loanAmount) {
    this.loanAmount = loanAmount;
  }

  public EppRequest transactionReferenceIds(List<TransactionReferenceId> transactionReferenceIds) {
    this.transactionReferenceIds = transactionReferenceIds;
    return this;
  }

  public EppRequest addTransactionReferenceIdsItem(TransactionReferenceId transactionReferenceIdsItem) {
    if (this.transactionReferenceIds == null) {
      this.transactionReferenceIds = new ArrayList<TransactionReferenceId>();
    }
    this.transactionReferenceIds.add(transactionReferenceIdsItem);
    return this;
  }

   /**
   * Get transactionReferenceIds
   * @return transactionReferenceIds
  **/
  @Schema(description = "")
  public List<TransactionReferenceId> getTransactionReferenceIds() {
    return transactionReferenceIds;
  }

  public void setTransactionReferenceIds(List<TransactionReferenceId> transactionReferenceIds) {
    this.transactionReferenceIds = transactionReferenceIds;
  }

  public EppRequest transactionAuthorizationCodes(List<TransactionAuthorizationCodes> transactionAuthorizationCodes) {
    this.transactionAuthorizationCodes = transactionAuthorizationCodes;
    return this;
  }

  public EppRequest addTransactionAuthorizationCodesItem(TransactionAuthorizationCodes transactionAuthorizationCodesItem) {
    if (this.transactionAuthorizationCodes == null) {
      this.transactionAuthorizationCodes = new ArrayList<TransactionAuthorizationCodes>();
    }
    this.transactionAuthorizationCodes.add(transactionAuthorizationCodesItem);
    return this;
  }

   /**
   * Get transactionAuthorizationCodes
   * @return transactionAuthorizationCodes
  **/
  @Schema(description = "")
  public List<TransactionAuthorizationCodes> getTransactionAuthorizationCodes() {
    return transactionAuthorizationCodes;
  }

  public void setTransactionAuthorizationCodes(List<TransactionAuthorizationCodes> transactionAuthorizationCodes) {
    this.transactionAuthorizationCodes = transactionAuthorizationCodes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EppRequest eppRequest = (EppRequest) o;
    return Objects.equals(this.eppLoanBookingType, eppRequest.eppLoanBookingType) &&
        Objects.equals(this.tenor, eppRequest.tenor) &&
        Objects.equals(this.loanAmount, eppRequest.loanAmount) &&
        Objects.equals(this.transactionReferenceIds, eppRequest.transactionReferenceIds) &&
        Objects.equals(this.transactionAuthorizationCodes, eppRequest.transactionAuthorizationCodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eppLoanBookingType, tenor, loanAmount, transactionReferenceIds, transactionAuthorizationCodes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EppRequest {\n");
    
    sb.append("    eppLoanBookingType: ").append(toIndentedString(eppLoanBookingType)).append("\n");
    sb.append("    tenor: ").append(toIndentedString(tenor)).append("\n");
    sb.append("    loanAmount: ").append(toIndentedString(loanAmount)).append("\n");
    sb.append("    transactionReferenceIds: ").append(toIndentedString(transactionReferenceIds)).append("\n");
    sb.append("    transactionAuthorizationCodes: ").append(toIndentedString(transactionAuthorizationCodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
