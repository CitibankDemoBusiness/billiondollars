/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CountrySpecificAddress
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class CountrySpecificAddress {
  @SerializedName("streetName")
  private String streetName = null;

  @SerializedName("streetType")
  private String streetType = null;

  @SerializedName("streetNumber")
  private String streetNumber = null;

  @SerializedName("unitNumber")
  private String unitNumber = null;

  public CountrySpecificAddress streetName(String streetName) {
    this.streetName = streetName;
    return this;
  }

   /**
   * Applicant&#x27;s street Name
   * @return streetName
  **/
  @Schema(example = "George street", required = true, description = "Applicant's street Name")
  public String getStreetName() {
    return streetName;
  }

  public void setStreetName(String streetName) {
    this.streetName = streetName;
  }

  public CountrySpecificAddress streetType(String streetType) {
    this.streetType = streetType;
    return this;
  }

   /**
   * Applicant&#x27;s street Type.This is a reference data field. Please use /utilities/referenceData/{streetType} resource to get valid values of this field with descriptions.
   * @return streetType
  **/
  @Schema(example = "Avenue", required = true, description = "Applicant's street Type.This is a reference data field. Please use /utilities/referenceData/{streetType} resource to get valid values of this field with descriptions.")
  public String getStreetType() {
    return streetType;
  }

  public void setStreetType(String streetType) {
    this.streetType = streetType;
  }

  public CountrySpecificAddress streetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
    return this;
  }

   /**
   * Applicant&#x27;s street Number
   * @return streetNumber
  **/
  @Schema(example = "52", required = true, description = "Applicant's street Number")
  public String getStreetNumber() {
    return streetNumber;
  }

  public void setStreetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
  }

  public CountrySpecificAddress unitNumber(String unitNumber) {
    this.unitNumber = unitNumber;
    return this;
  }

   /**
   * Applicant&#x27;s unit Number
   * @return unitNumber
  **/
  @Schema(example = "99", description = "Applicant's unit Number")
  public String getUnitNumber() {
    return unitNumber;
  }

  public void setUnitNumber(String unitNumber) {
    this.unitNumber = unitNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CountrySpecificAddress countrySpecificAddress = (CountrySpecificAddress) o;
    return Objects.equals(this.streetName, countrySpecificAddress.streetName) &&
        Objects.equals(this.streetType, countrySpecificAddress.streetType) &&
        Objects.equals(this.streetNumber, countrySpecificAddress.streetNumber) &&
        Objects.equals(this.unitNumber, countrySpecificAddress.unitNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(streetName, streetType, streetNumber, unitNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CountrySpecificAddress {\n");
    
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    streetType: ").append(toIndentedString(streetType)).append("\n");
    sb.append("    streetNumber: ").append(toIndentedString(streetNumber)).append("\n");
    sb.append("    unitNumber: ").append(toIndentedString(unitNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
