/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CountrySpecificAddress;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Address
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class Address {
  @SerializedName("countrySpecificAddress")
  private CountrySpecificAddress countrySpecificAddress = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("addressType")
  private String addressType = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("addressLine1")
  private String addressLine1 = null;

  @SerializedName("addressLine2")
  private String addressLine2 = null;

  @SerializedName("addressLine3")
  private String addressLine3 = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("addressLine4")
  private String addressLine4 = null;

  public Address countrySpecificAddress(CountrySpecificAddress countrySpecificAddress) {
    this.countrySpecificAddress = countrySpecificAddress;
    return this;
  }

   /**
   * Get countrySpecificAddress
   * @return countrySpecificAddress
  **/
  @Schema(description = "")
  public CountrySpecificAddress getCountrySpecificAddress() {
    return countrySpecificAddress;
  }

  public void setCountrySpecificAddress(CountrySpecificAddress countrySpecificAddress) {
    this.countrySpecificAddress = countrySpecificAddress;
  }

  public Address city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Town/City
   * @return city
  **/
  @Schema(example = "Sydney", description = "Town/City")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Address addressType(String addressType) {
    this.addressType = addressType;
    return this;
  }

   /**
   * Type of the address. This is a reference data field. Please use /utilities/referenceData/{addressType} resource to get valid values of this field with descriptions.
   * @return addressType
  **/
  @Schema(example = "PRIMARY_ADDRESS", required = true, description = "Type of the address. This is a reference data field. Please use /utilities/referenceData/{addressType} resource to get valid values of this field with descriptions.")
  public String getAddressType() {
    return addressType;
  }

  public void setAddressType(String addressType) {
    this.addressType = addressType;
  }

  public Address countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO country code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{country} resource to get valid value of this field with description.
   * @return countryCode
  **/
  @Schema(example = "AU", description = "ISO country code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{country} resource to get valid value of this field with description.")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public Address postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal/ZIP code
   * @return postalCode
  **/
  @Schema(example = "WA 6125", description = "Postal/ZIP code")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Address addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Address line 1
   * @return addressLine1
  **/
  @Schema(example = "Post Box 56", description = "Address line 1")
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }

  public Address addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Address line 2. It is the unit number for Australia
   * @return addressLine2
  **/
  @Schema(example = "99 George Street", description = "Address line 2. It is the unit number for Australia")
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }

  public Address addressLine3(String addressLine3) {
    this.addressLine3 = addressLine3;
    return this;
  }

   /**
   * Address line 3.
   * @return addressLine3
  **/
  @Schema(example = "Broadway Avenue", description = "Address line 3.")
  public String getAddressLine3() {
    return addressLine3;
  }

  public void setAddressLine3(String addressLine3) {
    this.addressLine3 = addressLine3;
  }

  public Address state(String state) {
    this.state = state;
    return this;
  }

   /**
   * State.This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressState} resource to get valid value of this field with description.
   * @return state
  **/
  @Schema(example = "QUEENSLAND", description = "State.This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressState} resource to get valid value of this field with description.")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Address addressLine4(String addressLine4) {
    this.addressLine4 = addressLine4;
    return this;
  }

   /**
   * Address line 4.
   * @return addressLine4
  **/
  @Schema(example = "Wandaloo ESP", description = "Address line 4.")
  public String getAddressLine4() {
    return addressLine4;
  }

  public void setAddressLine4(String addressLine4) {
    this.addressLine4 = addressLine4;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.countrySpecificAddress, address.countrySpecificAddress) &&
        Objects.equals(this.city, address.city) &&
        Objects.equals(this.addressType, address.addressType) &&
        Objects.equals(this.countryCode, address.countryCode) &&
        Objects.equals(this.postalCode, address.postalCode) &&
        Objects.equals(this.addressLine1, address.addressLine1) &&
        Objects.equals(this.addressLine2, address.addressLine2) &&
        Objects.equals(this.addressLine3, address.addressLine3) &&
        Objects.equals(this.state, address.state) &&
        Objects.equals(this.addressLine4, address.addressLine4);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countrySpecificAddress, city, addressType, countryCode, postalCode, addressLine1, addressLine2, addressLine3, state, addressLine4);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    
    sb.append("    countrySpecificAddress: ").append(toIndentedString(countrySpecificAddress)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressLine3: ").append(toIndentedString(addressLine3)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    addressLine4: ").append(toIndentedString(addressLine4)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
