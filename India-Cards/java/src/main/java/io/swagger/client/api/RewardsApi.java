/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.RewardsInquiryRequest;
import io.swagger.client.model.RewardsInquiryResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RewardsApi {
    private ApiClient apiClient;

    public RewardsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public RewardsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for v1CreditCardsRewardsPointBalanceSearchPost
     * @param body  (required)
     * @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;. (required)
     * @param uuid 128 bit random UUID generated uniquely for every request. (required)
     * @param accept Content-Type that are acceptable for the response. (required)
     * @param clientId The client ID  you received during application registration in the developer portal (required)
     * @param contentType application/json (required)
     * @param clientDetails This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call v1CreditCardsRewardsPointBalanceSearchPostCall(RewardsInquiryRequest body, String authorization, String uuid, String accept, String clientId, String contentType, String clientDetails, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/v1/creditCards/rewards/pointBalance/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (authorization != null)
        localVarHeaderParams.put("Authorization", apiClient.parameterToString(authorization));
        if (uuid != null)
        localVarHeaderParams.put("uuid", apiClient.parameterToString(uuid));
        if (accept != null)
        localVarHeaderParams.put("Accept", apiClient.parameterToString(accept));
        if (clientId != null)
        localVarHeaderParams.put("client_id", apiClient.parameterToString(clientId));
        if (contentType != null)
        localVarHeaderParams.put("Content-Type", apiClient.parameterToString(contentType));
        if (clientDetails != null)
        localVarHeaderParams.put("clientDetails", apiClient.parameterToString(clientDetails));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call v1CreditCardsRewardsPointBalanceSearchPostValidateBeforeCall(RewardsInquiryRequest body, String authorization, String uuid, String accept, String clientId, String contentType, String clientDetails, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling v1CreditCardsRewardsPointBalanceSearchPost(Async)");
        }
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling v1CreditCardsRewardsPointBalanceSearchPost(Async)");
        }
        // verify the required parameter 'uuid' is set
        if (uuid == null) {
            throw new ApiException("Missing the required parameter 'uuid' when calling v1CreditCardsRewardsPointBalanceSearchPost(Async)");
        }
        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling v1CreditCardsRewardsPointBalanceSearchPost(Async)");
        }
        // verify the required parameter 'clientId' is set
        if (clientId == null) {
            throw new ApiException("Missing the required parameter 'clientId' when calling v1CreditCardsRewardsPointBalanceSearchPost(Async)");
        }
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling v1CreditCardsRewardsPointBalanceSearchPost(Async)");
        }
        
        com.squareup.okhttp.Call call = v1CreditCardsRewardsPointBalanceSearchPostCall(body, authorization, uuid, accept, clientId, contentType, clientDetails, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * This API is used to retrieve reward points balance for multiple credit cards
     * This API is used to retrieve reward points balance for multiple credit cards
     * @param body  (required)
     * @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;. (required)
     * @param uuid 128 bit random UUID generated uniquely for every request. (required)
     * @param accept Content-Type that are acceptable for the response. (required)
     * @param clientId The client ID  you received during application registration in the developer portal (required)
     * @param contentType application/json (required)
     * @param clientDetails This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)
     * @return RewardsInquiryResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public RewardsInquiryResponse v1CreditCardsRewardsPointBalanceSearchPost(RewardsInquiryRequest body, String authorization, String uuid, String accept, String clientId, String contentType, String clientDetails) throws ApiException {
        ApiResponse<RewardsInquiryResponse> resp = v1CreditCardsRewardsPointBalanceSearchPostWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, clientDetails);
        return resp.getData();
    }

    /**
     * This API is used to retrieve reward points balance for multiple credit cards
     * This API is used to retrieve reward points balance for multiple credit cards
     * @param body  (required)
     * @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;. (required)
     * @param uuid 128 bit random UUID generated uniquely for every request. (required)
     * @param accept Content-Type that are acceptable for the response. (required)
     * @param clientId The client ID  you received during application registration in the developer portal (required)
     * @param contentType application/json (required)
     * @param clientDetails This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)
     * @return ApiResponse&lt;RewardsInquiryResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<RewardsInquiryResponse> v1CreditCardsRewardsPointBalanceSearchPostWithHttpInfo(RewardsInquiryRequest body, String authorization, String uuid, String accept, String clientId, String contentType, String clientDetails) throws ApiException {
        com.squareup.okhttp.Call call = v1CreditCardsRewardsPointBalanceSearchPostValidateBeforeCall(body, authorization, uuid, accept, clientId, contentType, clientDetails, null, null);
        Type localVarReturnType = new TypeToken<RewardsInquiryResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * This API is used to retrieve reward points balance for multiple credit cards (asynchronously)
     * This API is used to retrieve reward points balance for multiple credit cards
     * @param body  (required)
     * @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;. (required)
     * @param uuid 128 bit random UUID generated uniquely for every request. (required)
     * @param accept Content-Type that are acceptable for the response. (required)
     * @param clientId The client ID  you received during application registration in the developer portal (required)
     * @param contentType application/json (required)
     * @param clientDetails This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v1CreditCardsRewardsPointBalanceSearchPostAsync(RewardsInquiryRequest body, String authorization, String uuid, String accept, String clientId, String contentType, String clientDetails, final ApiCallback<RewardsInquiryResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v1CreditCardsRewardsPointBalanceSearchPostValidateBeforeCall(body, authorization, uuid, accept, clientId, contentType, clientDetails, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<RewardsInquiryResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
