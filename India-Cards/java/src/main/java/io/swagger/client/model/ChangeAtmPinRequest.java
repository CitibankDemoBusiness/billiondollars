/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ChangeAtmPinRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class ChangeAtmPinRequest {
  @SerializedName("controlFlowId")
  private String controlFlowId = null;

  @SerializedName("cardId")
  private String cardId = null;

  @SerializedName("newPin")
  private String newPin = null;

  public ChangeAtmPinRequest controlFlowId(String controlFlowId) {
    this.controlFlowId = controlFlowId;
    return this;
  }

   /**
   * Control flow id is used to control the flow for subsequent requests in the session.
   * @return controlFlowId
  **/
  @Schema(example = "6e3774334f724a2b7947663653712f52456f524c41797038516a59347a437549564a77755676376e616a733d", required = true, description = "Control flow id is used to control the flow for subsequent requests in the session.")
  public String getControlFlowId() {
    return controlFlowId;
  }

  public void setControlFlowId(String controlFlowId) {
    this.controlFlowId = controlFlowId;
  }

  public ChangeAtmPinRequest cardId(String cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * Hashed card number of the customer.
   * @return cardId
  **/
  @Schema(example = "3gfeygf83gf83yfe3egc8eeoufc", required = true, description = "Hashed card number of the customer.")
  public String getCardId() {
    return cardId;
  }

  public void setCardId(String cardId) {
    this.cardId = cardId;
  }

  public ChangeAtmPinRequest newPin(String newPin) {
    this.newPin = newPin;
    return this;
  }

   /**
   * New PIN in encrypted format
   * @return newPin
  **/
  @Schema(example = "3gfeygf83gf83yfe3egc8eeoufc", required = true, description = "New PIN in encrypted format")
  public String getNewPin() {
    return newPin;
  }

  public void setNewPin(String newPin) {
    this.newPin = newPin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeAtmPinRequest changeAtmPinRequest = (ChangeAtmPinRequest) o;
    return Objects.equals(this.controlFlowId, changeAtmPinRequest.controlFlowId) &&
        Objects.equals(this.cardId, changeAtmPinRequest.cardId) &&
        Objects.equals(this.newPin, changeAtmPinRequest.newPin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(controlFlowId, cardId, newPin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeAtmPinRequest {\n");
    
    sb.append("    controlFlowId: ").append(toIndentedString(controlFlowId)).append("\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    newPin: ").append(toIndentedString(newPin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
