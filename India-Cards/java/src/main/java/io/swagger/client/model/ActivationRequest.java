/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * ActivationRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:43:49.245466Z[Etc/UTC]")
public class ActivationRequest {
  @SerializedName("overseasCardActivationEndDate")
  private LocalDate overseasCardActivationEndDate = null;

  @SerializedName("overseasCardActivationStartDate")
  private LocalDate overseasCardActivationStartDate = null;

  @SerializedName("perpetualActivationIndicator")
  private String perpetualActivationIndicator = null;

  public ActivationRequest overseasCardActivationEndDate(LocalDate overseasCardActivationEndDate) {
    this.overseasCardActivationEndDate = overseasCardActivationEndDate;
    return this;
  }

   /**
   * Card activation end date in ISO 8601 date format YYYY-MM-DD for overseas usage. For perpetual activation, no value to be sent.
   * @return overseasCardActivationEndDate
  **/
  @Schema(example = "Fri Dec 30 00:00:00 UTC 2016", description = "Card activation end date in ISO 8601 date format YYYY-MM-DD for overseas usage. For perpetual activation, no value to be sent.")
  public LocalDate getOverseasCardActivationEndDate() {
    return overseasCardActivationEndDate;
  }

  public void setOverseasCardActivationEndDate(LocalDate overseasCardActivationEndDate) {
    this.overseasCardActivationEndDate = overseasCardActivationEndDate;
  }

  public ActivationRequest overseasCardActivationStartDate(LocalDate overseasCardActivationStartDate) {
    this.overseasCardActivationStartDate = overseasCardActivationStartDate;
    return this;
  }

   /**
   * Card activation start date in ISO 8601 date format YYYY-MM-DD for overseas usage. For perpetual activation, no value to be sent.
   * @return overseasCardActivationStartDate
  **/
  @Schema(example = "Tue Nov 01 00:00:00 UTC 2016", description = "Card activation start date in ISO 8601 date format YYYY-MM-DD for overseas usage. For perpetual activation, no value to be sent.")
  public LocalDate getOverseasCardActivationStartDate() {
    return overseasCardActivationStartDate;
  }

  public void setOverseasCardActivationStartDate(LocalDate overseasCardActivationStartDate) {
    this.overseasCardActivationStartDate = overseasCardActivationStartDate;
  }

  public ActivationRequest perpetualActivationIndicator(String perpetualActivationIndicator) {
    this.perpetualActivationIndicator = perpetualActivationIndicator;
    return this;
  }

   /**
   * Indicator to specify whether the card to be activated perpetually
   * @return perpetualActivationIndicator
  **/
  @Schema(example = "Y", description = "Indicator to specify whether the card to be activated perpetually")
  public String getPerpetualActivationIndicator() {
    return perpetualActivationIndicator;
  }

  public void setPerpetualActivationIndicator(String perpetualActivationIndicator) {
    this.perpetualActivationIndicator = perpetualActivationIndicator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivationRequest activationRequest = (ActivationRequest) o;
    return Objects.equals(this.overseasCardActivationEndDate, activationRequest.overseasCardActivationEndDate) &&
        Objects.equals(this.overseasCardActivationStartDate, activationRequest.overseasCardActivationStartDate) &&
        Objects.equals(this.perpetualActivationIndicator, activationRequest.perpetualActivationIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(overseasCardActivationEndDate, overseasCardActivationStartDate, perpetualActivationIndicator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivationRequest {\n");
    
    sb.append("    overseasCardActivationEndDate: ").append(toIndentedString(overseasCardActivationEndDate)).append("\n");
    sb.append("    overseasCardActivationStartDate: ").append(toIndentedString(overseasCardActivationStartDate)).append("\n");
    sb.append("    perpetualActivationIndicator: ").append(toIndentedString(perpetualActivationIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
