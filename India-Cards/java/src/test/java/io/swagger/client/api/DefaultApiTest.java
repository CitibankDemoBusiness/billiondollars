/*
 * Cards
 * The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CardListingResponse;
import io.swagger.client.model.CardUsageRequest;
import io.swagger.client.model.CreditLimitIncreaseRequest;
import io.swagger.client.model.CreditLimitIncreaseResponse;
import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.OverseasCardUsageRequest;
import io.swagger.client.model.ReportLostStolenCardRequest;
import io.swagger.client.model.ReportLostStolenCardResponse;
import io.swagger.client.model.SupplementaryCardRequest;
import io.swagger.client.model.SupplementaryCardResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Update local usage activation
     *
     * This API is used to activate or deactivate the specified card&#x27;s ability to be used locally.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1CardsCardIdActivationsCardActivationCodePutTest() throws ApiException {
        String uuid = null;
        String clientId = null;
        String authorization = null;
        String cardId = null;
        String cardActivationCode = null;
        CardUsageRequest body = null;
        api.v1CardsCardIdActivationsCardActivationCodePut(uuid, clientId, authorization, cardId, cardActivationCode, body);

        // TODO: test validations
    }
    /**
     * Report card as lost or stolen
     *
     * This API is used to report a specified card as lost or stolen and returns a reference number to track the request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1CardsCardIdLostStolenPutTest() throws ApiException {
        ReportLostStolenCardRequest body = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String authorization = null;
        String cardId = null;
        ReportLostStolenCardResponse response = api.v1CardsCardIdLostStolenPut(body, uuid, accept, clientId, contentType, authorization, cardId);

        // TODO: test validations
    }
    /**
     * Update overseas usage activation
     *
     * This API is used to activate or deactivate a specified card&#x27;s ability to be used overseas. Cards can be activated for overseas usage permanently or for a set period of time.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1CardsCardIdOverseasUsagePutTest() throws ApiException {
        OverseasCardUsageRequest body = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String authorization = null;
        String cardId = null;
        api.v1CardsCardIdOverseasUsagePut(body, uuid, accept, clientId, contentType, authorization, cardId);

        // TODO: test validations
    }
    /**
     * Retrieve all cards
     *
     * This API is used to retrieve all the credit card numbers and correponding details of the customers who authorized the application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1CardsGetTest() throws ApiException {
        String authorization = null;
        String clientId = null;
        String uuid = null;
        String accept = null;
        String cardFunction = null;
        CardListingResponse response = api.v1CardsGet(authorization, clientId, uuid, accept, cardFunction);

        // TODO: test validations
    }
    /**
     * Supplementary Card Application
     *
     * This API is used to authorize Citi Customer to add a Supplementary card to their existing primary card.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1CreditCardsCardIdSupplementaryApplicationsPostTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String clientId = null;
        String cardId = null;
        SupplementaryCardRequest body = null;
        SupplementaryCardResponse response = api.v1CreditCardsCardIdSupplementaryApplicationsPost(authorization, uuid, clientId, cardId, body);

        // TODO: test validations
    }
    /**
     * Request credit limit increase
     *
     * This API is used to request for a permanent or temporary credit limit increase on credit card.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1CreditCardsCreditLimitsPostTest() throws ApiException {
        CreditLimitIncreaseRequest body = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String authorization = null;
        CreditLimitIncreaseResponse response = api.v1CreditCardsCreditLimitsPost(body, uuid, accept, clientId, contentType, authorization);

        // TODO: test validations
    }
}
