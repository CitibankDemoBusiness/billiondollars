=begin
#Cards

#The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

module SwaggerClient
  class CardsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve the detail of card products
    # This API is designed basing on Bank Negara Malaysia (BNM) Open API Product Information Specification to provide Citibank’s Malaysia Credit card product information that are currently offered in the Market.<br/>API specs for Swagger download and the API details displayed are for illustration purpose only. For actual specification please refer to the BNM website.<br/><b>Note</b> :To get the details of the API specification , please refer to the BNM link below to extract the exact specifications.<br/>BNM Link  :https://github.com/BankNegaraMY
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :card_type Type of card (default to credit_card)
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [ProductResponse]
    def b_nmoapi_banking_digital_regulatory(authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = b_nmoapi_banking_digital_regulatory_with_http_info(authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # Retrieve the detail of card products
    # This API is designed basing on Bank Negara Malaysia (BNM) Open API Product Information Specification to provide Citibank’s Malaysia Credit card product information that are currently offered in the Market.&lt;br/&gt;API specs for Swagger download and the API details displayed are for illustration purpose only. For actual specification please refer to the BNM website.&lt;br/&gt;&lt;b&gt;Note&lt;/b&gt; :To get the details of the API specification , please refer to the BNM link below to extract the exact specifications.&lt;br/&gt;BNM Link  :https://github.com/BankNegaraMY
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :card_type Type of card
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(ProductResponse, Integer, Hash)>] ProductResponse data, response status code and response headers
    def b_nmoapi_banking_digital_regulatory_with_http_info(authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.b_nmoapi_banking_digital_regulatory ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.b_nmoapi_banking_digital_regulatory"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.b_nmoapi_banking_digital_regulatory"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.b_nmoapi_banking_digital_regulatory"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.b_nmoapi_banking_digital_regulatory"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.b_nmoapi_banking_digital_regulatory"
      end
      if @api_client.config.client_side_validation && opts[:'card_type'] && !['all', 'charge_card', 'credit_card', 'debit_card', 'prepaid_card'].include?(opts[:'card_type'])
        fail ArgumentError, 'invalid value for "card_type", must be one of all, charge_card, credit_card, debit_card, prepaid_card'
      end
      # resource path
      local_var_path = '/v1/my/bnm/cards'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'card_type'] = opts[:'card_type'] if !opts[:'card_type'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'ProductResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#b_nmoapi_banking_digital_regulatory\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Confirm Easy Payment Plan Booking
    # This API is triggered after the EPP plan is selected and completes the EPP booking. On successful booking, it returns transaction reference in the response.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [EppLoanBookingConfirmationResponse]
    def epp_loan_booking_confirmation(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      data, _status_code, _headers = epp_loan_booking_confirmation_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts)
      data
    end

    # Confirm Easy Payment Plan Booking
    # This API is triggered after the EPP plan is selected and completes the EPP booking. On successful booking, it returns transaction reference in the response.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(EppLoanBookingConfirmationResponse, Integer, Hash)>] EppLoanBookingConfirmationResponse data, response status code and response headers
    def epp_loan_booking_confirmation_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.epp_loan_booking_confirmation ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.epp_loan_booking_confirmation"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.epp_loan_booking_confirmation"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.epp_loan_booking_confirmation"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.epp_loan_booking_confirmation"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.epp_loan_booking_confirmation"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.epp_loan_booking_confirmation"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.epp_loan_booking_confirmation"
      end
      # resource path
      local_var_path = '/v1/creditCards/{cardId}/easyPaymentPlans/bookings/confirmation'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'EppLoanBookingConfirmationResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#epp_loan_booking_confirmation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is used to close the corporate Credit Card or Ready credit Account.
    # This API is used to close the corporate Credit Card or Ready credit Account.
    # @param body InitiateCreditChargeCardCorporateCardsClosureRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [InitiateCreditChargeCardCorporateCardsClosureResponse]
    def initiate_credit_charge_card_corporate_cards_closure(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = initiate_credit_charge_card_corporate_cards_closure_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # This API is used to close the corporate Credit Card or Ready credit Account.
    # This API is used to close the corporate Credit Card or Ready credit Account.
    # @param body InitiateCreditChargeCardCorporateCardsClosureRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(InitiateCreditChargeCardCorporateCardsClosureResponse, Integer, Hash)>] InitiateCreditChargeCardCorporateCardsClosureResponse data, response status code and response headers
    def initiate_credit_charge_card_corporate_cards_closure_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.initiate_credit_charge_card_corporate_cards_closure ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.initiate_credit_charge_card_corporate_cards_closure"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.initiate_credit_charge_card_corporate_cards_closure"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.initiate_credit_charge_card_corporate_cards_closure"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.initiate_credit_charge_card_corporate_cards_closure"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.initiate_credit_charge_card_corporate_cards_closure"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.initiate_credit_charge_card_corporate_cards_closure"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/closure'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept-Language'] = opts[:'accept_language'] if !opts[:'accept_language'].nil?
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'InitiateCreditChargeCardCorporateCardsClosureResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#initiate_credit_charge_card_corporate_cards_closure\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is to enroll the Debit Card and FCY Accounts to Multi Currency Account
    # This API is to enroll the Debit Card and FCY Accounts to Multi Currency Account
    # @param body MultiCurrencyAccountEnrollmentRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The customer card identifier in encrypted format, that needs to be enrolled to multi currency accounts
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [MultiCurrencyAccountEnrollmentResponse]
    def multi_currency_account_enrollment(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      data, _status_code, _headers = multi_currency_account_enrollment_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts)
      data
    end

    # This API is to enroll the Debit Card and FCY Accounts to Multi Currency Account
    # This API is to enroll the Debit Card and FCY Accounts to Multi Currency Account
    # @param body MultiCurrencyAccountEnrollmentRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The customer card identifier in encrypted format, that needs to be enrolled to multi currency accounts
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(MultiCurrencyAccountEnrollmentResponse, Integer, Hash)>] MultiCurrencyAccountEnrollmentResponse data, response status code and response headers
    def multi_currency_account_enrollment_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.multi_currency_account_enrollment ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.multi_currency_account_enrollment"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.multi_currency_account_enrollment"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.multi_currency_account_enrollment"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.multi_currency_account_enrollment"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.multi_currency_account_enrollment"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.multi_currency_account_enrollment"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.multi_currency_account_enrollment"
      end
      # resource path
      local_var_path = '/v2/cards/{cardId}/multiCurrencyAccounts/enrollments'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'MultiCurrencyAccountEnrollmentResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#multi_currency_account_enrollment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is to generate/enroll new FCY Accounts to Multi Currency Account
    # This API is to create new account for a foreign currency and enroll it to Multi Currency Account (Global Wallet)
    # @param body MultiCurrencyAccountEnrollmentWithCurrencyRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The customer card identifier in encrypted format, that needs to be enrolled to multi currency accounts
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [MultiCurrencyAccountEnrollmentWithCurrencyResponse]
    def multi_currency_account_enrollment_with_currency(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      data, _status_code, _headers = multi_currency_account_enrollment_with_currency_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts)
      data
    end

    # This API is to generate/enroll new FCY Accounts to Multi Currency Account
    # This API is to create new account for a foreign currency and enroll it to Multi Currency Account (Global Wallet)
    # @param body MultiCurrencyAccountEnrollmentWithCurrencyRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The customer card identifier in encrypted format, that needs to be enrolled to multi currency accounts
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(MultiCurrencyAccountEnrollmentWithCurrencyResponse, Integer, Hash)>] MultiCurrencyAccountEnrollmentWithCurrencyResponse data, response status code and response headers
    def multi_currency_account_enrollment_with_currency_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.multi_currency_account_enrollment_with_currency ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.multi_currency_account_enrollment_with_currency"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.multi_currency_account_enrollment_with_currency"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.multi_currency_account_enrollment_with_currency"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.multi_currency_account_enrollment_with_currency"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.multi_currency_account_enrollment_with_currency"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.multi_currency_account_enrollment_with_currency"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.multi_currency_account_enrollment_with_currency"
      end
      # resource path
      local_var_path = '/v2/cards/{cardId}/multiCurrencyAccounts/enrollments/currency'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'MultiCurrencyAccountEnrollmentWithCurrencyResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#multi_currency_account_enrollment_with_currency\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Partner Card List
    # This API is used to list all the cards held by a customer with Citi partner.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client id generated during consumer onboarding
    # @param card_function Card function. This is a reference data field. Please use /v1/apac/utilities/referenceData/{cardFunction} resource to get valid value of this field with description.
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :linked_supplementary_card_flag Flag to identify linked supplementary information to be retrieved.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [PartnerCardListingResponse]
    def partner_card_listing(authorization, uuid, accept, client_id, card_function, opts = {})
      data, _status_code, _headers = partner_card_listing_with_http_info(authorization, uuid, accept, client_id, card_function, opts)
      data
    end

    # Partner Card List
    # This API is used to list all the cards held by a customer with Citi partner.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client id generated during consumer onboarding
    # @param card_function Card function. This is a reference data field. Please use /v1/apac/utilities/referenceData/{cardFunction} resource to get valid value of this field with description.
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :linked_supplementary_card_flag Flag to identify linked supplementary information to be retrieved.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(PartnerCardListingResponse, Integer, Hash)>] PartnerCardListingResponse data, response status code and response headers
    def partner_card_listing_with_http_info(authorization, uuid, accept, client_id, card_function, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.partner_card_listing ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.partner_card_listing"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.partner_card_listing"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.partner_card_listing"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.partner_card_listing"
      end
      # verify the required parameter 'card_function' is set
      if @api_client.config.client_side_validation && card_function.nil?
        fail ArgumentError, "Missing the required parameter 'card_function' when calling CardsApi.partner_card_listing"
      end
      # resource path
      local_var_path = '/partner/v1/cards'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'cardFunction'] = card_function
      query_params[:'linkedSupplementaryCardFlag'] = opts[:'linked_supplementary_card_flag'] if !opts[:'linked_supplementary_card_flag'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'PartnerCardListingResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#partner_card_listing\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is used to Suspend and Unsuspend corporate card.
    # This API is used to Suspend and Unsuspend corporate card.
    # @param body RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed(body, authorization, uuid, accept, client_id, content_type, opts = {})
      request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      nil
    end

    # This API is used to Suspend and Unsuspend corporate card.
    # This API is used to Suspend and Unsuspend corporate card.
    # @param body RequestCreditChargeCardCorporateCardsSuspensionAndCashLimitAllowedRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/suspensionAndCashLimitAllowed'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept-Language'] = opts[:'accept_language'] if !opts[:'accept_language'].nil?
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#request_credit_charge_card_corporate_cards_suspension_and_cash_limit_allowed\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is to do the replacement of credit card for Damage/Lost/Stolen reasons
    # This API is to do the replacement of credit card for Damage/Lost/Stolen reasons
    # @param body RequestCreditChargeCardFulfillmentArrangementCorporateCardsDamageReplacementRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [RequestCreditChargeCardFulfillmentArrangementCorporateCardsDamageReplacementResponse]
    def request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # This API is to do the replacement of credit card for Damage/Lost/Stolen reasons
    # This API is to do the replacement of credit card for Damage/Lost/Stolen reasons
    # @param body RequestCreditChargeCardFulfillmentArrangementCorporateCardsDamageReplacementRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(RequestCreditChargeCardFulfillmentArrangementCorporateCardsDamageReplacementResponse, Integer, Hash)>] RequestCreditChargeCardFulfillmentArrangementCorporateCardsDamageReplacementResponse data, response status code and response headers
    def request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/cardReplacement'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'RequestCreditChargeCardFulfillmentArrangementCorporateCardsDamageReplacementResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#request_credit_charge_card_fulfillment_arrangement_corporate_cards_damage_replacement\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is used for EPP Refund in Open Loop
    # This API is used for EPP Refund in Open Loop
    # @param body RequestCreditChargeCardFulfillmentArrangementCreditPlanEppRefundRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund(body, authorization, uuid, accept, client_id, content_type, opts = {})
      request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      nil
    end

    # This API is used for EPP Refund in Open Loop
    # This API is used for EPP Refund in Open Loop
    # @param body RequestCreditChargeCardFulfillmentArrangementCreditPlanEppRefundRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund"
      end
      # resource path
      local_var_path = '/v1/creditChargeCard/creditPlan/epp/refund'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#request_credit_charge_card_fulfillment_arrangement_credit_plan_epp_refund\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is used to retrieve the corporate card cash limit
    # This API is used to retrieve the corporate card cash limit
    # @param body RetrieveCreditChargeCardCorporateCardsCashLimitRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [RetrieveCreditChargeCardCorporateCardsCashLimitResponse]
    def retrieve_credit_charge_card_corporate_cards_cash_limit(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = retrieve_credit_charge_card_corporate_cards_cash_limit_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # This API is used to retrieve the corporate card cash limit
    # This API is used to retrieve the corporate card cash limit
    # @param body RetrieveCreditChargeCardCorporateCardsCashLimitRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(RetrieveCreditChargeCardCorporateCardsCashLimitResponse, Integer, Hash)>] RetrieveCreditChargeCardCorporateCardsCashLimitResponse data, response status code and response headers
    def retrieve_credit_charge_card_corporate_cards_cash_limit_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.retrieve_credit_charge_card_corporate_cards_cash_limit ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_cash_limit"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/cashLimit/retrieve'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept-Language'] = opts[:'accept_language'] if !opts[:'accept_language'].nil?
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'RetrieveCreditChargeCardCorporateCardsCashLimitResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#retrieve_credit_charge_card_corporate_cards_cash_limit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is used to retrieve the corporate card details
    # This API is used to retrieve the corporate card details
    # @param body RetrieveCreditChargeCardCorporateCardsDetailRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [RetrieveCreditChargeCardCorporateCardsDetailResponse]
    def retrieve_credit_charge_card_corporate_cards_detail(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = retrieve_credit_charge_card_corporate_cards_detail_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # This API is used to retrieve the corporate card details
    # This API is used to retrieve the corporate card details
    # @param body RetrieveCreditChargeCardCorporateCardsDetailRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(RetrieveCreditChargeCardCorporateCardsDetailResponse, Integer, Hash)>] RetrieveCreditChargeCardCorporateCardsDetailResponse data, response status code and response headers
    def retrieve_credit_charge_card_corporate_cards_detail_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.retrieve_credit_charge_card_corporate_cards_detail ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_detail"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_detail"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_detail"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_detail"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_detail"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_detail"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/details/retrieve'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept-Language'] = opts[:'accept_language'] if !opts[:'accept_language'].nil?
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'RetrieveCreditChargeCardCorporateCardsDetailResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#retrieve_credit_charge_card_corporate_cards_detail\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API used to retrieve the pending Authorization refund and intraday and history transactions
    # This API used to retrieve the pending Authorization refund and intraday and history transactions
    # @param body RetrieveCreditChargeCardCorporateCardsPendingAndIntradayAuthorizationTransactionsRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [RetrieveCreditChargeCardCorporateCardsPendingAndIntradayAuthorizationTransactionsResponse]
    def retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # This API used to retrieve the pending Authorization refund and intraday and history transactions
    # This API used to retrieve the pending Authorization refund and intraday and history transactions
    # @param body RetrieveCreditChargeCardCorporateCardsPendingAndIntradayAuthorizationTransactionsRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(RetrieveCreditChargeCardCorporateCardsPendingAndIntradayAuthorizationTransactionsResponse, Integer, Hash)>] RetrieveCreditChargeCardCorporateCardsPendingAndIntradayAuthorizationTransactionsResponse data, response status code and response headers
    def retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/pendingAndIntradayAuthorizationTransactions/retrieve'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept-Language'] = opts[:'accept_language'] if !opts[:'accept_language'].nil?
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'RetrieveCreditChargeCardCorporateCardsPendingAndIntradayAuthorizationTransactionsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#retrieve_credit_charge_card_corporate_cards_pending_and_intraday_authorization_transactions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve Credit Card Status
    # This API is used to return the credit card status.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param card_id The customer Card identifier in encrypted format.
    # @param transaction_reference_id This refers to Unique ID assigned by the message initiator that uniquely identifies a cardholder transaction.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [RetrieveCreditChargeCardFulfillmentArrangementCreditCardStatusResponse]
    def retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status(authorization, uuid, accept, client_id, card_id, transaction_reference_id, opts = {})
      data, _status_code, _headers = retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status_with_http_info(authorization, uuid, accept, client_id, card_id, transaction_reference_id, opts)
      data
    end

    # Retrieve Credit Card Status
    # This API is used to return the credit card status.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param card_id The customer Card identifier in encrypted format.
    # @param transaction_reference_id This refers to Unique ID assigned by the message initiator that uniquely identifies a cardholder transaction.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(RetrieveCreditChargeCardFulfillmentArrangementCreditCardStatusResponse, Integer, Hash)>] RetrieveCreditChargeCardFulfillmentArrangementCreditCardStatusResponse data, response status code and response headers
    def retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status_with_http_info(authorization, uuid, accept, client_id, card_id, transaction_reference_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status"
      end
      # verify the required parameter 'transaction_reference_id' is set
      if @api_client.config.client_side_validation && transaction_reference_id.nil?
        fail ArgumentError, "Missing the required parameter 'transaction_reference_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status"
      end
      # resource path
      local_var_path = '/v1/creditChargeCard/cardStatus'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'cardId'] = card_id
      query_params[:'transactionReferenceId'] = transaction_reference_id

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'RetrieveCreditChargeCardFulfillmentArrangementCreditCardStatusResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#retrieve_credit_charge_card_fulfillment_arrangement_credit_card_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
    # This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param offer_id This Refers to the unique id for the Pre login offer.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :product_id Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description.
    # @option opts [BigDecimal] :loan_amount Loan amount for easy payment plan booking.
    # @return [RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse]
    def retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp(authorization, uuid, accept, client_id, offer_id, opts = {})
      data, _status_code, _headers = retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_with_http_info(authorization, uuid, accept, client_id, offer_id, opts)
      data
    end

    # This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
    # This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param offer_id This Refers to the unique id for the Pre login offer.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :product_id Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description.
    # @option opts [BigDecimal] :loan_amount Loan amount for easy payment plan booking.
    # @return [Array<(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse, Integer, Hash)>] RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse data, response status code and response headers
    def retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_with_http_info(authorization, uuid, accept, client_id, offer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp"
      end
      # verify the required parameter 'offer_id' is set
      if @api_client.config.client_side_validation && offer_id.nil?
        fail ArgumentError, "Missing the required parameter 'offer_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp"
      end
      # resource path
      local_var_path = '/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans'.sub('{' + 'offerId' + '}', offer_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'productId'] = opts[:'product_id'] if !opts[:'product_id'].nil?
      query_params[:'loanAmount'] = opts[:'loan_amount'] if !opts[:'loan_amount'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
    # This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
    # @param body RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param offer_id This Refers to the unique id for the Pre login offer.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse]
    def retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings(body, authorization, uuid, accept, client_id, content_type, offer_id, opts = {})
      data, _status_code, _headers = retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings_with_http_info(body, authorization, uuid, accept, client_id, content_type, offer_id, opts)
      data
    end

    # This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
    # This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
    # @param body RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param offer_id This Refers to the unique id for the Pre login offer.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse, Integer, Hash)>] RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse data, response status code and response headers
    def retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings_with_http_info(body, authorization, uuid, accept, client_id, content_type, offer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings"
      end
      # verify the required parameter 'offer_id' is set
      if @api_client.config.client_side_validation && offer_id.nil?
        fail ArgumentError, "Missing the required parameter 'offer_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings"
      end
      # resource path
      local_var_path = '/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans/bookings'.sub('{' + 'offerId' + '}', offer_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_bookings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # To allow customers to view the payment breakdown details.
    # This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param offer_id This Refers to the unique id for the Pre login offer.
    # @param loan_amount Loan amount for easy payment plan booking.
    # @param tenor Tenure of loan in months
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :next_start_index In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data.
    # @option opts [BOOLEAN] :binary_data_flag This refer to the flag in case of binary file is require.
    # @return [RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse]
    def retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules(authorization, uuid, accept, client_id, offer_id, loan_amount, tenor, opts = {})
      data, _status_code, _headers = retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules_with_http_info(authorization, uuid, accept, client_id, offer_id, loan_amount, tenor, opts)
      data
    end

    # To allow customers to view the payment breakdown details.
    # This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param offer_id This Refers to the unique id for the Pre login offer.
    # @param loan_amount Loan amount for easy payment plan booking.
    # @param tenor Tenure of loan in months
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :next_start_index In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data.
    # @option opts [BOOLEAN] :binary_data_flag This refer to the flag in case of binary file is require.
    # @return [Array<(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse, Integer, Hash)>] RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse data, response status code and response headers
    def retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules_with_http_info(authorization, uuid, accept, client_id, offer_id, loan_amount, tenor, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules"
      end
      # verify the required parameter 'offer_id' is set
      if @api_client.config.client_side_validation && offer_id.nil?
        fail ArgumentError, "Missing the required parameter 'offer_id' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules"
      end
      # verify the required parameter 'loan_amount' is set
      if @api_client.config.client_side_validation && loan_amount.nil?
        fail ArgumentError, "Missing the required parameter 'loan_amount' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules"
      end
      # verify the required parameter 'tenor' is set
      if @api_client.config.client_side_validation && tenor.nil?
        fail ArgumentError, "Missing the required parameter 'tenor' when calling CardsApi.retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules"
      end
      # resource path
      local_var_path = '/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans/repaymentSchedules'.sub('{' + 'offerId' + '}', offer_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'loanAmount'] = loan_amount
      query_params[:'tenor'] = tenor
      query_params[:'nextStartIndex'] = opts[:'next_start_index'] if !opts[:'next_start_index'].nil?
      query_params[:'binaryDataFlag'] = opts[:'binary_data_flag'] if !opts[:'binary_data_flag'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#retrieve_credit_charge_card_fulfillment_arrangement_credit_plan_offers_epp_repayment_schedules\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is used to update the corporate card cash limit
    # This API is used to update the corporate card cash limit
    # @param body UpdateCreditChargeCardCorporateCardsCashLimitRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def update_credit_charge_card_corporate_cards_cash_limit(body, authorization, uuid, accept, client_id, content_type, opts = {})
      update_credit_charge_card_corporate_cards_cash_limit_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      nil
    end

    # This API is used to update the corporate card cash limit
    # This API is used to update the corporate card cash limit
    # @param body UpdateCreditChargeCardCorporateCardsCashLimitRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def update_credit_charge_card_corporate_cards_cash_limit_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.update_credit_charge_card_corporate_cards_cash_limit ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.update_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.update_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.update_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.update_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.update_credit_charge_card_corporate_cards_cash_limit"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.update_credit_charge_card_corporate_cards_cash_limit"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/cashLimit'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept-Language'] = opts[:'accept_language'] if !opts[:'accept_language'].nil?
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#update_credit_charge_card_corporate_cards_cash_limit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is used to update the corportate card credit limit
    # This API is used to update the corportate card credit limit
    # @param body UpdateCreditChargeCardCorporateCardsCreditLimitRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [UpdateCreditChargeCardCorporateCardsCreditLimitResponse]
    def update_credit_charge_card_corporate_cards_credit_limit(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = update_credit_charge_card_corporate_cards_credit_limit_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # This API is used to update the corportate card credit limit
    # This API is used to update the corportate card credit limit
    # @param body UpdateCreditChargeCardCorporateCardsCreditLimitRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response.
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(UpdateCreditChargeCardCorporateCardsCreditLimitResponse, Integer, Hash)>] UpdateCreditChargeCardCorporateCardsCreditLimitResponse data, response status code and response headers
    def update_credit_charge_card_corporate_cards_credit_limit_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.update_credit_charge_card_corporate_cards_credit_limit ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.update_credit_charge_card_corporate_cards_credit_limit"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.update_credit_charge_card_corporate_cards_credit_limit"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.update_credit_charge_card_corporate_cards_credit_limit"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.update_credit_charge_card_corporate_cards_credit_limit"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.update_credit_charge_card_corporate_cards_credit_limit"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.update_credit_charge_card_corporate_cards_credit_limit"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/creditLimit'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept-Language'] = opts[:'accept_language'] if !opts[:'accept_language'].nil?
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'UpdateCreditChargeCardCorporateCardsCreditLimitResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#update_credit_charge_card_corporate_cards_credit_limit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is to report lost or stolen card and to apply for Replacement
    # This API is to report lost or stolen card and to apply for Replacement
    # @param body UpdateCreditChargeCardFulfillmentArrangementCorporateCardsLostOrStolenRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [UpdateCreditChargeCardFulfillmentArrangementCorporateCardsLostOrStolenResponse]
    def update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # This API is to report lost or stolen card and to apply for Replacement
    # This API is to report lost or stolen card and to apply for Replacement
    # @param body UpdateCreditChargeCardFulfillmentArrangementCorporateCardsLostOrStolenRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(UpdateCreditChargeCardFulfillmentArrangementCorporateCardsLostOrStolenResponse, Integer, Hash)>] UpdateCreditChargeCardFulfillmentArrangementCorporateCardsLostOrStolenResponse data, response status code and response headers
    def update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/lostOrStolen'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'UpdateCreditChargeCardFulfillmentArrangementCorporateCardsLostOrStolenResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#update_credit_charge_card_fulfillment_arrangement_corporate_cards_lost_or_stolen\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API will help corporate user to update purchases for specific merchants coming in the API request
    # This API will help corporate user to update purchases for specific merchants coming in the API request
    # @param body UpdateCreditChargeCardFulfillmentArrangementCorporateCardsSpendControlRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control(body, authorization, uuid, accept, client_id, content_type, opts = {})
      update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      nil
    end

    # This API will help corporate user to update purchases for specific merchants coming in the API request
    # This API will help corporate user to update purchases for specific merchants coming in the API request
    # @param body UpdateCreditChargeCardFulfillmentArrangementCorporateCardsSpendControlRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control"
      end
      # resource path
      local_var_path = '/partner/v1/creditChargeCard/corporateCards/spendControl'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#update_credit_charge_card_fulfillment_arrangement_corporate_cards_spend_control\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Enroll for Transaction Limit Setup
    # This API is used to update the limits (daily and transaction level) and the enrollments applicable for the credit/debit card of a customer.
    # @param body CardsLimitsAndEnrollmentsUpdateRequest
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param card_id Card Id in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def v1_cards_card_id_limits_and_enrollments_put(body, uuid, accept, client_id, content_type, authorization, card_id, opts = {})
      v1_cards_card_id_limits_and_enrollments_put_with_http_info(body, uuid, accept, client_id, content_type, authorization, card_id, opts)
      nil
    end

    # Enroll for Transaction Limit Setup
    # This API is used to update the limits (daily and transaction level) and the enrollments applicable for the credit/debit card of a customer.
    # @param body CardsLimitsAndEnrollmentsUpdateRequest
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param card_id Card Id in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_cards_card_id_limits_and_enrollments_put_with_http_info(body, uuid, accept, client_id, content_type, authorization, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_card_id_limits_and_enrollments_put ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.v1_cards_card_id_limits_and_enrollments_put"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_card_id_limits_and_enrollments_put"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_card_id_limits_and_enrollments_put"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_card_id_limits_and_enrollments_put"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.v1_cards_card_id_limits_and_enrollments_put"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_card_id_limits_and_enrollments_put"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.v1_cards_card_id_limits_and_enrollments_put"
      end
      # resource path
      local_var_path = '/v1/cards/{cardId}/limitsAndEnrollments'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Authorization'] = authorization
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_card_id_limits_and_enrollments_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is to disenroll the Debit Card and FCY Accounts from Multi Currency Account
    # This API is to disenroll the Debit Card and FCY Accounts from Multi Currency Account
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param card_id The customer card identifier in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def v1_cards_card_id_multi_currency_accounts_delete(authorization, uuid, accept, client_id, card_id, opts = {})
      v1_cards_card_id_multi_currency_accounts_delete_with_http_info(authorization, uuid, accept, client_id, card_id, opts)
      nil
    end

    # This API is to disenroll the Debit Card and FCY Accounts from Multi Currency Account
    # This API is to disenroll the Debit Card and FCY Accounts from Multi Currency Account
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param card_id The customer card identifier in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_cards_card_id_multi_currency_accounts_delete_with_http_info(authorization, uuid, accept, client_id, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_card_id_multi_currency_accounts_delete ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_delete"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_delete"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_delete"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_delete"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_delete"
      end
      # resource path
      local_var_path = '/v1/cards/{cardId}/multiCurrencyAccounts'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_card_id_multi_currency_accounts_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is to generate/enroll new FCY Accounts to Multi Currency Account
    # This API is to create new account for a foreign currency and enroll it to Multi Currency Account (Global Wallet)
    # @param body MultiCurrencyAccountEnrollmentWithCurrencyRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The customer card identifier in encrypted format, that needs to be enrolled to multi currency accounts
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [MultiCurrencyAccountEnrollmentWithCurrencyResponse]
    def v1_cards_card_id_multi_currency_accounts_enrollments_currency_post(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      data, _status_code, _headers = v1_cards_card_id_multi_currency_accounts_enrollments_currency_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts)
      data
    end

    # This API is to generate/enroll new FCY Accounts to Multi Currency Account
    # This API is to create new account for a foreign currency and enroll it to Multi Currency Account (Global Wallet)
    # @param body MultiCurrencyAccountEnrollmentWithCurrencyRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The customer card identifier in encrypted format, that needs to be enrolled to multi currency accounts
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(MultiCurrencyAccountEnrollmentWithCurrencyResponse, Integer, Hash)>] MultiCurrencyAccountEnrollmentWithCurrencyResponse data, response status code and response headers
    def v1_cards_card_id_multi_currency_accounts_enrollments_currency_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_currency_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_currency_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_currency_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_currency_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_currency_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_currency_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_currency_post"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_currency_post"
      end
      # resource path
      local_var_path = '/v1/cards/{cardId}/multiCurrencyAccounts/enrollments/currency'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'MultiCurrencyAccountEnrollmentWithCurrencyResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_card_id_multi_currency_accounts_enrollments_currency_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is to enroll the Debit Card and FCY Accounts to Multi Currency Account
    # This API is to enroll the Debit Card and FCY Accounts to Multi Currency Account
    # @param body MultiCurrencyAccountEnrollmentRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The customer card identifier in encrypted format, that needs to be enrolled to multi currency accounts
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [MultiCurrencyAccountEnrollmentResponse]
    def v1_cards_card_id_multi_currency_accounts_enrollments_post(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      data, _status_code, _headers = v1_cards_card_id_multi_currency_accounts_enrollments_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts)
      data
    end

    # This API is to enroll the Debit Card and FCY Accounts to Multi Currency Account
    # This API is to enroll the Debit Card and FCY Accounts to Multi Currency Account
    # @param body MultiCurrencyAccountEnrollmentRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The customer card identifier in encrypted format, that needs to be enrolled to multi currency accounts
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(MultiCurrencyAccountEnrollmentResponse, Integer, Hash)>] MultiCurrencyAccountEnrollmentResponse data, response status code and response headers
    def v1_cards_card_id_multi_currency_accounts_enrollments_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_post"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.v1_cards_card_id_multi_currency_accounts_enrollments_post"
      end
      # resource path
      local_var_path = '/v1/cards/{cardId}/multiCurrencyAccounts/enrollments'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'MultiCurrencyAccountEnrollmentResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_card_id_multi_currency_accounts_enrollments_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API enables customer to delete an existing travel plan 
    # This API enables customer to delete an existing travel plan 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def v1_cards_card_id_overseas_travel_plans_delete(authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      v1_cards_card_id_overseas_travel_plans_delete_with_http_info(authorization, uuid, accept, client_id, content_type, card_id, opts)
      nil
    end

    # This API enables customer to delete an existing travel plan 
    # This API enables customer to delete an existing travel plan 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_cards_card_id_overseas_travel_plans_delete_with_http_info(authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_card_id_overseas_travel_plans_delete ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_delete"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_delete"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_delete"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_delete"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_delete"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_delete"
      end
      # resource path
      local_var_path = '/v1/cards/{cardId}/overseasTravelPlans'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_card_id_overseas_travel_plans_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API enables customer to add a new travel plan
    # This API enables customer to add a new travel plan
    # @param body OverseasTravelPlanAddRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def v1_cards_card_id_overseas_travel_plans_post(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      v1_cards_card_id_overseas_travel_plans_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts)
      nil
    end

    # This API enables customer to add a new travel plan
    # This API enables customer to add a new travel plan
    # @param body OverseasTravelPlanAddRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_cards_card_id_overseas_travel_plans_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_card_id_overseas_travel_plans_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_post"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_post"
      end
      # resource path
      local_var_path = '/v1/cards/{cardId}/overseasTravelPlans'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_card_id_overseas_travel_plans_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API enables customer to update an existing travel plan
    # This API enables customer to update an existing travel plan
    # @param body OverseasTravelPlanUpdateRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def v1_cards_card_id_overseas_travel_plans_put(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      v1_cards_card_id_overseas_travel_plans_put_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts)
      nil
    end

    # This API enables customer to update an existing travel plan
    # This API enables customer to update an existing travel plan
    # @param body OverseasTravelPlanUpdateRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_cards_card_id_overseas_travel_plans_put_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_card_id_overseas_travel_plans_put ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_put"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_put"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_put"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_put"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_put"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_put"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.v1_cards_card_id_overseas_travel_plans_put"
      end
      # resource path
      local_var_path = '/v1/cards/{cardId}/overseasTravelPlans'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_card_id_overseas_travel_plans_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Verify CVV for Debit or Credit Card
    # This API is used to verify the CVV of a debit or a credit card.
    # @param body CvvVerificationRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def v1_cards_cvv_verification_post(body, authorization, uuid, accept, client_id, content_type, opts = {})
      v1_cards_cvv_verification_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      nil
    end

    # Verify CVV for Debit or Credit Card
    # This API is used to verify the CVV of a debit or a credit card.
    # @param body CvvVerificationRequest
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_cards_cvv_verification_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_cvv_verification_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CardsApi.v1_cards_cvv_verification_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_cvv_verification_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_cvv_verification_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_cvv_verification_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_cvv_verification_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CardsApi.v1_cards_cvv_verification_post"
      end
      # resource path
      local_var_path = '/v1/cards/cvv/verification'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_cvv_verification_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API request is to get the Debit Card, account details and list of foreign currencies that can be enrolled to Multi Currency Account
    # To get the needed account and currency details for Multi Currency Account
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [MultiCurrencyAccountEligibilityResponse]
    def v1_cards_multi_currency_accounts_enrollment_eligibility_get(authorization, uuid, accept, client_id, opts = {})
      data, _status_code, _headers = v1_cards_multi_currency_accounts_enrollment_eligibility_get_with_http_info(authorization, uuid, accept, client_id, opts)
      data
    end

    # This API request is to get the Debit Card, account details and list of foreign currencies that can be enrolled to Multi Currency Account
    # To get the needed account and currency details for Multi Currency Account
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(MultiCurrencyAccountEligibilityResponse, Integer, Hash)>] MultiCurrencyAccountEligibilityResponse data, response status code and response headers
    def v1_cards_multi_currency_accounts_enrollment_eligibility_get_with_http_info(authorization, uuid, accept, client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_multi_currency_accounts_enrollment_eligibility_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_multi_currency_accounts_enrollment_eligibility_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_multi_currency_accounts_enrollment_eligibility_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_multi_currency_accounts_enrollment_eligibility_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_multi_currency_accounts_enrollment_eligibility_get"
      end
      # resource path
      local_var_path = '/v1/cards/multiCurrencyAccounts/enrollment/eligibility'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'MultiCurrencyAccountEligibilityResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_multi_currency_accounts_enrollment_eligibility_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API enables customer to inquire current travel plan
    # This API enables customer to inquire current travel plan
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :card_id The card id  in encrypted format
    # @return [OverseasTravelPlanInquiryResponse]
    def v1_cards_overseas_travel_plans_get(authorization, uuid, accept, client_id, opts = {})
      data, _status_code, _headers = v1_cards_overseas_travel_plans_get_with_http_info(authorization, uuid, accept, client_id, opts)
      data
    end

    # This API enables customer to inquire current travel plan
    # This API enables customer to inquire current travel plan
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :card_id The card id  in encrypted format
    # @return [Array<(OverseasTravelPlanInquiryResponse, Integer, Hash)>] OverseasTravelPlanInquiryResponse data, response status code and response headers
    def v1_cards_overseas_travel_plans_get_with_http_info(authorization, uuid, accept, client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v1_cards_overseas_travel_plans_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v1_cards_overseas_travel_plans_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v1_cards_overseas_travel_plans_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v1_cards_overseas_travel_plans_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v1_cards_overseas_travel_plans_get"
      end
      # resource path
      local_var_path = '/v1/cards/overseasTravelPlans'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'cardId'] = opts[:'card_id'] if !opts[:'card_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'OverseasTravelPlanInquiryResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v1_cards_overseas_travel_plans_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is to disenroll the Debit Card and FCY Accounts from Multi Currency Account
    # This API is to disenroll the Debit Card and FCY Accounts from Multi Currency Account
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param card_id The customer card identifier in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [nil]
    def v2_cards_card_id_multi_currency_accounts_delete(authorization, uuid, accept, client_id, card_id, opts = {})
      v2_cards_card_id_multi_currency_accounts_delete_with_http_info(authorization, uuid, accept, client_id, card_id, opts)
      nil
    end

    # This API is to disenroll the Debit Card and FCY Accounts from Multi Currency Account
    # This API is to disenroll the Debit Card and FCY Accounts from Multi Currency Account
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param card_id The customer card identifier in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v2_cards_card_id_multi_currency_accounts_delete_with_http_info(authorization, uuid, accept, client_id, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v2_cards_card_id_multi_currency_accounts_delete ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v2_cards_card_id_multi_currency_accounts_delete"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v2_cards_card_id_multi_currency_accounts_delete"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v2_cards_card_id_multi_currency_accounts_delete"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v2_cards_card_id_multi_currency_accounts_delete"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CardsApi.v2_cards_card_id_multi_currency_accounts_delete"
      end
      # resource path
      local_var_path = '/v2/cards/{cardId}/multiCurrencyAccounts'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v2_cards_card_id_multi_currency_accounts_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API request is to get the Debit Card, account details and list of foreign currencies that can be enrolled to Multi Currency Account
    # To get the needed account and currency details for Multi Currency Account
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [MultiCurrencyAccountEligibilityResponse]
    def v2_cards_multi_currency_accounts_enrollment_eligibility_get(authorization, uuid, accept, client_id, opts = {})
      data, _status_code, _headers = v2_cards_multi_currency_accounts_enrollment_eligibility_get_with_http_info(authorization, uuid, accept, client_id, opts)
      data
    end

    # This API request is to get the Debit Card, account details and list of foreign currencies that can be enrolled to Multi Currency Account
    # To get the needed account and currency details for Multi Currency Account
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(MultiCurrencyAccountEligibilityResponse, Integer, Hash)>] MultiCurrencyAccountEligibilityResponse data, response status code and response headers
    def v2_cards_multi_currency_accounts_enrollment_eligibility_get_with_http_info(authorization, uuid, accept, client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CardsApi.v2_cards_multi_currency_accounts_enrollment_eligibility_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CardsApi.v2_cards_multi_currency_accounts_enrollment_eligibility_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CardsApi.v2_cards_multi_currency_accounts_enrollment_eligibility_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CardsApi.v2_cards_multi_currency_accounts_enrollment_eligibility_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CardsApi.v2_cards_multi_currency_accounts_enrollment_eligibility_get"
      end
      # resource path
      local_var_path = '/v2/cards/multiCurrencyAccounts/enrollment/eligibility'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'MultiCurrencyAccountEligibilityResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CardsApi#v2_cards_multi_currency_accounts_enrollment_eligibility_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
