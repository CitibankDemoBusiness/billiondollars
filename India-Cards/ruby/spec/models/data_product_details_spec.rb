=begin
#Cards

#The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::DataProductDetails
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DataProductDetails' do
  before do
    # run before each test
    @instance = SwaggerClient::DataProductDetails.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DataProductDetails' do
    it 'should create an instance of DataProductDetails' do
      expect(@instance).to be_instance_of(SwaggerClient::DataProductDetails)
    end
  end
  describe 'test attribute "name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "description"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "product_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["american_express", "jcb", "mastercard", "mydebit", "others", "switch", "unionpay", "visa"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.product_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "sub_product_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["black", "classic", "commercial", "diamond", "electron", "generic", "gold", "infinite", "infinite_privilege", "maestro", "others", "platinum", "reserve", "signature", "world", "world_elite"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.sub_product_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "shariah_compliance"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "shariah_compliance_remark"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "card_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["credit_card", "debit_card", "charge_card", "prepaid_card"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.card_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "pds_url"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "image_url"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "disclaimer_url"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
