/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.ExecuteApplicationProcessingUnsecuredLoanTopupOfferAcceptanceAndSubmissionRequest;
import io.swagger.client.model.InitiateApplicationProcessingUnsecuredLoanTopupRequest;
import io.swagger.client.model.InitiateApplicationProcessingUnsecuredLoanTopupResponse;
import io.swagger.client.model.RequestedLoanTopupDecision;
import io.swagger.client.model.RetrieveApplicationProcessingUnsecuredLoanTopupRepaymentScheduleResponse;
import io.swagger.client.model.UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningRequest;
import io.swagger.client.model.UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningResponse;
import io.swagger.client.model.UpdateApplicationProcessingUnsecuredLoanTopupInPrincipalApprovalResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OfferAndDecisionManagementApi
 */
@Ignore
public class OfferAndDecisionManagementApiTest {

    private final OfferAndDecisionManagementApi api = new OfferAndDecisionManagementApi();

    /**
     * This API is used to perform offer acceptance for Loan Top Up Application &amp; final submit
     *
     * This API is used to perform offer acceptance for Loan Top Up Application &amp; final submit
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeApplicationProcessingUnsecuredLoanTopupOfferAcceptanceAndSubmissionTest() throws ApiException {
        ExecuteApplicationProcessingUnsecuredLoanTopupOfferAcceptanceAndSubmissionRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        String clientDetails = null;
        api.executeApplicationProcessingUnsecuredLoanTopupOfferAcceptanceAndSubmission(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is used to create application for  loan top-up for existing credit card customer. This is for post login function
     *
     * This API is used to create application for  loan top-up for existing credit card customer. This is for post login function
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void initiateApplicationProcessingUnsecuredLoanTopupTest() throws ApiException {
        InitiateApplicationProcessingUnsecuredLoanTopupRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String clientDetails = null;
        InitiateApplicationProcessingUnsecuredLoanTopupResponse response = api.initiateApplicationProcessingUnsecuredLoanTopup(body, authorization, uuid, accept, clientId, contentType, clientDetails);

        // TODO: test validations
    }
    /**
     * This API fetches repayment schedule details for a loan including loan amount, tenor, rates, fees, etc for unsecured loans on ready credit
     *
     * This API fetches repayment schedule details for a loan including loan amount, tenor, rates, fees, etc for unsecured loans on ready credit
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveApplicationProcessingUnsecuredLoanTopupRepaymentScheduleTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        Double loanAmount = null;
        Double insurancePremiumAmount = null;
        Double feeAmount = null;
        Double loanInterestRate = null;
        Integer tenor = null;
        String clientDetails = null;
        RetrieveApplicationProcessingUnsecuredLoanTopupRepaymentScheduleResponse response = api.retrieveApplicationProcessingUnsecuredLoanTopupRepaymentSchedule(authorization, uuid, accept, clientId, contentType, loanAmount, insurancePremiumAmount, feeAmount, loanInterestRate, tenor, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is used to update a saved Loan top-up application &amp; do background screening
     *
     * This API is used to update a saved Loan top-up application &amp; do background screening
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningTest() throws ApiException {
        UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        String clientDetails = null;
        UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningResponse response = api.updateApplicationProcessingUnsecuredLoanTopupBackgroundScreening(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is used to update a saved Loan top-up application and in principle approval
     *
     * This API is used to update a saved Loan top-up application and in principle approval
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateApplicationProcessingUnsecuredLoanTopupInPrincipalApprovalTest() throws ApiException {
        RequestedLoanTopupDecision body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        String clientDetails = null;
        UpdateApplicationProcessingUnsecuredLoanTopupInPrincipalApprovalResponse response = api.updateApplicationProcessingUnsecuredLoanTopupInPrincipalApproval(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);

        // TODO: test validations
    }
}
