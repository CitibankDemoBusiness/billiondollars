/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import java.math.BigDecimal;
import io.swagger.client.model.CreditCheckRequest;
import io.swagger.client.model.CreditCheckResponse;
import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.LoanBookingConfirmationPreLoginRequest;
import io.swagger.client.model.LoanBookingConfirmationPreLoginResponse;
import io.swagger.client.model.LoanBookingPreLoginRequest;
import io.swagger.client.model.LoanBookingPreLoginResponse;
import io.swagger.client.model.LoanSummaryResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse;
import io.swagger.client.model.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse;
import io.swagger.client.model.RetrieveDisbursementOptionsPreLoginResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardsApi
 */
@Ignore
public class CardsApiTest {

    private final CardsApi api = new CardsApi();

    /**
     * This API  is triggered after CMAMT interdiction in Loan Booking process.
     *
     * This API  is triggered after CMAMT interdiction in Loan Booking process.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loanBookingConfirmationPreLoginTest() throws ApiException {
        LoanBookingConfirmationPreLoginRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String offerId = null;
        String clientDetails = null;
        LoanBookingConfirmationPreLoginResponse response = api.loanBookingConfirmationPreLogin(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
     *
     * This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loanBookingPreLoginTest() throws ApiException {
        LoanBookingPreLoginRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String offerId = null;
        String clientDetails = null;
        LoanBookingPreLoginResponse response = api.loanBookingPreLogin(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
     *
     * This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void partnerV1AccountsAccountIdLoansGetTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String accountId = null;
        String clientDetails = null;
        String nextStartIndex = null;
        String loanStatus = null;
        String offerType = null;
        String offerIndicator = null;
        LoanSummaryResponse response = api.partnerV1AccountsAccountIdLoansGet(authorization, uuid, accept, clientId, accountId, clientDetails, nextStartIndex, loanStatus, offerType, offerIndicator);

        // TODO: test validations
    }
    /**
     * This API is used to merge the multiple LOPs in to single loan with top up amount added
     *
     * This API is used to merge the multiple LOPs in to single loan with top up amount added
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateTest() throws ApiException {
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String cardId = null;
        String clientDetails = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate(body, authorization, uuid, accept, clientId, contentType, cardId, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is used to merge the multiple LOPs in to single loan with top up amount added
     *
     * This API is used to merge the multiple LOPs in to single loan with top up amount added
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationTest() throws ApiException {
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String clientDetails = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation(body, authorization, uuid, accept, clientId, contentType, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is used to merge the multiple LOPs in to single loan with top up amount added
     *
     * This API is used to merge the multiple LOPs in to single loan with top up amount added
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginTest() throws ApiException {
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String offerId = null;
        String clientDetails = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is used to merge the multiple LOPs in to single loan with top up amount added
     *
     * This API is used to merge the multiple LOPs in to single loan with top up amount added
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginTest() throws ApiException {
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String offerId = null;
        String clientDetails = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);

        // TODO: test validations
    }
    /**
     * This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
     *
     * This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String offerId = null;
        String clientDetails = null;
        String offerType = null;
        String offerIndicator = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin(authorization, uuid, accept, clientId, offerId, clientDetails, offerType, offerIndicator);

        // TODO: test validations
    }
    /**
     * This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
     *
     * This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String offerId = null;
        String clientDetails = null;
        String productId = null;
        BigDecimal loanAmount = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp(authorization, uuid, accept, clientId, offerId, clientDetails, productId, loanAmount);

        // TODO: test validations
    }
    /**
     * This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
     *
     * This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsTest() throws ApiException {
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String offerId = null;
        String clientDetails = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);

        // TODO: test validations
    }
    /**
     * To allow customers to view the payment breakdown details.
     *
     * This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String offerId = null;
        BigDecimal loanAmount = null;
        BigDecimal tenor = null;
        String clientDetails = null;
        String nextStartIndex = null;
        Boolean binaryDataFlag = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules(authorization, uuid, accept, clientId, offerId, loanAmount, tenor, clientDetails, nextStartIndex, binaryDataFlag);

        // TODO: test validations
    }
    /**
     * To allow customers to view the payment breakdown details.
     *
     * This API allows the customer to view the payment breakdown details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String offerId = null;
        String loanAmount = null;
        Integer tenor = null;
        String clientDetails = null;
        String nextStartIndex = null;
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse response = api.retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules(authorization, uuid, accept, clientId, offerId, loanAmount, tenor, clientDetails, nextStartIndex);

        // TODO: test validations
    }
    /**
     * Get the list of disbursement options and the details like bank details and billing address relevant to each option.
     *
     * Get the list of disbursement options and the details like bank details and billing address relevant to each option.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveDisbursementOptionsPreLoginTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String offerId = null;
        String clientDetails = null;
        RetrieveDisbursementOptionsPreLoginResponse response = api.retrieveDisbursementOptionsPreLogin(authorization, uuid, accept, clientId, offerId, clientDetails);

        // TODO: test validations
    }
    /**
     * Credit Check based on Debt Service Ratio
     *
     * This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1AccountsAccountIdLoansCreditCheckSearchPostTest() throws ApiException {
        CreditCheckRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String accountId = null;
        String clientDetails = null;
        CreditCheckResponse response = api.v1AccountsAccountIdLoansCreditCheckSearchPost(body, authorization, uuid, accept, clientId, accountId, clientDetails);

        // TODO: test validations
    }
}
