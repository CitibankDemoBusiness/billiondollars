/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * MarketingCampaignOffer
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class MarketingCampaignOffer {
  @SerializedName("campaignId")
  private String campaignId = null;

  @SerializedName("waveId")
  private String waveId = null;

  @SerializedName("channelId")
  private String channelId = null;

  @SerializedName("offerExpiryDate")
  private LocalDate offerExpiryDate = null;

  @SerializedName("offerStatus")
  private String offerStatus = null;

  public MarketingCampaignOffer campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * Unique identifier for a specific campaign being offered to the channel
   * @return campaignId
  **/
  @Schema(example = "RCE_HK_115XSELL", required = true, description = "Unique identifier for a specific campaign being offered to the channel")
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }

  public MarketingCampaignOffer waveId(String waveId) {
    this.waveId = waveId;
    return this;
  }

   /**
   * Unique identifier for the wave under specific campaign being offered to the channel
   * @return waveId
  **/
  @Schema(example = "4DRJUDKC8A", required = true, description = "Unique identifier for the wave under specific campaign being offered to the channel")
  public String getWaveId() {
    return waveId;
  }

  public void setWaveId(String waveId) {
    this.waveId = waveId;
  }

  public MarketingCampaignOffer channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

   /**
   * This field is used to store the channel through which the particular offer has been created
   * @return channelId
  **/
  @Schema(example = "CBOL", required = true, description = "This field is used to store the channel through which the particular offer has been created")
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  public MarketingCampaignOffer offerExpiryDate(LocalDate offerExpiryDate) {
    this.offerExpiryDate = offerExpiryDate;
    return this;
  }

   /**
   * Offer expiry date in ISO 8601 date format YYYY-MM-DD
   * @return offerExpiryDate
  **/
  @Schema(required = true, description = "Offer expiry date in ISO 8601 date format YYYY-MM-DD")
  public LocalDate getOfferExpiryDate() {
    return offerExpiryDate;
  }

  public void setOfferExpiryDate(LocalDate offerExpiryDate) {
    this.offerExpiryDate = offerExpiryDate;
  }

  public MarketingCampaignOffer offerStatus(String offerStatus) {
    this.offerStatus = offerStatus;
    return this;
  }

   /**
   * Offer status to indicate the status of the offer.
   * @return offerStatus
  **/
  @Schema(example = "NEW_DEPLOYED/DELIVERED/INTERESTED/ACCEPTED/NON_QUALIFIED", required = true, description = "Offer status to indicate the status of the offer.")
  public String getOfferStatus() {
    return offerStatus;
  }

  public void setOfferStatus(String offerStatus) {
    this.offerStatus = offerStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketingCampaignOffer marketingCampaignOffer = (MarketingCampaignOffer) o;
    return Objects.equals(this.campaignId, marketingCampaignOffer.campaignId) &&
        Objects.equals(this.waveId, marketingCampaignOffer.waveId) &&
        Objects.equals(this.channelId, marketingCampaignOffer.channelId) &&
        Objects.equals(this.offerExpiryDate, marketingCampaignOffer.offerExpiryDate) &&
        Objects.equals(this.offerStatus, marketingCampaignOffer.offerStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignId, waveId, channelId, offerExpiryDate, offerStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketingCampaignOffer {\n");
    
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    waveId: ").append(toIndentedString(waveId)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    offerExpiryDate: ").append(toIndentedString(offerExpiryDate)).append("\n");
    sb.append("    offerStatus: ").append(toIndentedString(offerStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
