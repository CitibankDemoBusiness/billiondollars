/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ExternalBankDetails;
import io.swagger.client.model.PayeeAccountDetails;
import io.swagger.client.model.PersonalAccountDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * DisbursementOptions
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class DisbursementOptions {
  @SerializedName("disbursementOption")
  private String disbursementOption = null;

  @SerializedName("externalBankDetails")
  private ExternalBankDetails externalBankDetails = null;

  @SerializedName("personalAccountDetails")
  private List<PersonalAccountDetails> personalAccountDetails = null;

  @SerializedName("payeeAccountDetails")
  private List<PayeeAccountDetails> payeeAccountDetails = null;

  public DisbursementOptions disbursementOption(String disbursementOption) {
    this.disbursementOption = disbursementOption;
    return this;
  }

   /**
   * List of options available to receive the disbursement of loan amount Please use /v1/utilities/referenceData/{disbursementOption} resource to get valid value of this field with description.
   * @return disbursementOption
  **/
  @Schema(example = "STANDING_INSTRUCTION", required = true, description = "List of options available to receive the disbursement of loan amount Please use /v1/utilities/referenceData/{disbursementOption} resource to get valid value of this field with description.")
  public String getDisbursementOption() {
    return disbursementOption;
  }

  public void setDisbursementOption(String disbursementOption) {
    this.disbursementOption = disbursementOption;
  }

  public DisbursementOptions externalBankDetails(ExternalBankDetails externalBankDetails) {
    this.externalBankDetails = externalBankDetails;
    return this;
  }

   /**
   * Get externalBankDetails
   * @return externalBankDetails
  **/
  @Schema(description = "")
  public ExternalBankDetails getExternalBankDetails() {
    return externalBankDetails;
  }

  public void setExternalBankDetails(ExternalBankDetails externalBankDetails) {
    this.externalBankDetails = externalBankDetails;
  }

  public DisbursementOptions personalAccountDetails(List<PersonalAccountDetails> personalAccountDetails) {
    this.personalAccountDetails = personalAccountDetails;
    return this;
  }

  public DisbursementOptions addPersonalAccountDetailsItem(PersonalAccountDetails personalAccountDetailsItem) {
    if (this.personalAccountDetails == null) {
      this.personalAccountDetails = new ArrayList<PersonalAccountDetails>();
    }
    this.personalAccountDetails.add(personalAccountDetailsItem);
    return this;
  }

   /**
   * Get personalAccountDetails
   * @return personalAccountDetails
  **/
  @Schema(description = "")
  public List<PersonalAccountDetails> getPersonalAccountDetails() {
    return personalAccountDetails;
  }

  public void setPersonalAccountDetails(List<PersonalAccountDetails> personalAccountDetails) {
    this.personalAccountDetails = personalAccountDetails;
  }

  public DisbursementOptions payeeAccountDetails(List<PayeeAccountDetails> payeeAccountDetails) {
    this.payeeAccountDetails = payeeAccountDetails;
    return this;
  }

  public DisbursementOptions addPayeeAccountDetailsItem(PayeeAccountDetails payeeAccountDetailsItem) {
    if (this.payeeAccountDetails == null) {
      this.payeeAccountDetails = new ArrayList<PayeeAccountDetails>();
    }
    this.payeeAccountDetails.add(payeeAccountDetailsItem);
    return this;
  }

   /**
   * Get payeeAccountDetails
   * @return payeeAccountDetails
  **/
  @Schema(description = "")
  public List<PayeeAccountDetails> getPayeeAccountDetails() {
    return payeeAccountDetails;
  }

  public void setPayeeAccountDetails(List<PayeeAccountDetails> payeeAccountDetails) {
    this.payeeAccountDetails = payeeAccountDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DisbursementOptions disbursementOptions = (DisbursementOptions) o;
    return Objects.equals(this.disbursementOption, disbursementOptions.disbursementOption) &&
        Objects.equals(this.externalBankDetails, disbursementOptions.externalBankDetails) &&
        Objects.equals(this.personalAccountDetails, disbursementOptions.personalAccountDetails) &&
        Objects.equals(this.payeeAccountDetails, disbursementOptions.payeeAccountDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disbursementOption, externalBankDetails, personalAccountDetails, payeeAccountDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DisbursementOptions {\n");
    
    sb.append("    disbursementOption: ").append(toIndentedString(disbursementOption)).append("\n");
    sb.append("    externalBankDetails: ").append(toIndentedString(externalBankDetails)).append("\n");
    sb.append("    personalAccountDetails: ").append(toIndentedString(personalAccountDetails)).append("\n");
    sb.append("    payeeAccountDetails: ").append(toIndentedString(payeeAccountDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
