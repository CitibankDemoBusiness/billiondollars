/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BeneficiaryBankDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class BeneficiaryBankDetails {
  @SerializedName("fullName")
  private String fullName = null;

  @SerializedName("displayAccountNumber")
  private String displayAccountNumber = null;

  @SerializedName("bankName")
  private String bankName = null;

  @SerializedName("bankCode")
  private String bankCode = null;

  @SerializedName("accountNumber")
  private String accountNumber = null;

  public BeneficiaryBankDetails fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

   /**
   * Name of the Beneficiary.
   * @return fullName
  **/
  @Schema(example = "Albert Neigh", required = true, description = "Name of the Beneficiary.")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public BeneficiaryBankDetails displayAccountNumber(String displayAccountNumber) {
    this.displayAccountNumber = displayAccountNumber;
    return this;
  }

   /**
   * A masked account number that can be displayed to the customer
   * @return displayAccountNumber
  **/
  @Schema(example = "XXXXXX2391", required = true, description = "A masked account number that can be displayed to the customer")
  public String getDisplayAccountNumber() {
    return displayAccountNumber;
  }

  public void setDisplayAccountNumber(String displayAccountNumber) {
    this.displayAccountNumber = displayAccountNumber;
  }

  public BeneficiaryBankDetails bankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

   /**
   * Name of the bank.
   * @return bankName
  **/
  @Schema(example = "HSBC Bank", required = true, description = "Name of the bank.")
  public String getBankName() {
    return bankName;
  }

  public void setBankName(String bankName) {
    this.bankName = bankName;
  }

  public BeneficiaryBankDetails bankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

   /**
   * The bank code of the external payee account.
   * @return bankCode
  **/
  @Schema(example = "44525101", required = true, description = "The bank code of the external payee account.")
  public String getBankCode() {
    return bankCode;
  }

  public void setBankCode(String bankCode) {
    this.bankCode = bankCode;
  }

  public BeneficiaryBankDetails accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Account number of the beneficiary.
   * @return accountNumber
  **/
  @Schema(example = "9125812364", description = "Account number of the beneficiary.")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeneficiaryBankDetails beneficiaryBankDetails = (BeneficiaryBankDetails) o;
    return Objects.equals(this.fullName, beneficiaryBankDetails.fullName) &&
        Objects.equals(this.displayAccountNumber, beneficiaryBankDetails.displayAccountNumber) &&
        Objects.equals(this.bankName, beneficiaryBankDetails.bankName) &&
        Objects.equals(this.bankCode, beneficiaryBankDetails.bankCode) &&
        Objects.equals(this.accountNumber, beneficiaryBankDetails.accountNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fullName, displayAccountNumber, bankName, bankCode, accountNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeneficiaryBankDetails {\n");
    
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    displayAccountNumber: ").append(toIndentedString(displayAccountNumber)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
