/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CallDepositAccount;
import io.swagger.client.model.CheckingAccount;
import io.swagger.client.model.CreditCardAccount;
import io.swagger.client.model.LoanAccount;
import io.swagger.client.model.MutualFundAccount;
import io.swagger.client.model.PremiumDepositAccount;
import io.swagger.client.model.ReadyCreditAccount;
import io.swagger.client.model.SavingsAccount;
import io.swagger.client.model.SecuritiesBrokerageAccount;
import io.swagger.client.model.TimeDepositAccount;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Detailed account information
 */
@Schema(description = "Detailed account information")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class AccountDetailsResponse {
  @SerializedName("creditCardAccount")
  private CreditCardAccount creditCardAccount = null;

  @SerializedName("readyCreditAccount")
  private ReadyCreditAccount readyCreditAccount = null;

  @SerializedName("checkingAccount")
  private CheckingAccount checkingAccount = null;

  @SerializedName("savingsAccount")
  private SavingsAccount savingsAccount = null;

  @SerializedName("timeDepositAccount")
  private TimeDepositAccount timeDepositAccount = null;

  @SerializedName("loanAccount")
  private LoanAccount loanAccount = null;

  @SerializedName("mutualFundAccount")
  private MutualFundAccount mutualFundAccount = null;

  @SerializedName("securitiesBrokerageAccount")
  private SecuritiesBrokerageAccount securitiesBrokerageAccount = null;

  @SerializedName("callDepositAccount")
  private CallDepositAccount callDepositAccount = null;

  @SerializedName("premiumDepositAccount")
  private PremiumDepositAccount premiumDepositAccount = null;

  public AccountDetailsResponse creditCardAccount(CreditCardAccount creditCardAccount) {
    this.creditCardAccount = creditCardAccount;
    return this;
  }

   /**
   * Get creditCardAccount
   * @return creditCardAccount
  **/
  @Schema(description = "")
  public CreditCardAccount getCreditCardAccount() {
    return creditCardAccount;
  }

  public void setCreditCardAccount(CreditCardAccount creditCardAccount) {
    this.creditCardAccount = creditCardAccount;
  }

  public AccountDetailsResponse readyCreditAccount(ReadyCreditAccount readyCreditAccount) {
    this.readyCreditAccount = readyCreditAccount;
    return this;
  }

   /**
   * Get readyCreditAccount
   * @return readyCreditAccount
  **/
  @Schema(description = "")
  public ReadyCreditAccount getReadyCreditAccount() {
    return readyCreditAccount;
  }

  public void setReadyCreditAccount(ReadyCreditAccount readyCreditAccount) {
    this.readyCreditAccount = readyCreditAccount;
  }

  public AccountDetailsResponse checkingAccount(CheckingAccount checkingAccount) {
    this.checkingAccount = checkingAccount;
    return this;
  }

   /**
   * Get checkingAccount
   * @return checkingAccount
  **/
  @Schema(description = "")
  public CheckingAccount getCheckingAccount() {
    return checkingAccount;
  }

  public void setCheckingAccount(CheckingAccount checkingAccount) {
    this.checkingAccount = checkingAccount;
  }

  public AccountDetailsResponse savingsAccount(SavingsAccount savingsAccount) {
    this.savingsAccount = savingsAccount;
    return this;
  }

   /**
   * Get savingsAccount
   * @return savingsAccount
  **/
  @Schema(description = "")
  public SavingsAccount getSavingsAccount() {
    return savingsAccount;
  }

  public void setSavingsAccount(SavingsAccount savingsAccount) {
    this.savingsAccount = savingsAccount;
  }

  public AccountDetailsResponse timeDepositAccount(TimeDepositAccount timeDepositAccount) {
    this.timeDepositAccount = timeDepositAccount;
    return this;
  }

   /**
   * Get timeDepositAccount
   * @return timeDepositAccount
  **/
  @Schema(description = "")
  public TimeDepositAccount getTimeDepositAccount() {
    return timeDepositAccount;
  }

  public void setTimeDepositAccount(TimeDepositAccount timeDepositAccount) {
    this.timeDepositAccount = timeDepositAccount;
  }

  public AccountDetailsResponse loanAccount(LoanAccount loanAccount) {
    this.loanAccount = loanAccount;
    return this;
  }

   /**
   * Get loanAccount
   * @return loanAccount
  **/
  @Schema(description = "")
  public LoanAccount getLoanAccount() {
    return loanAccount;
  }

  public void setLoanAccount(LoanAccount loanAccount) {
    this.loanAccount = loanAccount;
  }

  public AccountDetailsResponse mutualFundAccount(MutualFundAccount mutualFundAccount) {
    this.mutualFundAccount = mutualFundAccount;
    return this;
  }

   /**
   * Get mutualFundAccount
   * @return mutualFundAccount
  **/
  @Schema(description = "")
  public MutualFundAccount getMutualFundAccount() {
    return mutualFundAccount;
  }

  public void setMutualFundAccount(MutualFundAccount mutualFundAccount) {
    this.mutualFundAccount = mutualFundAccount;
  }

  public AccountDetailsResponse securitiesBrokerageAccount(SecuritiesBrokerageAccount securitiesBrokerageAccount) {
    this.securitiesBrokerageAccount = securitiesBrokerageAccount;
    return this;
  }

   /**
   * Get securitiesBrokerageAccount
   * @return securitiesBrokerageAccount
  **/
  @Schema(description = "")
  public SecuritiesBrokerageAccount getSecuritiesBrokerageAccount() {
    return securitiesBrokerageAccount;
  }

  public void setSecuritiesBrokerageAccount(SecuritiesBrokerageAccount securitiesBrokerageAccount) {
    this.securitiesBrokerageAccount = securitiesBrokerageAccount;
  }

  public AccountDetailsResponse callDepositAccount(CallDepositAccount callDepositAccount) {
    this.callDepositAccount = callDepositAccount;
    return this;
  }

   /**
   * Get callDepositAccount
   * @return callDepositAccount
  **/
  @Schema(description = "")
  public CallDepositAccount getCallDepositAccount() {
    return callDepositAccount;
  }

  public void setCallDepositAccount(CallDepositAccount callDepositAccount) {
    this.callDepositAccount = callDepositAccount;
  }

  public AccountDetailsResponse premiumDepositAccount(PremiumDepositAccount premiumDepositAccount) {
    this.premiumDepositAccount = premiumDepositAccount;
    return this;
  }

   /**
   * Get premiumDepositAccount
   * @return premiumDepositAccount
  **/
  @Schema(description = "")
  public PremiumDepositAccount getPremiumDepositAccount() {
    return premiumDepositAccount;
  }

  public void setPremiumDepositAccount(PremiumDepositAccount premiumDepositAccount) {
    this.premiumDepositAccount = premiumDepositAccount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountDetailsResponse accountDetailsResponse = (AccountDetailsResponse) o;
    return Objects.equals(this.creditCardAccount, accountDetailsResponse.creditCardAccount) &&
        Objects.equals(this.readyCreditAccount, accountDetailsResponse.readyCreditAccount) &&
        Objects.equals(this.checkingAccount, accountDetailsResponse.checkingAccount) &&
        Objects.equals(this.savingsAccount, accountDetailsResponse.savingsAccount) &&
        Objects.equals(this.timeDepositAccount, accountDetailsResponse.timeDepositAccount) &&
        Objects.equals(this.loanAccount, accountDetailsResponse.loanAccount) &&
        Objects.equals(this.mutualFundAccount, accountDetailsResponse.mutualFundAccount) &&
        Objects.equals(this.securitiesBrokerageAccount, accountDetailsResponse.securitiesBrokerageAccount) &&
        Objects.equals(this.callDepositAccount, accountDetailsResponse.callDepositAccount) &&
        Objects.equals(this.premiumDepositAccount, accountDetailsResponse.premiumDepositAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditCardAccount, readyCreditAccount, checkingAccount, savingsAccount, timeDepositAccount, loanAccount, mutualFundAccount, securitiesBrokerageAccount, callDepositAccount, premiumDepositAccount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountDetailsResponse {\n");
    
    sb.append("    creditCardAccount: ").append(toIndentedString(creditCardAccount)).append("\n");
    sb.append("    readyCreditAccount: ").append(toIndentedString(readyCreditAccount)).append("\n");
    sb.append("    checkingAccount: ").append(toIndentedString(checkingAccount)).append("\n");
    sb.append("    savingsAccount: ").append(toIndentedString(savingsAccount)).append("\n");
    sb.append("    timeDepositAccount: ").append(toIndentedString(timeDepositAccount)).append("\n");
    sb.append("    loanAccount: ").append(toIndentedString(loanAccount)).append("\n");
    sb.append("    mutualFundAccount: ").append(toIndentedString(mutualFundAccount)).append("\n");
    sb.append("    securitiesBrokerageAccount: ").append(toIndentedString(securitiesBrokerageAccount)).append("\n");
    sb.append("    callDepositAccount: ").append(toIndentedString(callDepositAccount)).append("\n");
    sb.append("    premiumDepositAccount: ").append(toIndentedString(premiumDepositAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
