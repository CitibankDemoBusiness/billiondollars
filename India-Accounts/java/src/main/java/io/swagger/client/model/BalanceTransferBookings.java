/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BankDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BalanceTransferBookings
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class BalanceTransferBookings {
  @SerializedName("loanAmount")
  private Double loanAmount = null;

  @SerializedName("btDisbursementOption")
  private String btDisbursementOption = null;

  @SerializedName("disbursementAccountId")
  private String disbursementAccountId = null;

  @SerializedName("payeeType")
  private String payeeType = null;

  @SerializedName("bankDetails")
  private BankDetails bankDetails = null;

  public BalanceTransferBookings loanAmount(Double loanAmount) {
    this.loanAmount = loanAmount;
    return this;
  }

   /**
   * This field is to indicate the loan amount for booking.
   * @return loanAmount
  **/
  @Schema(example = "680.25", required = true, description = "This field is to indicate the loan amount for booking.")
  public Double getLoanAmount() {
    return loanAmount;
  }

  public void setLoanAmount(Double loanAmount) {
    this.loanAmount = loanAmount;
  }

  public BalanceTransferBookings btDisbursementOption(String btDisbursementOption) {
    this.btDisbursementOption = btDisbursementOption;
    return this;
  }

   /**
   * Provide the list of the options available to receive the disbursement of balance transfer. Please use /v1/utilities/referenceData/{btDisbursementOption} resource to get valid value of this field with description.
   * @return btDisbursementOption
  **/
  @Schema(example = "LOAN_PAYMENT", required = true, description = "Provide the list of the options available to receive the disbursement of balance transfer. Please use /v1/utilities/referenceData/{btDisbursementOption} resource to get valid value of this field with description.")
  public String getBtDisbursementOption() {
    return btDisbursementOption;
  }

  public void setBtDisbursementOption(String btDisbursementOption) {
    this.btDisbursementOption = btDisbursementOption;
  }

  public BalanceTransferBookings disbursementAccountId(String disbursementAccountId) {
    this.disbursementAccountId = disbursementAccountId;
    return this;
  }

   /**
   * The disbursement account identifier in encrypted format. Applicable only for HK.
   * @return disbursementAccountId
  **/
  @Schema(example = "3255613852316f2b4d4d796c344e38756339654972776f663745446e6d4c32486f455a4165374a476858343d", description = "The disbursement account identifier in encrypted format. Applicable only for HK.")
  public String getDisbursementAccountId() {
    return disbursementAccountId;
  }

  public void setDisbursementAccountId(String disbursementAccountId) {
    this.disbursementAccountId = disbursementAccountId;
  }

  public BalanceTransferBookings payeeType(String payeeType) {
    this.payeeType = payeeType;
    return this;
  }

   /**
   * Identifies the type of payee based on the destination of the payee.This is a reference data field. Please use /v1/utilities/referenceData/{payeeType} resource to get valid value of this field with description. 
   * @return payeeType
  **/
  @Schema(example = "INTERNAL", description = "Identifies the type of payee based on the destination of the payee.This is a reference data field. Please use /v1/utilities/referenceData/{payeeType} resource to get valid value of this field with description. ")
  public String getPayeeType() {
    return payeeType;
  }

  public void setPayeeType(String payeeType) {
    this.payeeType = payeeType;
  }

  public BalanceTransferBookings bankDetails(BankDetails bankDetails) {
    this.bankDetails = bankDetails;
    return this;
  }

   /**
   * Get bankDetails
   * @return bankDetails
  **/
  @Schema(description = "")
  public BankDetails getBankDetails() {
    return bankDetails;
  }

  public void setBankDetails(BankDetails bankDetails) {
    this.bankDetails = bankDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BalanceTransferBookings balanceTransferBookings = (BalanceTransferBookings) o;
    return Objects.equals(this.loanAmount, balanceTransferBookings.loanAmount) &&
        Objects.equals(this.btDisbursementOption, balanceTransferBookings.btDisbursementOption) &&
        Objects.equals(this.disbursementAccountId, balanceTransferBookings.disbursementAccountId) &&
        Objects.equals(this.payeeType, balanceTransferBookings.payeeType) &&
        Objects.equals(this.bankDetails, balanceTransferBookings.bankDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loanAmount, btDisbursementOption, disbursementAccountId, payeeType, bankDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BalanceTransferBookings {\n");
    
    sb.append("    loanAmount: ").append(toIndentedString(loanAmount)).append("\n");
    sb.append("    btDisbursementOption: ").append(toIndentedString(btDisbursementOption)).append("\n");
    sb.append("    disbursementAccountId: ").append(toIndentedString(disbursementAccountId)).append("\n");
    sb.append("    payeeType: ").append(toIndentedString(payeeType)).append("\n");
    sb.append("    bankDetails: ").append(toIndentedString(bankDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
