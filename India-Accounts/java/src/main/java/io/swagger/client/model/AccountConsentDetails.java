/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * AccountConsentDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class AccountConsentDetails {
  @SerializedName("consentType")
  private String consentType = null;

  @SerializedName("consentGivenFlag")
  private Boolean consentGivenFlag = null;

  @SerializedName("consentUpdateDate")
  private LocalDate consentUpdateDate = null;

  @SerializedName("cardId")
  private String cardId = null;

  public AccountConsentDetails consentType(String consentType) {
    this.consentType = consentType;
    return this;
  }

   /**
   * ConsentType
   * @return consentType
  **/
  @Schema(example = "STORE_CREDIT_CARD_INFO", required = true, description = "ConsentType")
  public String getConsentType() {
    return consentType;
  }

  public void setConsentType(String consentType) {
    this.consentType = consentType;
  }

  public AccountConsentDetails consentGivenFlag(Boolean consentGivenFlag) {
    this.consentGivenFlag = consentGivenFlag;
    return this;
  }

   /**
   * Consent flag. Valid values: true and false
   * @return consentGivenFlag
  **/
  @Schema(example = "true", required = true, description = "Consent flag. Valid values: true and false")
  public Boolean isConsentGivenFlag() {
    return consentGivenFlag;
  }

  public void setConsentGivenFlag(Boolean consentGivenFlag) {
    this.consentGivenFlag = consentGivenFlag;
  }

  public AccountConsentDetails consentUpdateDate(LocalDate consentUpdateDate) {
    this.consentUpdateDate = consentUpdateDate;
    return this;
  }

   /**
   * Consent Updated Date
   * @return consentUpdateDate
  **/
  @Schema(example = "Wed Sep 06 00:00:00 UTC 2017", required = true, description = "Consent Updated Date")
  public LocalDate getConsentUpdateDate() {
    return consentUpdateDate;
  }

  public void setConsentUpdateDate(LocalDate consentUpdateDate) {
    this.consentUpdateDate = consentUpdateDate;
  }

  public AccountConsentDetails cardId(String cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * The card id  in encrypted format.
   * @return cardId
  **/
  @Schema(example = "3255613852316f2b4d4d796c344e38756339654972776f663745446e6d4c32486f455a4165374a476858343d", description = "The card id  in encrypted format.")
  public String getCardId() {
    return cardId;
  }

  public void setCardId(String cardId) {
    this.cardId = cardId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountConsentDetails accountConsentDetails = (AccountConsentDetails) o;
    return Objects.equals(this.consentType, accountConsentDetails.consentType) &&
        Objects.equals(this.consentGivenFlag, accountConsentDetails.consentGivenFlag) &&
        Objects.equals(this.consentUpdateDate, accountConsentDetails.consentUpdateDate) &&
        Objects.equals(this.cardId, accountConsentDetails.cardId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consentType, consentGivenFlag, consentUpdateDate, cardId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountConsentDetails {\n");
    
    sb.append("    consentType: ").append(toIndentedString(consentType)).append("\n");
    sb.append("    consentGivenFlag: ").append(toIndentedString(consentGivenFlag)).append("\n");
    sb.append("    consentUpdateDate: ").append(toIndentedString(consentUpdateDate)).append("\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
