/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CountrySpecificAddress
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class CountrySpecificAddress {
  @SerializedName("unitNumber")
  private String unitNumber = null;

  @SerializedName("floorNumber")
  private String floorNumber = null;

  @SerializedName("blockNumber")
  private String blockNumber = null;

  @SerializedName("buildingName")
  private String buildingName = null;

  @SerializedName("streetNumber")
  private String streetNumber = null;

  @SerializedName("streetName")
  private String streetName = null;

  @SerializedName("streetType")
  private String streetType = null;

  @SerializedName("town")
  private String town = null;

  public CountrySpecificAddress unitNumber(String unitNumber) {
    this.unitNumber = unitNumber;
    return this;
  }

   /**
   * Applicants unit Number
   * @return unitNumber
  **/
  @Schema(example = "99", description = "Applicants unit Number")
  public String getUnitNumber() {
    return unitNumber;
  }

  public void setUnitNumber(String unitNumber) {
    this.unitNumber = unitNumber;
  }

  public CountrySpecificAddress floorNumber(String floorNumber) {
    this.floorNumber = floorNumber;
    return this;
  }

   /**
   * Applicants floor Number
   * @return floorNumber
  **/
  @Schema(example = "18", description = "Applicants floor Number")
  public String getFloorNumber() {
    return floorNumber;
  }

  public void setFloorNumber(String floorNumber) {
    this.floorNumber = floorNumber;
  }

  public CountrySpecificAddress blockNumber(String blockNumber) {
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Applicants block Number
   * @return blockNumber
  **/
  @Schema(example = "19", description = "Applicants block Number")
  public String getBlockNumber() {
    return blockNumber;
  }

  public void setBlockNumber(String blockNumber) {
    this.blockNumber = blockNumber;
  }

  public CountrySpecificAddress buildingName(String buildingName) {
    this.buildingName = buildingName;
    return this;
  }

   /**
   * Applicants building Name
   * @return buildingName
  **/
  @Schema(example = "Estella", description = "Applicants building Name")
  public String getBuildingName() {
    return buildingName;
  }

  public void setBuildingName(String buildingName) {
    this.buildingName = buildingName;
  }

  public CountrySpecificAddress streetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
    return this;
  }

   /**
   * Applicants street Number
   * @return streetNumber
  **/
  @Schema(example = "52", description = "Applicants street Number")
  public String getStreetNumber() {
    return streetNumber;
  }

  public void setStreetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
  }

  public CountrySpecificAddress streetName(String streetName) {
    this.streetName = streetName;
    return this;
  }

   /**
   * Applicants street Name
   * @return streetName
  **/
  @Schema(example = "Marine Parade", description = "Applicants street Name")
  public String getStreetName() {
    return streetName;
  }

  public void setStreetName(String streetName) {
    this.streetName = streetName;
  }

  public CountrySpecificAddress streetType(String streetType) {
    this.streetType = streetType;
    return this;
  }

   /**
   * Applicants street Type.Please use /v1/utilities/referenceData/{streetType} resource to get valid value of this field with description.
   * @return streetType
  **/
  @Schema(example = "ARCADE", description = "Applicants street Type.Please use /v1/utilities/referenceData/{streetType} resource to get valid value of this field with description.")
  public String getStreetType() {
    return streetType;
  }

  public void setStreetType(String streetType) {
    this.streetType = streetType;
  }

  public CountrySpecificAddress town(String town) {
    this.town = town;
    return this;
  }

   /**
   * Applicants town
   * @return town
  **/
  @Schema(example = "SG", description = "Applicants town")
  public String getTown() {
    return town;
  }

  public void setTown(String town) {
    this.town = town;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CountrySpecificAddress countrySpecificAddress = (CountrySpecificAddress) o;
    return Objects.equals(this.unitNumber, countrySpecificAddress.unitNumber) &&
        Objects.equals(this.floorNumber, countrySpecificAddress.floorNumber) &&
        Objects.equals(this.blockNumber, countrySpecificAddress.blockNumber) &&
        Objects.equals(this.buildingName, countrySpecificAddress.buildingName) &&
        Objects.equals(this.streetNumber, countrySpecificAddress.streetNumber) &&
        Objects.equals(this.streetName, countrySpecificAddress.streetName) &&
        Objects.equals(this.streetType, countrySpecificAddress.streetType) &&
        Objects.equals(this.town, countrySpecificAddress.town);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unitNumber, floorNumber, blockNumber, buildingName, streetNumber, streetName, streetType, town);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CountrySpecificAddress {\n");
    
    sb.append("    unitNumber: ").append(toIndentedString(unitNumber)).append("\n");
    sb.append("    floorNumber: ").append(toIndentedString(floorNumber)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    buildingName: ").append(toIndentedString(buildingName)).append("\n");
    sb.append("    streetNumber: ").append(toIndentedString(streetNumber)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    streetType: ").append(toIndentedString(streetType)).append("\n");
    sb.append("    town: ").append(toIndentedString(town)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
