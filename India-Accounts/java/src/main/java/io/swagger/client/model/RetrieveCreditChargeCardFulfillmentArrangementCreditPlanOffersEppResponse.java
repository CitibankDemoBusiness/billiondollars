/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.EppOffers;
import io.swagger.client.model.PendingTransaction;
import io.swagger.client.model.Statement;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse {
  @SerializedName("customerName")
  private String customerName = null;

  @SerializedName("productCode")
  private String productCode = null;

  @SerializedName("serviceChargeAmount")
  private String serviceChargeAmount = null;

  @SerializedName("cardId")
  private String cardId = null;

  @SerializedName("productName")
  private String productName = null;

  @SerializedName("displayCardNumber")
  private String displayCardNumber = null;

  @SerializedName("pendingTransaction")
  private PendingTransaction pendingTransaction = null;

  @SerializedName("statement")
  private Statement statement = null;

  @SerializedName("eppOffers")
  private List<EppOffers> eppOffers = null;

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse customerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

   /**
   * his refers to the name of the customer
   * @return customerName
  **/
  @Schema(example = "John Watson", required = true, description = "his refers to the name of the customer")
  public String getCustomerName() {
    return customerName;
  }

  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse productCode(String productCode) {
    this.productCode = productCode;
    return this;
  }

   /**
   * A unique code that identifies the product
   * @return productCode
  **/
  @Schema(example = "0071_VC301", required = true, description = "A unique code that identifies the product")
  public String getProductCode() {
    return productCode;
  }

  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse serviceChargeAmount(String serviceChargeAmount) {
    this.serviceChargeAmount = serviceChargeAmount;
    return this;
  }

   /**
   * Booking Fees Amount
   * @return serviceChargeAmount
  **/
  @Schema(example = "1200", description = "Booking Fees Amount")
  public String getServiceChargeAmount() {
    return serviceChargeAmount;
  }

  public void setServiceChargeAmount(String serviceChargeAmount) {
    this.serviceChargeAmount = serviceChargeAmount;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse cardId(String cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * The customer card identifier in encrypted format
   * @return cardId
  **/
  @Schema(example = "3255613852316f2b4d4d233213344e38756339654972776f663745446e6d4c32486f455a4165374a476858343d", description = "The customer card identifier in encrypted format")
  public String getCardId() {
    return cardId;
  }

  public void setCardId(String cardId) {
    this.cardId = cardId;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * The name of the product
   * @return productName
  **/
  @Schema(example = "Citibank Platinum Visa", required = true, description = "The name of the product")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse displayCardNumber(String displayCardNumber) {
    this.displayCardNumber = displayCardNumber;
    return this;
  }

   /**
   * A masked Card number that can be displayed to the customer
   * @return displayCardNumber
  **/
  @Schema(example = "XXXXXX2391", required = true, description = "A masked Card number that can be displayed to the customer")
  public String getDisplayCardNumber() {
    return displayCardNumber;
  }

  public void setDisplayCardNumber(String displayCardNumber) {
    this.displayCardNumber = displayCardNumber;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse pendingTransaction(PendingTransaction pendingTransaction) {
    this.pendingTransaction = pendingTransaction;
    return this;
  }

   /**
   * Get pendingTransaction
   * @return pendingTransaction
  **/
  @Schema(description = "")
  public PendingTransaction getPendingTransaction() {
    return pendingTransaction;
  }

  public void setPendingTransaction(PendingTransaction pendingTransaction) {
    this.pendingTransaction = pendingTransaction;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse statement(Statement statement) {
    this.statement = statement;
    return this;
  }

   /**
   * Get statement
   * @return statement
  **/
  @Schema(description = "")
  public Statement getStatement() {
    return statement;
  }

  public void setStatement(Statement statement) {
    this.statement = statement;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse eppOffers(List<EppOffers> eppOffers) {
    this.eppOffers = eppOffers;
    return this;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse addEppOffersItem(EppOffers eppOffersItem) {
    if (this.eppOffers == null) {
      this.eppOffers = new ArrayList<EppOffers>();
    }
    this.eppOffers.add(eppOffersItem);
    return this;
  }

   /**
   * Get eppOffers
   * @return eppOffers
  **/
  @Schema(description = "")
  public List<EppOffers> getEppOffers() {
    return eppOffers;
  }

  public void setEppOffers(List<EppOffers> eppOffers) {
    this.eppOffers = eppOffers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse = (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse) o;
    return Objects.equals(this.customerName, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.customerName) &&
        Objects.equals(this.productCode, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.productCode) &&
        Objects.equals(this.serviceChargeAmount, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.serviceChargeAmount) &&
        Objects.equals(this.cardId, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.cardId) &&
        Objects.equals(this.productName, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.productName) &&
        Objects.equals(this.displayCardNumber, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.displayCardNumber) &&
        Objects.equals(this.pendingTransaction, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.pendingTransaction) &&
        Objects.equals(this.statement, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.statement) &&
        Objects.equals(this.eppOffers, retrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse.eppOffers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerName, productCode, serviceChargeAmount, cardId, productName, displayCardNumber, pendingTransaction, statement, eppOffers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse {\n");
    
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    serviceChargeAmount: ").append(toIndentedString(serviceChargeAmount)).append("\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    displayCardNumber: ").append(toIndentedString(displayCardNumber)).append("\n");
    sb.append("    pendingTransaction: ").append(toIndentedString(pendingTransaction)).append("\n");
    sb.append("    statement: ").append(toIndentedString(statement)).append("\n");
    sb.append("    eppOffers: ").append(toIndentedString(eppOffers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
