/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.StatementSummary;
import io.swagger.client.model.Transactions;
import io.swagger.client.model.UnSecuredLoans;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * CreditCardStatement
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class CreditCardStatement {
  @SerializedName("displayAccountNumber")
  private String displayAccountNumber = null;

  @SerializedName("statementDate")
  private LocalDate statementDate = null;

  @SerializedName("statementSummary")
  private StatementSummary statementSummary = null;

  @SerializedName("unSecuredLoans")
  private List<UnSecuredLoans> unSecuredLoans = null;

  @SerializedName("transactions")
  private List<Transactions> transactions = null;

  @SerializedName("nextStartIndex")
  private String nextStartIndex = null;

  public CreditCardStatement displayAccountNumber(String displayAccountNumber) {
    this.displayAccountNumber = displayAccountNumber;
    return this;
  }

   /**
   * A masked account number that can be displayed to the customer
   * @return displayAccountNumber
  **/
  @Schema(example = "XXXXXXXXXXXX2364", required = true, description = "A masked account number that can be displayed to the customer")
  public String getDisplayAccountNumber() {
    return displayAccountNumber;
  }

  public void setDisplayAccountNumber(String displayAccountNumber) {
    this.displayAccountNumber = displayAccountNumber;
  }

  public CreditCardStatement statementDate(LocalDate statementDate) {
    this.statementDate = statementDate;
    return this;
  }

   /**
   * The statement date in ISO 8601 format YYYY-MM-DD
   * @return statementDate
  **/
  @Schema(example = "Wed Aug 10 00:00:00 UTC 2016", required = true, description = "The statement date in ISO 8601 format YYYY-MM-DD")
  public LocalDate getStatementDate() {
    return statementDate;
  }

  public void setStatementDate(LocalDate statementDate) {
    this.statementDate = statementDate;
  }

  public CreditCardStatement statementSummary(StatementSummary statementSummary) {
    this.statementSummary = statementSummary;
    return this;
  }

   /**
   * Get statementSummary
   * @return statementSummary
  **/
  @Schema(description = "")
  public StatementSummary getStatementSummary() {
    return statementSummary;
  }

  public void setStatementSummary(StatementSummary statementSummary) {
    this.statementSummary = statementSummary;
  }

  public CreditCardStatement unSecuredLoans(List<UnSecuredLoans> unSecuredLoans) {
    this.unSecuredLoans = unSecuredLoans;
    return this;
  }

  public CreditCardStatement addUnSecuredLoansItem(UnSecuredLoans unSecuredLoansItem) {
    if (this.unSecuredLoans == null) {
      this.unSecuredLoans = new ArrayList<UnSecuredLoans>();
    }
    this.unSecuredLoans.add(unSecuredLoansItem);
    return this;
  }

   /**
   * Get unSecuredLoans
   * @return unSecuredLoans
  **/
  @Schema(description = "")
  public List<UnSecuredLoans> getUnSecuredLoans() {
    return unSecuredLoans;
  }

  public void setUnSecuredLoans(List<UnSecuredLoans> unSecuredLoans) {
    this.unSecuredLoans = unSecuredLoans;
  }

  public CreditCardStatement transactions(List<Transactions> transactions) {
    this.transactions = transactions;
    return this;
  }

  public CreditCardStatement addTransactionsItem(Transactions transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<Transactions>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * Get transactions
   * @return transactions
  **/
  @Schema(description = "")
  public List<Transactions> getTransactions() {
    return transactions;
  }

  public void setTransactions(List<Transactions> transactions) {
    this.transactions = transactions;
  }

  public CreditCardStatement nextStartIndex(String nextStartIndex) {
    this.nextStartIndex = nextStartIndex;
    return this;
  }

   /**
   * In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data.
   * @return nextStartIndex
  **/
  @Schema(example = "11", description = "In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data.")
  public String getNextStartIndex() {
    return nextStartIndex;
  }

  public void setNextStartIndex(String nextStartIndex) {
    this.nextStartIndex = nextStartIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditCardStatement creditCardStatement = (CreditCardStatement) o;
    return Objects.equals(this.displayAccountNumber, creditCardStatement.displayAccountNumber) &&
        Objects.equals(this.statementDate, creditCardStatement.statementDate) &&
        Objects.equals(this.statementSummary, creditCardStatement.statementSummary) &&
        Objects.equals(this.unSecuredLoans, creditCardStatement.unSecuredLoans) &&
        Objects.equals(this.transactions, creditCardStatement.transactions) &&
        Objects.equals(this.nextStartIndex, creditCardStatement.nextStartIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayAccountNumber, statementDate, statementSummary, unSecuredLoans, transactions, nextStartIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditCardStatement {\n");
    
    sb.append("    displayAccountNumber: ").append(toIndentedString(displayAccountNumber)).append("\n");
    sb.append("    statementDate: ").append(toIndentedString(statementDate)).append("\n");
    sb.append("    statementSummary: ").append(toIndentedString(statementSummary)).append("\n");
    sb.append("    unSecuredLoans: ").append(toIndentedString(unSecuredLoans)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    nextStartIndex: ").append(toIndentedString(nextStartIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
