/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BeneficiaryBankDetail;
import io.swagger.client.model.Loan;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest {
  @SerializedName("oldLoanList")
  private List<Loan> oldLoanList = null;

  @SerializedName("totalLoanAmount")
  private Double totalLoanAmount = null;

  @SerializedName("loanTenureInmonths")
  private Integer loanTenureInmonths = null;

  @SerializedName("topUpAmount")
  private Double topUpAmount = null;

  @SerializedName("loanDescription")
  private String loanDescription = null;

  @SerializedName("disbursementOption")
  private String disbursementOption = null;

  @SerializedName("disbursementAccountId")
  private String disbursementAccountId = null;

  @SerializedName("payeeId")
  private String payeeId = null;

  @SerializedName("beneficiaryBankDetail")
  private BeneficiaryBankDetail beneficiaryBankDetail = null;

  @SerializedName("loanPurpose")
  private String loanPurpose = null;

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest oldLoanList(List<Loan> oldLoanList) {
    this.oldLoanList = oldLoanList;
    return this;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest addOldLoanListItem(Loan oldLoanListItem) {
    if (this.oldLoanList == null) {
      this.oldLoanList = new ArrayList<Loan>();
    }
    this.oldLoanList.add(oldLoanListItem);
    return this;
  }

   /**
   * Get oldLoanList
   * @return oldLoanList
  **/
  @Schema(description = "")
  public List<Loan> getOldLoanList() {
    return oldLoanList;
  }

  public void setOldLoanList(List<Loan> oldLoanList) {
    this.oldLoanList = oldLoanList;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest totalLoanAmount(Double totalLoanAmount) {
    this.totalLoanAmount = totalLoanAmount;
    return this;
  }

   /**
   * Total amount borrowed by customer as Loan ie., Old Loan Amount+Top up Amount.
   * @return totalLoanAmount
  **/
  @Schema(example = "10000.25", required = true, description = "Total amount borrowed by customer as Loan ie., Old Loan Amount+Top up Amount.")
  public Double getTotalLoanAmount() {
    return totalLoanAmount;
  }

  public void setTotalLoanAmount(Double totalLoanAmount) {
    this.totalLoanAmount = totalLoanAmount;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest loanTenureInmonths(Integer loanTenureInmonths) {
    this.loanTenureInmonths = loanTenureInmonths;
    return this;
  }

   /**
   * Tenure of loan against credit card. It is considered in terms of number of months.
   * @return loanTenureInmonths
  **/
  @Schema(example = "12", required = true, description = "Tenure of loan against credit card. It is considered in terms of number of months.")
  public Integer getLoanTenureInmonths() {
    return loanTenureInmonths;
  }

  public void setLoanTenureInmonths(Integer loanTenureInmonths) {
    this.loanTenureInmonths = loanTenureInmonths;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest topUpAmount(Double topUpAmount) {
    this.topUpAmount = topUpAmount;
    return this;
  }

   /**
   * Additonal Topup Amount
   * @return topUpAmount
  **/
  @Schema(example = "200.5", required = true, description = "Additonal Topup Amount")
  public Double getTopUpAmount() {
    return topUpAmount;
  }

  public void setTopUpAmount(Double topUpAmount) {
    this.topUpAmount = topUpAmount;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest loanDescription(String loanDescription) {
    this.loanDescription = loanDescription;
    return this;
  }

   /**
   * New Loan Description
   * @return loanDescription
  **/
  @Schema(example = "epp merge loan", description = "New Loan Description")
  public String getLoanDescription() {
    return loanDescription;
  }

  public void setLoanDescription(String loanDescription) {
    this.loanDescription = loanDescription;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest disbursementOption(String disbursementOption) {
    this.disbursementOption = disbursementOption;
    return this;
  }

   /**
   * This field indicates the options/mode in which the loan amount will be disbursed. This is a reference data field. Please use /v1/utilities/referenceData/{disbursementOption} resource to get valid value of this field with description.
   * @return disbursementOption
  **/
  @Schema(example = "PAYEE_ACCOUNT", required = true, description = "This field indicates the options/mode in which the loan amount will be disbursed. This is a reference data field. Please use /v1/utilities/referenceData/{disbursementOption} resource to get valid value of this field with description.")
  public String getDisbursementOption() {
    return disbursementOption;
  }

  public void setDisbursementOption(String disbursementOption) {
    this.disbursementOption = disbursementOption;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest disbursementAccountId(String disbursementAccountId) {
    this.disbursementAccountId = disbursementAccountId;
    return this;
  }

   /**
   * The disbursement account identifier in encrypted format.
   * @return disbursementAccountId
  **/
  @Schema(example = "3255613852316f2b4d4d796c344e38756339654972776f663745446e6d4c32486f455a4165374a476858343d", description = "The disbursement account identifier in encrypted format.")
  public String getDisbursementAccountId() {
    return disbursementAccountId;
  }

  public void setDisbursementAccountId(String disbursementAccountId) {
    this.disbursementAccountId = disbursementAccountId;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest payeeId(String payeeId) {
    this.payeeId = payeeId;
    return this;
  }

   /**
   * Payee Indicator to be mapped against Payee Detail Key
   * @return payeeId
  **/
  @Schema(example = "ABC1234", description = "Payee Indicator to be mapped against Payee Detail Key")
  public String getPayeeId() {
    return payeeId;
  }

  public void setPayeeId(String payeeId) {
    this.payeeId = payeeId;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest beneficiaryBankDetail(BeneficiaryBankDetail beneficiaryBankDetail) {
    this.beneficiaryBankDetail = beneficiaryBankDetail;
    return this;
  }

   /**
   * Get beneficiaryBankDetail
   * @return beneficiaryBankDetail
  **/
  @Schema(description = "")
  public BeneficiaryBankDetail getBeneficiaryBankDetail() {
    return beneficiaryBankDetail;
  }

  public void setBeneficiaryBankDetail(BeneficiaryBankDetail beneficiaryBankDetail) {
    this.beneficiaryBankDetail = beneficiaryBankDetail;
  }

  public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest loanPurpose(String loanPurpose) {
    this.loanPurpose = loanPurpose;
    return this;
  }

   /**
   * This field indicates the options/mode in which the loan amount will be disbursed. This is a reference data field. Please use /v1/utilities/referenceData/{loanPurpose} resource to get valid value of this field with description.
   * @return loanPurpose
  **/
  @Schema(example = "MEDICAL", description = "This field indicates the options/mode in which the loan amount will be disbursed. This is a reference data field. Please use /v1/utilities/referenceData/{loanPurpose} resource to get valid value of this field with description.")
  public String getLoanPurpose() {
    return loanPurpose;
  }

  public void setLoanPurpose(String loanPurpose) {
    this.loanPurpose = loanPurpose;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest = (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest) o;
    return Objects.equals(this.oldLoanList, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.oldLoanList) &&
        Objects.equals(this.totalLoanAmount, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.totalLoanAmount) &&
        Objects.equals(this.loanTenureInmonths, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.loanTenureInmonths) &&
        Objects.equals(this.topUpAmount, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.topUpAmount) &&
        Objects.equals(this.loanDescription, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.loanDescription) &&
        Objects.equals(this.disbursementOption, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.disbursementOption) &&
        Objects.equals(this.disbursementAccountId, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.disbursementAccountId) &&
        Objects.equals(this.payeeId, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.payeeId) &&
        Objects.equals(this.beneficiaryBankDetail, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.beneficiaryBankDetail) &&
        Objects.equals(this.loanPurpose, retrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest.loanPurpose);
  }

  @Override
  public int hashCode() {
    return Objects.hash(oldLoanList, totalLoanAmount, loanTenureInmonths, topUpAmount, loanDescription, disbursementOption, disbursementAccountId, payeeId, beneficiaryBankDetail, loanPurpose);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest {\n");
    
    sb.append("    oldLoanList: ").append(toIndentedString(oldLoanList)).append("\n");
    sb.append("    totalLoanAmount: ").append(toIndentedString(totalLoanAmount)).append("\n");
    sb.append("    loanTenureInmonths: ").append(toIndentedString(loanTenureInmonths)).append("\n");
    sb.append("    topUpAmount: ").append(toIndentedString(topUpAmount)).append("\n");
    sb.append("    loanDescription: ").append(toIndentedString(loanDescription)).append("\n");
    sb.append("    disbursementOption: ").append(toIndentedString(disbursementOption)).append("\n");
    sb.append("    disbursementAccountId: ").append(toIndentedString(disbursementAccountId)).append("\n");
    sb.append("    payeeId: ").append(toIndentedString(payeeId)).append("\n");
    sb.append("    beneficiaryBankDetail: ").append(toIndentedString(beneficiaryBankDetail)).append("\n");
    sb.append("    loanPurpose: ").append(toIndentedString(loanPurpose)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
