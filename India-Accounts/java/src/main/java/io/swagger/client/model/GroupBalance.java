/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * GroupBalance
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class GroupBalance {
  @SerializedName("localCurrencyCode")
  private String localCurrencyCode = null;

  @SerializedName("localCurrencyBalanceAmount")
  private Double localCurrencyBalanceAmount = null;

  @SerializedName("foreignCurrencyCode")
  private String foreignCurrencyCode = null;

  @SerializedName("foreignCurrencyBalanceAmount")
  private Double foreignCurrencyBalanceAmount = null;

  public GroupBalance localCurrencyCode(String localCurrencyCode) {
    this.localCurrencyCode = localCurrencyCode;
    return this;
  }

   /**
   * The currency code for local country in ISO 4217 format
   * @return localCurrencyCode
  **/
  @Schema(example = "AUD", description = "The currency code for local country in ISO 4217 format")
  public String getLocalCurrencyCode() {
    return localCurrencyCode;
  }

  public void setLocalCurrencyCode(String localCurrencyCode) {
    this.localCurrencyCode = localCurrencyCode;
  }

  public GroupBalance localCurrencyBalanceAmount(Double localCurrencyBalanceAmount) {
    this.localCurrencyBalanceAmount = localCurrencyBalanceAmount;
    return this;
  }

   /**
   * Summarized balances in local currency
   * @return localCurrencyBalanceAmount
  **/
  @Schema(example = "8900.12", description = "Summarized balances in local currency")
  public Double getLocalCurrencyBalanceAmount() {
    return localCurrencyBalanceAmount;
  }

  public void setLocalCurrencyBalanceAmount(Double localCurrencyBalanceAmount) {
    this.localCurrencyBalanceAmount = localCurrencyBalanceAmount;
  }

  public GroupBalance foreignCurrencyCode(String foreignCurrencyCode) {
    this.foreignCurrencyCode = foreignCurrencyCode;
    return this;
  }

   /**
   * The foreign currency code for foreign country in ISO 4217 format
   * @return foreignCurrencyCode
  **/
  @Schema(example = "SGD", description = "The foreign currency code for foreign country in ISO 4217 format")
  public String getForeignCurrencyCode() {
    return foreignCurrencyCode;
  }

  public void setForeignCurrencyCode(String foreignCurrencyCode) {
    this.foreignCurrencyCode = foreignCurrencyCode;
  }

  public GroupBalance foreignCurrencyBalanceAmount(Double foreignCurrencyBalanceAmount) {
    this.foreignCurrencyBalanceAmount = foreignCurrencyBalanceAmount;
    return this;
  }

   /**
   * Summarized balances in foreign currency
   * @return foreignCurrencyBalanceAmount
  **/
  @Schema(example = "8880.25", description = "Summarized balances in foreign currency")
  public Double getForeignCurrencyBalanceAmount() {
    return foreignCurrencyBalanceAmount;
  }

  public void setForeignCurrencyBalanceAmount(Double foreignCurrencyBalanceAmount) {
    this.foreignCurrencyBalanceAmount = foreignCurrencyBalanceAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupBalance groupBalance = (GroupBalance) o;
    return Objects.equals(this.localCurrencyCode, groupBalance.localCurrencyCode) &&
        Objects.equals(this.localCurrencyBalanceAmount, groupBalance.localCurrencyBalanceAmount) &&
        Objects.equals(this.foreignCurrencyCode, groupBalance.foreignCurrencyCode) &&
        Objects.equals(this.foreignCurrencyBalanceAmount, groupBalance.foreignCurrencyBalanceAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localCurrencyCode, localCurrencyBalanceAmount, foreignCurrencyCode, foreignCurrencyBalanceAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupBalance {\n");
    
    sb.append("    localCurrencyCode: ").append(toIndentedString(localCurrencyCode)).append("\n");
    sb.append("    localCurrencyBalanceAmount: ").append(toIndentedString(localCurrencyBalanceAmount)).append("\n");
    sb.append("    foreignCurrencyCode: ").append(toIndentedString(foreignCurrencyCode)).append("\n");
    sb.append("    foreignCurrencyBalanceAmount: ").append(toIndentedString(foreignCurrencyBalanceAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
