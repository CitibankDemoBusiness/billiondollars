/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * EppLoanBooking
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class EppLoanBooking {
  @SerializedName("loanAmount")
  private Double loanAmount = null;

  @SerializedName("referenceId")
  private String referenceId = null;

  @SerializedName("transactionAuthorizationCode")
  private String transactionAuthorizationCode = null;

  public EppLoanBooking loanAmount(Double loanAmount) {
    this.loanAmount = loanAmount;
    return this;
  }

   /**
   * Loan amount for easy payment plan booking.
   * @return loanAmount
  **/
  @Schema(example = "680.25", required = true, description = "Loan amount for easy payment plan booking.")
  public Double getLoanAmount() {
    return loanAmount;
  }

  public void setLoanAmount(Double loanAmount) {
    this.loanAmount = loanAmount;
  }

  public EppLoanBooking referenceId(String referenceId) {
    this.referenceId = referenceId;
    return this;
  }

   /**
   * Reference Id to uniquely identify the transaction. Applicable only for EPP of type TRANSACTION.
   * @return referenceId
  **/
  @Schema(example = "BIMI51807310002051", description = "Reference Id to uniquely identify the transaction. Applicable only for EPP of type TRANSACTION.")
  public String getReferenceId() {
    return referenceId;
  }

  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }

  public EppLoanBooking transactionAuthorizationCode(String transactionAuthorizationCode) {
    this.transactionAuthorizationCode = transactionAuthorizationCode;
    return this;
  }

   /**
   * Transaction authorization code is a unique to a sales credit card transaction to indicate that the sale has been authorized.
   * @return transactionAuthorizationCode
  **/
  @Schema(example = "987012", description = "Transaction authorization code is a unique to a sales credit card transaction to indicate that the sale has been authorized.")
  public String getTransactionAuthorizationCode() {
    return transactionAuthorizationCode;
  }

  public void setTransactionAuthorizationCode(String transactionAuthorizationCode) {
    this.transactionAuthorizationCode = transactionAuthorizationCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EppLoanBooking eppLoanBooking = (EppLoanBooking) o;
    return Objects.equals(this.loanAmount, eppLoanBooking.loanAmount) &&
        Objects.equals(this.referenceId, eppLoanBooking.referenceId) &&
        Objects.equals(this.transactionAuthorizationCode, eppLoanBooking.transactionAuthorizationCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loanAmount, referenceId, transactionAuthorizationCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EppLoanBooking {\n");
    
    sb.append("    loanAmount: ").append(toIndentedString(loanAmount)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    transactionAuthorizationCode: ").append(toIndentedString(transactionAuthorizationCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
