/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * EppAmortizationSchedule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class EppAmortizationSchedule {
  @SerializedName("installmentNumber")
  private String installmentNumber = null;

  @SerializedName("installmentAmount")
  private Double installmentAmount = null;

  @SerializedName("principalAmount")
  private Double principalAmount = null;

  @SerializedName("installmentInterestAmount")
  private Double installmentInterestAmount = null;

  @SerializedName("outstandingPrincipalAmount")
  private Double outstandingPrincipalAmount = null;

  @SerializedName("installmentDate")
  private String installmentDate = null;

  public EppAmortizationSchedule installmentNumber(String installmentNumber) {
    this.installmentNumber = installmentNumber;
    return this;
  }

   /**
   * Installment number
   * @return installmentNumber
  **/
  @Schema(example = "1", required = true, description = "Installment number")
  public String getInstallmentNumber() {
    return installmentNumber;
  }

  public void setInstallmentNumber(String installmentNumber) {
    this.installmentNumber = installmentNumber;
  }

  public EppAmortizationSchedule installmentAmount(Double installmentAmount) {
    this.installmentAmount = installmentAmount;
    return this;
  }

   /**
   * Installment amount to be payed by customer in order to repay the loan.
   * @return installmentAmount
  **/
  @Schema(example = "34.95", required = true, description = "Installment amount to be payed by customer in order to repay the loan.")
  public Double getInstallmentAmount() {
    return installmentAmount;
  }

  public void setInstallmentAmount(Double installmentAmount) {
    this.installmentAmount = installmentAmount;
  }

  public EppAmortizationSchedule principalAmount(Double principalAmount) {
    this.principalAmount = principalAmount;
    return this;
  }

   /**
   *  The portion of the Principal Amount Paid for the loan.
   * @return principalAmount
  **/
  @Schema(example = "34.95", required = true, description = " The portion of the Principal Amount Paid for the loan.")
  public Double getPrincipalAmount() {
    return principalAmount;
  }

  public void setPrincipalAmount(Double principalAmount) {
    this.principalAmount = principalAmount;
  }

  public EppAmortizationSchedule installmentInterestAmount(Double installmentInterestAmount) {
    this.installmentInterestAmount = installmentInterestAmount;
    return this;
  }

   /**
   * The interest  amount to be paid as installment.
   * @return installmentInterestAmount
  **/
  @Schema(example = "5.58", required = true, description = "The interest  amount to be paid as installment.")
  public Double getInstallmentInterestAmount() {
    return installmentInterestAmount;
  }

  public void setInstallmentInterestAmount(Double installmentInterestAmount) {
    this.installmentInterestAmount = installmentInterestAmount;
  }

  public EppAmortizationSchedule outstandingPrincipalAmount(Double outstandingPrincipalAmount) {
    this.outstandingPrincipalAmount = outstandingPrincipalAmount;
    return this;
  }

   /**
   * Principal amount component that is yet to be paid by borrower for the loan.
   * @return outstandingPrincipalAmount
  **/
  @Schema(example = "500.58", description = "Principal amount component that is yet to be paid by borrower for the loan.")
  public Double getOutstandingPrincipalAmount() {
    return outstandingPrincipalAmount;
  }

  public void setOutstandingPrincipalAmount(Double outstandingPrincipalAmount) {
    this.outstandingPrincipalAmount = outstandingPrincipalAmount;
  }

  public EppAmortizationSchedule installmentDate(String installmentDate) {
    this.installmentDate = installmentDate;
    return this;
  }

   /**
   * Installment date in  MM/YYYY format
   * @return installmentDate
  **/
  @Schema(example = "12/2018", description = "Installment date in  MM/YYYY format")
  public String getInstallmentDate() {
    return installmentDate;
  }

  public void setInstallmentDate(String installmentDate) {
    this.installmentDate = installmentDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EppAmortizationSchedule eppAmortizationSchedule = (EppAmortizationSchedule) o;
    return Objects.equals(this.installmentNumber, eppAmortizationSchedule.installmentNumber) &&
        Objects.equals(this.installmentAmount, eppAmortizationSchedule.installmentAmount) &&
        Objects.equals(this.principalAmount, eppAmortizationSchedule.principalAmount) &&
        Objects.equals(this.installmentInterestAmount, eppAmortizationSchedule.installmentInterestAmount) &&
        Objects.equals(this.outstandingPrincipalAmount, eppAmortizationSchedule.outstandingPrincipalAmount) &&
        Objects.equals(this.installmentDate, eppAmortizationSchedule.installmentDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(installmentNumber, installmentAmount, principalAmount, installmentInterestAmount, outstandingPrincipalAmount, installmentDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EppAmortizationSchedule {\n");
    
    sb.append("    installmentNumber: ").append(toIndentedString(installmentNumber)).append("\n");
    sb.append("    installmentAmount: ").append(toIndentedString(installmentAmount)).append("\n");
    sb.append("    principalAmount: ").append(toIndentedString(principalAmount)).append("\n");
    sb.append("    installmentInterestAmount: ").append(toIndentedString(installmentInterestAmount)).append("\n");
    sb.append("    outstandingPrincipalAmount: ").append(toIndentedString(outstandingPrincipalAmount)).append("\n");
    sb.append("    installmentDate: ").append(toIndentedString(installmentDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
