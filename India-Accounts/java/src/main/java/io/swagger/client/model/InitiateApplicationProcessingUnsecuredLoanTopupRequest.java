/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.MarketingCampaignOffer;
import io.swagger.client.model.Product;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InitiateApplicationProcessingUnsecuredLoanTopupRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class InitiateApplicationProcessingUnsecuredLoanTopupRequest {
  @SerializedName("marketingCampaignOffer")
  private MarketingCampaignOffer marketingCampaignOffer = null;

  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("cardId")
  private String cardId = null;

  @SerializedName("product")
  private Product product = null;

  @SerializedName("requestedLoanAmount")
  private Double requestedLoanAmount = null;

  @SerializedName("loanTopupApplicationType")
  private String loanTopupApplicationType = null;

  @SerializedName("spokenLanguageCode")
  private String spokenLanguageCode = null;

  public InitiateApplicationProcessingUnsecuredLoanTopupRequest marketingCampaignOffer(MarketingCampaignOffer marketingCampaignOffer) {
    this.marketingCampaignOffer = marketingCampaignOffer;
    return this;
  }

   /**
   * Get marketingCampaignOffer
   * @return marketingCampaignOffer
  **/
  @Schema(description = "")
  public MarketingCampaignOffer getMarketingCampaignOffer() {
    return marketingCampaignOffer;
  }

  public void setMarketingCampaignOffer(MarketingCampaignOffer marketingCampaignOffer) {
    this.marketingCampaignOffer = marketingCampaignOffer;
  }

  public InitiateApplicationProcessingUnsecuredLoanTopupRequest accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Account number of customer in encrypted form.
   * @return accountId
  **/
  @Schema(example = "4028560001896830", description = "Account number of customer in encrypted form.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public InitiateApplicationProcessingUnsecuredLoanTopupRequest cardId(String cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * Card number of customer in encrypted form.
   * @return cardId
  **/
  @Schema(example = "4028560001896830", description = "Card number of customer in encrypted form.")
  public String getCardId() {
    return cardId;
  }

  public void setCardId(String cardId) {
    this.cardId = cardId;
  }

  public InitiateApplicationProcessingUnsecuredLoanTopupRequest product(Product product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @Schema(description = "")
  public Product getProduct() {
    return product;
  }

  public void setProduct(Product product) {
    this.product = product;
  }

  public InitiateApplicationProcessingUnsecuredLoanTopupRequest requestedLoanAmount(Double requestedLoanAmount) {
    this.requestedLoanAmount = requestedLoanAmount;
    return this;
  }

   /**
   * Requested loan amount
   * @return requestedLoanAmount
  **/
  @Schema(example = "25000.25", description = "Requested loan amount")
  public Double getRequestedLoanAmount() {
    return requestedLoanAmount;
  }

  public void setRequestedLoanAmount(Double requestedLoanAmount) {
    this.requestedLoanAmount = requestedLoanAmount;
  }

  public InitiateApplicationProcessingUnsecuredLoanTopupRequest loanTopupApplicationType(String loanTopupApplicationType) {
    this.loanTopupApplicationType = loanTopupApplicationType;
    return this;
  }

   /**
   * Identifies if application is for cross-sell application for new personal loan (PIL) or loan top-up. This is a reference data data field. Please use /v1/utilities/referenceData/{loanTopupApplicationType} resource to get valid value of this field with description.
   * @return loanTopupApplicationType
  **/
  @Schema(example = "LOAN_TOP_UP / NORM Loan topup case pass LOAN_TOP_UP else NORM", required = true, description = "Identifies if application is for cross-sell application for new personal loan (PIL) or loan top-up. This is a reference data data field. Please use /v1/utilities/referenceData/{loanTopupApplicationType} resource to get valid value of this field with description.")
  public String getLoanTopupApplicationType() {
    return loanTopupApplicationType;
  }

  public void setLoanTopupApplicationType(String loanTopupApplicationType) {
    this.loanTopupApplicationType = loanTopupApplicationType;
  }

  public InitiateApplicationProcessingUnsecuredLoanTopupRequest spokenLanguageCode(String spokenLanguageCode) {
    this.spokenLanguageCode = spokenLanguageCode;
    return this;
  }

   /**
   * Code for spoken language of applicant. Please use /v1/utilities/referenceData/{spokenLanguageCode} resource to get valid value of this field with description.
   * @return spokenLanguageCode
  **/
  @Schema(example = "EN", required = true, description = "Code for spoken language of applicant. Please use /v1/utilities/referenceData/{spokenLanguageCode} resource to get valid value of this field with description.")
  public String getSpokenLanguageCode() {
    return spokenLanguageCode;
  }

  public void setSpokenLanguageCode(String spokenLanguageCode) {
    this.spokenLanguageCode = spokenLanguageCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InitiateApplicationProcessingUnsecuredLoanTopupRequest initiateApplicationProcessingUnsecuredLoanTopupRequest = (InitiateApplicationProcessingUnsecuredLoanTopupRequest) o;
    return Objects.equals(this.marketingCampaignOffer, initiateApplicationProcessingUnsecuredLoanTopupRequest.marketingCampaignOffer) &&
        Objects.equals(this.accountId, initiateApplicationProcessingUnsecuredLoanTopupRequest.accountId) &&
        Objects.equals(this.cardId, initiateApplicationProcessingUnsecuredLoanTopupRequest.cardId) &&
        Objects.equals(this.product, initiateApplicationProcessingUnsecuredLoanTopupRequest.product) &&
        Objects.equals(this.requestedLoanAmount, initiateApplicationProcessingUnsecuredLoanTopupRequest.requestedLoanAmount) &&
        Objects.equals(this.loanTopupApplicationType, initiateApplicationProcessingUnsecuredLoanTopupRequest.loanTopupApplicationType) &&
        Objects.equals(this.spokenLanguageCode, initiateApplicationProcessingUnsecuredLoanTopupRequest.spokenLanguageCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(marketingCampaignOffer, accountId, cardId, product, requestedLoanAmount, loanTopupApplicationType, spokenLanguageCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitiateApplicationProcessingUnsecuredLoanTopupRequest {\n");
    
    sb.append("    marketingCampaignOffer: ").append(toIndentedString(marketingCampaignOffer)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    requestedLoanAmount: ").append(toIndentedString(requestedLoanAmount)).append("\n");
    sb.append("    loanTopupApplicationType: ").append(toIndentedString(loanTopupApplicationType)).append("\n");
    sb.append("    spokenLanguageCode: ").append(toIndentedString(spokenLanguageCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
