/*
 * Accounts
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * UnSecuredLoans
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:57:33.628989Z[Etc/UTC]")
public class UnSecuredLoans {
  @SerializedName("originalDisclosedAmount")
  private Double originalDisclosedAmount = null;

  @SerializedName("originalTerm")
  private Integer originalTerm = null;

  @SerializedName("currentTerm")
  private Integer currentTerm = null;

  @SerializedName("remainingTerm")
  private Integer remainingTerm = null;

  @SerializedName("lastPaymentDate")
  private LocalDate lastPaymentDate = null;

  @SerializedName("installmentAmount")
  private Double installmentAmount = null;

  public UnSecuredLoans originalDisclosedAmount(Double originalDisclosedAmount) {
    this.originalDisclosedAmount = originalDisclosedAmount;
    return this;
  }

   /**
   * Original loan amount applied for equal payment plan
   * @return originalDisclosedAmount
  **/
  @Schema(example = "5000.25", description = "Original loan amount applied for equal payment plan")
  public Double getOriginalDisclosedAmount() {
    return originalDisclosedAmount;
  }

  public void setOriginalDisclosedAmount(Double originalDisclosedAmount) {
    this.originalDisclosedAmount = originalDisclosedAmount;
  }

  public UnSecuredLoans originalTerm(Integer originalTerm) {
    this.originalTerm = originalTerm;
    return this;
  }

   /**
   * Instalment Loan Original Term
   * @return originalTerm
  **/
  @Schema(example = "12", description = "Instalment Loan Original Term")
  public Integer getOriginalTerm() {
    return originalTerm;
  }

  public void setOriginalTerm(Integer originalTerm) {
    this.originalTerm = originalTerm;
  }

  public UnSecuredLoans currentTerm(Integer currentTerm) {
    this.currentTerm = currentTerm;
    return this;
  }

   /**
   * Instalment Loan Current Term
   * @return currentTerm
  **/
  @Schema(example = "2", description = "Instalment Loan Current Term")
  public Integer getCurrentTerm() {
    return currentTerm;
  }

  public void setCurrentTerm(Integer currentTerm) {
    this.currentTerm = currentTerm;
  }

  public UnSecuredLoans remainingTerm(Integer remainingTerm) {
    this.remainingTerm = remainingTerm;
    return this;
  }

   /**
   * Instalment Loan remaining Term
   * @return remainingTerm
  **/
  @Schema(example = "8", description = "Instalment Loan remaining Term")
  public Integer getRemainingTerm() {
    return remainingTerm;
  }

  public void setRemainingTerm(Integer remainingTerm) {
    this.remainingTerm = remainingTerm;
  }

  public UnSecuredLoans lastPaymentDate(LocalDate lastPaymentDate) {
    this.lastPaymentDate = lastPaymentDate;
    return this;
  }

   /**
   * Last Payment Date of Loans in ISO 8601 format YYYY-MM-DD
   * @return lastPaymentDate
  **/
  @Schema(example = "Sun Jul 31 00:00:00 UTC 2016", description = "Last Payment Date of Loans in ISO 8601 format YYYY-MM-DD")
  public LocalDate getLastPaymentDate() {
    return lastPaymentDate;
  }

  public void setLastPaymentDate(LocalDate lastPaymentDate) {
    this.lastPaymentDate = lastPaymentDate;
  }

  public UnSecuredLoans installmentAmount(Double installmentAmount) {
    this.installmentAmount = installmentAmount;
    return this;
  }

   /**
   * Instalment amount for loan
   * @return installmentAmount
  **/
  @Schema(example = "800.25", description = "Instalment amount for loan")
  public Double getInstallmentAmount() {
    return installmentAmount;
  }

  public void setInstallmentAmount(Double installmentAmount) {
    this.installmentAmount = installmentAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnSecuredLoans unSecuredLoans = (UnSecuredLoans) o;
    return Objects.equals(this.originalDisclosedAmount, unSecuredLoans.originalDisclosedAmount) &&
        Objects.equals(this.originalTerm, unSecuredLoans.originalTerm) &&
        Objects.equals(this.currentTerm, unSecuredLoans.currentTerm) &&
        Objects.equals(this.remainingTerm, unSecuredLoans.remainingTerm) &&
        Objects.equals(this.lastPaymentDate, unSecuredLoans.lastPaymentDate) &&
        Objects.equals(this.installmentAmount, unSecuredLoans.installmentAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(originalDisclosedAmount, originalTerm, currentTerm, remainingTerm, lastPaymentDate, installmentAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnSecuredLoans {\n");
    
    sb.append("    originalDisclosedAmount: ").append(toIndentedString(originalDisclosedAmount)).append("\n");
    sb.append("    originalTerm: ").append(toIndentedString(originalTerm)).append("\n");
    sb.append("    currentTerm: ").append(toIndentedString(currentTerm)).append("\n");
    sb.append("    remainingTerm: ").append(toIndentedString(remainingTerm)).append("\n");
    sb.append("    lastPaymentDate: ").append(toIndentedString(lastPaymentDate)).append("\n");
    sb.append("    installmentAmount: ").append(toIndentedString(installmentAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
