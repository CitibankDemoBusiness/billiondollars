# coding: utf-8

"""
    Accounts

    The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class LoanRepaymentScheuleResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'amortization_schedule': 'list[AmortizationSchedule]',
        'total_loan_cost': 'float',
        'next_start_index': 'str'
    }

    attribute_map = {
        'amortization_schedule': 'amortizationSchedule',
        'total_loan_cost': 'totalLoanCost',
        'next_start_index': 'nextStartIndex'
    }

    def __init__(self, amortization_schedule=None, total_loan_cost=None, next_start_index=None):  # noqa: E501
        """LoanRepaymentScheuleResponse - a model defined in Swagger"""  # noqa: E501
        self._amortization_schedule = None
        self._total_loan_cost = None
        self._next_start_index = None
        self.discriminator = None
        if amortization_schedule is not None:
            self.amortization_schedule = amortization_schedule
        if total_loan_cost is not None:
            self.total_loan_cost = total_loan_cost
        if next_start_index is not None:
            self.next_start_index = next_start_index

    @property
    def amortization_schedule(self):
        """Gets the amortization_schedule of this LoanRepaymentScheuleResponse.  # noqa: E501


        :return: The amortization_schedule of this LoanRepaymentScheuleResponse.  # noqa: E501
        :rtype: list[AmortizationSchedule]
        """
        return self._amortization_schedule

    @amortization_schedule.setter
    def amortization_schedule(self, amortization_schedule):
        """Sets the amortization_schedule of this LoanRepaymentScheuleResponse.


        :param amortization_schedule: The amortization_schedule of this LoanRepaymentScheuleResponse.  # noqa: E501
        :type: list[AmortizationSchedule]
        """

        self._amortization_schedule = amortization_schedule

    @property
    def total_loan_cost(self):
        """Gets the total_loan_cost of this LoanRepaymentScheuleResponse.  # noqa: E501

        Principal and total Interest amount to be paid by borrower for the loan.  # noqa: E501

        :return: The total_loan_cost of this LoanRepaymentScheuleResponse.  # noqa: E501
        :rtype: float
        """
        return self._total_loan_cost

    @total_loan_cost.setter
    def total_loan_cost(self, total_loan_cost):
        """Sets the total_loan_cost of this LoanRepaymentScheuleResponse.

        Principal and total Interest amount to be paid by borrower for the loan.  # noqa: E501

        :param total_loan_cost: The total_loan_cost of this LoanRepaymentScheuleResponse.  # noqa: E501
        :type: float
        """

        self._total_loan_cost = total_loan_cost

    @property
    def next_start_index(self):
        """Gets the next_start_index of this LoanRepaymentScheuleResponse.  # noqa: E501

        The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.  # noqa: E501

        :return: The next_start_index of this LoanRepaymentScheuleResponse.  # noqa: E501
        :rtype: str
        """
        return self._next_start_index

    @next_start_index.setter
    def next_start_index(self, next_start_index):
        """Sets the next_start_index of this LoanRepaymentScheuleResponse.

        The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.  # noqa: E501

        :param next_start_index: The next_start_index of this LoanRepaymentScheuleResponse.  # noqa: E501
        :type: str
        """

        self._next_start_index = next_start_index

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LoanRepaymentScheuleResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LoanRepaymentScheuleResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
