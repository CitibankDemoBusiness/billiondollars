/* 
 * Accounts
 *
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Transaction
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class TransactionTests
    {
        // TODO uncomment below to declare an instance variable for Transaction
        //private Transaction instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Transaction
            //instance = new Transaction();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Transaction
        /// </summary>
        [Test]
        public void TransactionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Transaction
            //Assert.IsInstanceOfType<Transaction> (instance, "variable 'instance' is a Transaction");
        }


        /// <summary>
        /// Test the property 'DisplayAccountNumber'
        /// </summary>
        [Test]
        public void DisplayAccountNumberTest()
        {
            // TODO unit test for the property 'DisplayAccountNumber'
        }
        /// <summary>
        /// Test the property 'TransactionDate'
        /// </summary>
        [Test]
        public void TransactionDateTest()
        {
            // TODO unit test for the property 'TransactionDate'
        }
        /// <summary>
        /// Test the property 'TransactionDescription'
        /// </summary>
        [Test]
        public void TransactionDescriptionTest()
        {
            // TODO unit test for the property 'TransactionDescription'
        }
        /// <summary>
        /// Test the property 'TransactionReferenceId'
        /// </summary>
        [Test]
        public void TransactionReferenceIdTest()
        {
            // TODO unit test for the property 'TransactionReferenceId'
        }
        /// <summary>
        /// Test the property 'CheckSerialNumber'
        /// </summary>
        [Test]
        public void CheckSerialNumberTest()
        {
            // TODO unit test for the property 'CheckSerialNumber'
        }
        /// <summary>
        /// Test the property 'TransactionAmount'
        /// </summary>
        [Test]
        public void TransactionAmountTest()
        {
            // TODO unit test for the property 'TransactionAmount'
        }
        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Test]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }
        /// <summary>
        /// Test the property 'ForeignTransactionAmount'
        /// </summary>
        [Test]
        public void ForeignTransactionAmountTest()
        {
            // TODO unit test for the property 'ForeignTransactionAmount'
        }
        /// <summary>
        /// Test the property 'ForeignCurrencyCode'
        /// </summary>
        [Test]
        public void ForeignCurrencyCodeTest()
        {
            // TODO unit test for the property 'ForeignCurrencyCode'
        }
        /// <summary>
        /// Test the property 'ForeignExchangeRate'
        /// </summary>
        [Test]
        public void ForeignExchangeRateTest()
        {
            // TODO unit test for the property 'ForeignExchangeRate'
        }
        /// <summary>
        /// Test the property 'TransactionType'
        /// </summary>
        [Test]
        public void TransactionTypeTest()
        {
            // TODO unit test for the property 'TransactionType'
        }
        /// <summary>
        /// Test the property 'TransactionStatus'
        /// </summary>
        [Test]
        public void TransactionStatusTest()
        {
            // TODO unit test for the property 'TransactionStatus'
        }
        /// <summary>
        /// Test the property 'RunningBalance'
        /// </summary>
        [Test]
        public void RunningBalanceTest()
        {
            // TODO unit test for the property 'RunningBalance'
        }
        /// <summary>
        /// Test the property 'TransactionPostingDate'
        /// </summary>
        [Test]
        public void TransactionPostingDateTest()
        {
            // TODO unit test for the property 'TransactionPostingDate'
        }
        /// <summary>
        /// Test the property 'TransactionCode'
        /// </summary>
        [Test]
        public void TransactionCodeTest()
        {
            // TODO unit test for the property 'TransactionCode'
        }
        /// <summary>
        /// Test the property 'MerchantName'
        /// </summary>
        [Test]
        public void MerchantNameTest()
        {
            // TODO unit test for the property 'MerchantName'
        }
        /// <summary>
        /// Test the property 'EligibleForEqualPaymentPlan'
        /// </summary>
        [Test]
        public void EligibleForEqualPaymentPlanTest()
        {
            // TODO unit test for the property 'EligibleForEqualPaymentPlan'
        }

    }

}
