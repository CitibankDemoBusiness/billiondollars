/* 
 * Accounts
 *
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OfferAndDecisionManagementApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OfferAndDecisionManagementApiTests
    {
        private OfferAndDecisionManagementApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OfferAndDecisionManagementApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OfferAndDecisionManagementApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OfferAndDecisionManagementApi
            //Assert.IsInstanceOfType(typeof(OfferAndDecisionManagementApi), instance, "instance is a OfferAndDecisionManagementApi");
        }

        /// <summary>
        /// Test ExecuteApplicationProcessingUnsecuredLoanTopupOfferAcceptanceAndSubmission
        /// </summary>
        [Test]
        public void ExecuteApplicationProcessingUnsecuredLoanTopupOfferAcceptanceAndSubmissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExecuteApplicationProcessingUnsecuredLoanTopupOfferAcceptanceAndSubmissionRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string clientDetails = null;
            //instance.ExecuteApplicationProcessingUnsecuredLoanTopupOfferAcceptanceAndSubmission(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);
            
        }
        /// <summary>
        /// Test InitiateApplicationProcessingUnsecuredLoanTopup
        /// </summary>
        [Test]
        public void InitiateApplicationProcessingUnsecuredLoanTopupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InitiateApplicationProcessingUnsecuredLoanTopupRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string clientDetails = null;
            //var response = instance.InitiateApplicationProcessingUnsecuredLoanTopup(body, authorization, uuid, accept, clientId, contentType, clientDetails);
            //Assert.IsInstanceOf<InitiateApplicationProcessingUnsecuredLoanTopupResponse> (response, "response is InitiateApplicationProcessingUnsecuredLoanTopupResponse");
        }
        /// <summary>
        /// Test RetrieveApplicationProcessingUnsecuredLoanTopupRepaymentSchedule
        /// </summary>
        [Test]
        public void RetrieveApplicationProcessingUnsecuredLoanTopupRepaymentScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //double? loanAmount = null;
            //double? insurancePremiumAmount = null;
            //double? feeAmount = null;
            //double? loanInterestRate = null;
            //int? tenor = null;
            //string clientDetails = null;
            //var response = instance.RetrieveApplicationProcessingUnsecuredLoanTopupRepaymentSchedule(authorization, uuid, accept, clientId, contentType, loanAmount, insurancePremiumAmount, feeAmount, loanInterestRate, tenor, clientDetails);
            //Assert.IsInstanceOf<RetrieveApplicationProcessingUnsecuredLoanTopupRepaymentScheduleResponse> (response, "response is RetrieveApplicationProcessingUnsecuredLoanTopupRepaymentScheduleResponse");
        }
        /// <summary>
        /// Test UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreening
        /// </summary>
        [Test]
        public void UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string clientDetails = null;
            //var response = instance.UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreening(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);
            //Assert.IsInstanceOf<UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningResponse> (response, "response is UpdateApplicationProcessingUnsecuredLoanTopupBackgroundScreeningResponse");
        }
        /// <summary>
        /// Test UpdateApplicationProcessingUnsecuredLoanTopupInPrincipalApproval
        /// </summary>
        [Test]
        public void UpdateApplicationProcessingUnsecuredLoanTopupInPrincipalApprovalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RequestedLoanTopupDecision body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string clientDetails = null;
            //var response = instance.UpdateApplicationProcessingUnsecuredLoanTopupInPrincipalApproval(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);
            //Assert.IsInstanceOf<UpdateApplicationProcessingUnsecuredLoanTopupInPrincipalApprovalResponse> (response, "response is UpdateApplicationProcessingUnsecuredLoanTopupInPrincipalApprovalResponse");
        }
    }

}
