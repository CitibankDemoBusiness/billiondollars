/* 
 * Accounts
 *
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CardsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CardsApiTests
    {
        private CardsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CardsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CardsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CardsApi
            //Assert.IsInstanceOfType(typeof(CardsApi), instance, "instance is a CardsApi");
        }

        /// <summary>
        /// Test LoanBookingConfirmationPreLogin
        /// </summary>
        [Test]
        public void LoanBookingConfirmationPreLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LoanBookingConfirmationPreLoginRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string offerId = null;
            //string clientDetails = null;
            //var response = instance.LoanBookingConfirmationPreLogin(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
            //Assert.IsInstanceOf<LoanBookingConfirmationPreLoginResponse> (response, "response is LoanBookingConfirmationPreLoginResponse");
        }
        /// <summary>
        /// Test LoanBookingPreLogin
        /// </summary>
        [Test]
        public void LoanBookingPreLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LoanBookingPreLoginRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string offerId = null;
            //string clientDetails = null;
            //var response = instance.LoanBookingPreLogin(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
            //Assert.IsInstanceOf<LoanBookingPreLoginResponse> (response, "response is LoanBookingPreLoginResponse");
        }
        /// <summary>
        /// Test PartnerV1AccountsAccountIdLoansGet
        /// </summary>
        [Test]
        public void PartnerV1AccountsAccountIdLoansGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string accountId = null;
            //string clientDetails = null;
            //string nextStartIndex = null;
            //string loanStatus = null;
            //string offerType = null;
            //string offerIndicator = null;
            //var response = instance.PartnerV1AccountsAccountIdLoansGet(authorization, uuid, accept, clientId, accountId, clientDetails, nextStartIndex, loanStatus, offerType, offerIndicator);
            //Assert.IsInstanceOf<LoanSummaryResponse> (response, "response is LoanSummaryResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string cardId = null;
            //string clientDetails = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate(body, authorization, uuid, accept, clientId, contentType, cardId, clientDetails);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string clientDetails = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation(body, authorization, uuid, accept, clientId, contentType, clientDetails);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string offerId = null;
            //string clientDetails = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string offerId = null;
            //string clientDetails = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string offerId = null;
            //string clientDetails = null;
            //string offerType = null;
            //string offerIndicator = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin(authorization, uuid, accept, clientId, offerId, clientDetails, offerType, offerIndicator);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string offerId = null;
            //string clientDetails = null;
            //string productId = null;
            //decimal? loanAmount = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp(authorization, uuid, accept, clientId, offerId, clientDetails, productId, loanAmount);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string offerId = null;
            //string clientDetails = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string offerId = null;
            //decimal? loanAmount = null;
            //decimal? tenor = null;
            //string clientDetails = null;
            //string nextStartIndex = null;
            //bool? binaryDataFlag = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules(authorization, uuid, accept, clientId, offerId, loanAmount, tenor, clientDetails, nextStartIndex, binaryDataFlag);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse");
        }
        /// <summary>
        /// Test RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules
        /// </summary>
        [Test]
        public void RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string offerId = null;
            //string loanAmount = null;
            //int? tenor = null;
            //string clientDetails = null;
            //string nextStartIndex = null;
            //var response = instance.RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules(authorization, uuid, accept, clientId, offerId, loanAmount, tenor, clientDetails, nextStartIndex);
            //Assert.IsInstanceOf<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse> (response, "response is RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse");
        }
        /// <summary>
        /// Test RetrieveDisbursementOptionsPreLogin
        /// </summary>
        [Test]
        public void RetrieveDisbursementOptionsPreLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string offerId = null;
            //string clientDetails = null;
            //var response = instance.RetrieveDisbursementOptionsPreLogin(authorization, uuid, accept, clientId, offerId, clientDetails);
            //Assert.IsInstanceOf<RetrieveDisbursementOptionsPreLoginResponse> (response, "response is RetrieveDisbursementOptionsPreLoginResponse");
        }
        /// <summary>
        /// Test V1AccountsAccountIdLoansCreditCheckSearchPost
        /// </summary>
        [Test]
        public void V1AccountsAccountIdLoansCreditCheckSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreditCheckRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string accountId = null;
            //string clientDetails = null;
            //var response = instance.V1AccountsAccountIdLoansCreditCheckSearchPost(body, authorization, uuid, accept, clientId, accountId, clientDetails);
            //Assert.IsInstanceOf<CreditCheckResponse> (response, "response is CreditCheckResponse");
        }
    }

}
