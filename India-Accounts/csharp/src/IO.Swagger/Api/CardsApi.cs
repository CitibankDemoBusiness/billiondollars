/* 
 * Accounts
 *
 * The Accounts API allows you to retrieve account and transaction data for Citi Customers who have authorized your app. In most cases, you'll want to request a summary of all accounts first, which will return basic account information and accountIds. Once you have this information, you can request additional account details and/or transactions.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using IO.Swagger.Client;
using IO.Swagger.Model;

namespace IO.Swagger.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public interface ICardsApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </summary>
        /// <remarks>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>LoanBookingConfirmationPreLoginResponse</returns>
        LoanBookingConfirmationPreLoginResponse LoanBookingConfirmationPreLogin (LoanBookingConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </summary>
        /// <remarks>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of LoanBookingConfirmationPreLoginResponse</returns>
        ApiResponse<LoanBookingConfirmationPreLoginResponse> LoanBookingConfirmationPreLoginWithHttpInfo (LoanBookingConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </summary>
        /// <remarks>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>LoanBookingPreLoginResponse</returns>
        LoanBookingPreLoginResponse LoanBookingPreLogin (LoanBookingPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </summary>
        /// <remarks>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of LoanBookingPreLoginResponse</returns>
        ApiResponse<LoanBookingPreLoginResponse> LoanBookingPreLoginWithHttpInfo (LoanBookingPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </summary>
        /// <remarks>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.It is not applicable for the first iteration. (optional)</param>
        /// <param name="loanStatus">This is a reference data field.  Please use /v1/utilities/referenceData/{loanStatus} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>LoanSummaryResponse</returns>
        LoanSummaryResponse PartnerV1AccountsAccountIdLoansGet (string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null, string nextStartIndex = null, string loanStatus = null, string offerType = null, string offerIndicator = null);

        /// <summary>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </summary>
        /// <remarks>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.It is not applicable for the first iteration. (optional)</param>
        /// <param name="loanStatus">This is a reference data field.  Please use /v1/utilities/referenceData/{loanStatus} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>ApiResponse of LoanSummaryResponse</returns>
        ApiResponse<LoanSummaryResponse> PartnerV1AccountsAccountIdLoansGetWithHttpInfo (string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null, string nextStartIndex = null, string loanStatus = null, string offerType = null, string offerIndicator = null);
        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="cardId">The card id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string cardId, string clientDetails = null);

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="cardId">The card id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string cardId, string clientDetails = null);
        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null);

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null);
        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </summary>
        /// <remarks>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">his Refers to the unique id for the Pre login offer</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string offerType = null, string offerIndicator = null);

        /// <summary>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </summary>
        /// <remarks>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">his Refers to the unique id for the Pre login offer</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string offerType = null, string offerIndicator = null);
        /// <summary>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </summary>
        /// <remarks>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="productId">Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description. (optional)</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking. (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string productId = null, decimal? loanAmount = null);

        /// <summary>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </summary>
        /// <remarks>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="productId">Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description. (optional)</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking. (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string productId = null, decimal? loanAmount = null);
        /// <summary>
        /// This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </summary>
        /// <remarks>
        /// This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </summary>
        /// <remarks>
        /// This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// To allow customers to view the payment breakdown details.
        /// </summary>
        /// <remarks>
        /// This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan in months</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <param name="binaryDataFlag">This refer to the flag in case of binary file is require. (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules (string authorization, string uuid, string accept, string clientId, string offerId, decimal? loanAmount, decimal? tenor, string clientDetails = null, string nextStartIndex = null, bool? binaryDataFlag = null);

        /// <summary>
        /// To allow customers to view the payment breakdown details.
        /// </summary>
        /// <remarks>
        /// This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan in months</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <param name="binaryDataFlag">This refer to the flag in case of binary file is require. (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, decimal? loanAmount, decimal? tenor, string clientDetails = null, string nextStartIndex = null, bool? binaryDataFlag = null);
        /// <summary>
        /// To allow customers to view the payment breakdown details.
        /// </summary>
        /// <remarks>
        /// This API allows the customer to view the payment breakdown details.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse</returns>
        RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules (string authorization, string uuid, string accept, string clientId, string offerId, string loanAmount, int? tenor, string clientDetails = null, string nextStartIndex = null);

        /// <summary>
        /// To allow customers to view the payment breakdown details.
        /// </summary>
        /// <remarks>
        /// This API allows the customer to view the payment breakdown details.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse</returns>
        ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string loanAmount, int? tenor, string clientDetails = null, string nextStartIndex = null);
        /// <summary>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </summary>
        /// <remarks>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveDisbursementOptionsPreLoginResponse</returns>
        RetrieveDisbursementOptionsPreLoginResponse RetrieveDisbursementOptionsPreLogin (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null);

        /// <summary>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </summary>
        /// <remarks>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveDisbursementOptionsPreLoginResponse</returns>
        ApiResponse<RetrieveDisbursementOptionsPreLoginResponse> RetrieveDisbursementOptionsPreLoginWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null);
        /// <summary>
        /// Credit Check based on Debt Service Ratio
        /// </summary>
        /// <remarks>
        /// This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>CreditCheckResponse</returns>
        CreditCheckResponse V1AccountsAccountIdLoansCreditCheckSearchPost (CreditCheckRequest body, string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null);

        /// <summary>
        /// Credit Check based on Debt Service Ratio
        /// </summary>
        /// <remarks>
        /// This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of CreditCheckResponse</returns>
        ApiResponse<CreditCheckResponse> V1AccountsAccountIdLoansCreditCheckSearchPostWithHttpInfo (CreditCheckRequest body, string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </summary>
        /// <remarks>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of LoanBookingConfirmationPreLoginResponse</returns>
        System.Threading.Tasks.Task<LoanBookingConfirmationPreLoginResponse> LoanBookingConfirmationPreLoginAsync (LoanBookingConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </summary>
        /// <remarks>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (LoanBookingConfirmationPreLoginResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<LoanBookingConfirmationPreLoginResponse>> LoanBookingConfirmationPreLoginAsyncWithHttpInfo (LoanBookingConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </summary>
        /// <remarks>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of LoanBookingPreLoginResponse</returns>
        System.Threading.Tasks.Task<LoanBookingPreLoginResponse> LoanBookingPreLoginAsync (LoanBookingPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </summary>
        /// <remarks>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (LoanBookingPreLoginResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<LoanBookingPreLoginResponse>> LoanBookingPreLoginAsyncWithHttpInfo (LoanBookingPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </summary>
        /// <remarks>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.It is not applicable for the first iteration. (optional)</param>
        /// <param name="loanStatus">This is a reference data field.  Please use /v1/utilities/referenceData/{loanStatus} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>Task of LoanSummaryResponse</returns>
        System.Threading.Tasks.Task<LoanSummaryResponse> PartnerV1AccountsAccountIdLoansGetAsync (string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null, string nextStartIndex = null, string loanStatus = null, string offerType = null, string offerIndicator = null);

        /// <summary>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </summary>
        /// <remarks>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.It is not applicable for the first iteration. (optional)</param>
        /// <param name="loanStatus">This is a reference data field.  Please use /v1/utilities/referenceData/{loanStatus} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>Task of ApiResponse (LoanSummaryResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<LoanSummaryResponse>> PartnerV1AccountsAccountIdLoansGetAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null, string nextStartIndex = null, string loanStatus = null, string offerType = null, string offerIndicator = null);
        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="cardId">The card id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string cardId, string clientDetails = null);

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="cardId">The card id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string cardId, string clientDetails = null);
        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null);

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null);
        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <remarks>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </summary>
        /// <remarks>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">his Refers to the unique id for the Pre login offer</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginAsync (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string offerType = null, string offerIndicator = null);

        /// <summary>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </summary>
        /// <remarks>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">his Refers to the unique id for the Pre login offer</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string offerType = null, string offerIndicator = null);
        /// <summary>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </summary>
        /// <remarks>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="productId">Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description. (optional)</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking. (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppAsync (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string productId = null, decimal? loanAmount = null);

        /// <summary>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </summary>
        /// <remarks>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="productId">Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description. (optional)</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking. (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string productId = null, decimal? loanAmount = null);
        /// <summary>
        /// This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </summary>
        /// <remarks>
        /// This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);

        /// <summary>
        /// This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </summary>
        /// <remarks>
        /// This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null);
        /// <summary>
        /// To allow customers to view the payment breakdown details.
        /// </summary>
        /// <remarks>
        /// This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan in months</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <param name="binaryDataFlag">This refer to the flag in case of binary file is require. (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesAsync (string authorization, string uuid, string accept, string clientId, string offerId, decimal? loanAmount, decimal? tenor, string clientDetails = null, string nextStartIndex = null, bool? binaryDataFlag = null);

        /// <summary>
        /// To allow customers to view the payment breakdown details.
        /// </summary>
        /// <remarks>
        /// This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan in months</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <param name="binaryDataFlag">This refer to the flag in case of binary file is require. (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, decimal? loanAmount, decimal? tenor, string clientDetails = null, string nextStartIndex = null, bool? binaryDataFlag = null);
        /// <summary>
        /// To allow customers to view the payment breakdown details.
        /// </summary>
        /// <remarks>
        /// This API allows the customer to view the payment breakdown details.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse</returns>
        System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesAsync (string authorization, string uuid, string accept, string clientId, string offerId, string loanAmount, int? tenor, string clientDetails = null, string nextStartIndex = null);

        /// <summary>
        /// To allow customers to view the payment breakdown details.
        /// </summary>
        /// <remarks>
        /// This API allows the customer to view the payment breakdown details.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string loanAmount, int? tenor, string clientDetails = null, string nextStartIndex = null);
        /// <summary>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </summary>
        /// <remarks>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveDisbursementOptionsPreLoginResponse</returns>
        System.Threading.Tasks.Task<RetrieveDisbursementOptionsPreLoginResponse> RetrieveDisbursementOptionsPreLoginAsync (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null);

        /// <summary>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </summary>
        /// <remarks>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveDisbursementOptionsPreLoginResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RetrieveDisbursementOptionsPreLoginResponse>> RetrieveDisbursementOptionsPreLoginAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null);
        /// <summary>
        /// Credit Check based on Debt Service Ratio
        /// </summary>
        /// <remarks>
        /// This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of CreditCheckResponse</returns>
        System.Threading.Tasks.Task<CreditCheckResponse> V1AccountsAccountIdLoansCreditCheckSearchPostAsync (CreditCheckRequest body, string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null);

        /// <summary>
        /// Credit Check based on Debt Service Ratio
        /// </summary>
        /// <remarks>
        /// This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (CreditCheckResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CreditCheckResponse>> V1AccountsAccountIdLoansCreditCheckSearchPostAsyncWithHttpInfo (CreditCheckRequest body, string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public partial class CardsApi : ICardsApi
    {
        private IO.Swagger.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CardsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CardsApi(String basePath)
        {
            this.Configuration = new IO.Swagger.Client.Configuration { BasePath = basePath };

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CardsApi"/> class
        /// </summary>
        /// <returns></returns>
        public CardsApi()
        {
            this.Configuration = IO.Swagger.Client.Configuration.Default;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CardsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CardsApi(IO.Swagger.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = IO.Swagger.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public IO.Swagger.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public IO.Swagger.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process. This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>LoanBookingConfirmationPreLoginResponse</returns>
        public LoanBookingConfirmationPreLoginResponse LoanBookingConfirmationPreLogin (LoanBookingConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<LoanBookingConfirmationPreLoginResponse> localVarResponse = LoanBookingConfirmationPreLoginWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process. This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of LoanBookingConfirmationPreLoginResponse</returns>
        public ApiResponse< LoanBookingConfirmationPreLoginResponse > LoanBookingConfirmationPreLoginWithHttpInfo (LoanBookingConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->LoanBookingConfirmationPreLogin");

            var localVarPath = "/v1/prelogin/creditCardServices/offers/{offerId}/loans/bookings/confirmation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("LoanBookingConfirmationPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<LoanBookingConfirmationPreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (LoanBookingConfirmationPreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(LoanBookingConfirmationPreLoginResponse)));
        }

        /// <summary>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process. This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of LoanBookingConfirmationPreLoginResponse</returns>
        public async System.Threading.Tasks.Task<LoanBookingConfirmationPreLoginResponse> LoanBookingConfirmationPreLoginAsync (LoanBookingConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<LoanBookingConfirmationPreLoginResponse> localVarResponse = await LoanBookingConfirmationPreLoginAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API  is triggered after CMAMT interdiction in Loan Booking process. This API  is triggered after CMAMT interdiction in Loan Booking process.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (LoanBookingConfirmationPreLoginResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<LoanBookingConfirmationPreLoginResponse>> LoanBookingConfirmationPreLoginAsyncWithHttpInfo (LoanBookingConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->LoanBookingConfirmationPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->LoanBookingConfirmationPreLogin");

            var localVarPath = "/v1/prelogin/creditCardServices/offers/{offerId}/loans/bookings/confirmation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("LoanBookingConfirmationPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<LoanBookingConfirmationPreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (LoanBookingConfirmationPreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(LoanBookingConfirmationPreLoginResponse)));
        }

        /// <summary>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number. This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>LoanBookingPreLoginResponse</returns>
        public LoanBookingPreLoginResponse LoanBookingPreLogin (LoanBookingPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<LoanBookingPreLoginResponse> localVarResponse = LoanBookingPreLoginWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number. This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of LoanBookingPreLoginResponse</returns>
        public ApiResponse< LoanBookingPreLoginResponse > LoanBookingPreLoginWithHttpInfo (LoanBookingPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->LoanBookingPreLogin");

            var localVarPath = "/v1/prelogin/creditCardServices/offers/{offerId}/loans/bookings";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("LoanBookingPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<LoanBookingPreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (LoanBookingPreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(LoanBookingPreLoginResponse)));
        }

        /// <summary>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number. This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of LoanBookingPreLoginResponse</returns>
        public async System.Threading.Tasks.Task<LoanBookingPreLoginResponse> LoanBookingPreLoginAsync (LoanBookingPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<LoanBookingPreLoginResponse> localVarResponse = await LoanBookingPreLoginAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number. This API is triggered after the Loan Plan is selected and completes the Pre login Loan Booking. One of the responses to the execution of this API is the loan reference number.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">LoanBookingPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (LoanBookingPreLoginResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<LoanBookingPreLoginResponse>> LoanBookingPreLoginAsyncWithHttpInfo (LoanBookingPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->LoanBookingPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->LoanBookingPreLogin");

            var localVarPath = "/v1/prelogin/creditCardServices/offers/{offerId}/loans/bookings";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("LoanBookingPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<LoanBookingPreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (LoanBookingPreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(LoanBookingPreLoginResponse)));
        }

        /// <summary>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available. This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.It is not applicable for the first iteration. (optional)</param>
        /// <param name="loanStatus">This is a reference data field.  Please use /v1/utilities/referenceData/{loanStatus} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>LoanSummaryResponse</returns>
        public LoanSummaryResponse PartnerV1AccountsAccountIdLoansGet (string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null, string nextStartIndex = null, string loanStatus = null, string offerType = null, string offerIndicator = null)
        {
             ApiResponse<LoanSummaryResponse> localVarResponse = PartnerV1AccountsAccountIdLoansGetWithHttpInfo(authorization, uuid, accept, clientId, accountId, clientDetails, nextStartIndex, loanStatus, offerType, offerIndicator);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available. This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.It is not applicable for the first iteration. (optional)</param>
        /// <param name="loanStatus">This is a reference data field.  Please use /v1/utilities/referenceData/{loanStatus} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>ApiResponse of LoanSummaryResponse</returns>
        public ApiResponse< LoanSummaryResponse > PartnerV1AccountsAccountIdLoansGetWithHttpInfo (string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null, string nextStartIndex = null, string loanStatus = null, string offerType = null, string offerIndicator = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");
            // verify the required parameter 'accountId' is set
            if (accountId == null)
                throw new ApiException(400, "Missing required parameter 'accountId' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");

            var localVarPath = "/partner/v1/accounts/{accountId}/loans";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (accountId != null) localVarPathParams.Add("accountId", this.Configuration.ApiClient.ParameterToString(accountId)); // path parameter
            if (nextStartIndex != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "nextStartIndex", nextStartIndex)); // query parameter
            if (loanStatus != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "loanStatus", loanStatus)); // query parameter
            if (offerType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offerType", offerType)); // query parameter
            if (offerIndicator != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offerIndicator", offerIndicator)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PartnerV1AccountsAccountIdLoansGet", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<LoanSummaryResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (LoanSummaryResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(LoanSummaryResponse)));
        }

        /// <summary>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available. This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.It is not applicable for the first iteration. (optional)</param>
        /// <param name="loanStatus">This is a reference data field.  Please use /v1/utilities/referenceData/{loanStatus} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>Task of LoanSummaryResponse</returns>
        public async System.Threading.Tasks.Task<LoanSummaryResponse> PartnerV1AccountsAccountIdLoansGetAsync (string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null, string nextStartIndex = null, string loanStatus = null, string offerType = null, string offerIndicator = null)
        {
             ApiResponse<LoanSummaryResponse> localVarResponse = await PartnerV1AccountsAccountIdLoansGetAsyncWithHttpInfo(authorization, uuid, accept, clientId, accountId, clientDetails, nextStartIndex, loanStatus, offerType, offerIndicator);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available. This API is to retrieve the history details  of LOP/EPP -.If the transactions available exceeds the request size, you will be provided with a nextStartIndex. You may pass this nextStartIndex in your next request to get the next set of transactions. If nextStartIndex is blank, then there are no more transactions available.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">The next start index that indicates the next set of records to be fetched, if there are available. Typically, this value should be populated if the first response has the value of nextStartIndex.It is not applicable for the first iteration. (optional)</param>
        /// <param name="loanStatus">This is a reference data field.  Please use /v1/utilities/referenceData/{loanStatus} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>Task of ApiResponse (LoanSummaryResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<LoanSummaryResponse>> PartnerV1AccountsAccountIdLoansGetAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null, string nextStartIndex = null, string loanStatus = null, string offerType = null, string offerIndicator = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");
            // verify the required parameter 'accountId' is set
            if (accountId == null)
                throw new ApiException(400, "Missing required parameter 'accountId' when calling CardsApi->PartnerV1AccountsAccountIdLoansGet");

            var localVarPath = "/partner/v1/accounts/{accountId}/loans";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (accountId != null) localVarPathParams.Add("accountId", this.Configuration.ApiClient.ParameterToString(accountId)); // path parameter
            if (nextStartIndex != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "nextStartIndex", nextStartIndex)); // query parameter
            if (loanStatus != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "loanStatus", loanStatus)); // query parameter
            if (offerType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offerType", offerType)); // query parameter
            if (offerIndicator != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offerIndicator", offerIndicator)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("PartnerV1AccountsAccountIdLoansGet", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<LoanSummaryResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (LoanSummaryResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(LoanSummaryResponse)));
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="cardId">The card id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string cardId, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, cardId, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="cardId">The card id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string cardId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'cardId' is set
            if (cardId == null)
                throw new ApiException(400, "Missing required parameter 'cardId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");

            var localVarPath = "/v1/creditChargeCard/creditPlans/{cardId}/consolidation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (cardId != null) localVarPathParams.Add("cardId", this.Configuration.ApiClient.ParameterToString(cardId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse)));
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="cardId">The card id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string cardId, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, cardId, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="cardId">The card id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string cardId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");
            // verify the required parameter 'cardId' is set
            if (cardId == null)
                throw new ApiException(400, "Missing required parameter 'cardId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate");

            var localVarPath = "/v1/creditChargeCard/creditPlans/{cardId}/consolidation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (cardId != null) localVarPathParams.Add("cardId", this.Configuration.ApiClient.ParameterToString(cardId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidate", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateResponse)));
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");

            var localVarPath = "/v1/creditChargeCard/creditPlans/consolidation/confirmation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse)));
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation");

            var localVarPath = "/v1/creditChargeCard/creditPlans/consolidation/confirmation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmation", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationResponse)));
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");

            var localVarPath = "/v1/preLogin/creditChargeCard/creditPlans/{offerId}/consolidation/confirmation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse)));
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin");

            var localVarPath = "/v1/preLogin/creditChargeCard/creditPlans/{offerId}/consolidation/confirmation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidateConfirmationPreLoginResponse)));
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");

            var localVarPath = "/v1/preLogin/creditChargeCard/creditPlans/{offerId}/consolidation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse)));
        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API is used to merge the multiple LOPs in to single loan with top up amount added This API is used to merge the multiple LOPs in to single loan with top up amount added
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin");

            var localVarPath = "/v1/preLogin/creditChargeCard/creditPlans/{offerId}/consolidation";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanConsolidatePreLoginResponse)));
        }

        /// <summary>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards. This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">his Refers to the unique id for the Pre login offer</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string offerType = null, string offerIndicator = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginWithHttpInfo(authorization, uuid, accept, clientId, offerId, clientDetails, offerType, offerIndicator);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards. This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">his Refers to the unique id for the Pre login offer</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string offerType = null, string offerIndicator = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");

            var localVarPath = "/v1/preLogin/creditChargeCard/creditPlans/{offerId}/loans";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (offerType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offerType", offerType)); // query parameter
            if (offerIndicator != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offerIndicator", offerIndicator)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse)));
        }

        /// <summary>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards. This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">his Refers to the unique id for the Pre login offer</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginAsync (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string offerType = null, string offerIndicator = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginAsyncWithHttpInfo(authorization, uuid, accept, clientId, offerId, clientDetails, offerType, offerIndicator);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API is to fetch the list of booked loans on customer&#x27;s  credit cards. This API is to fetch the list of booked loans on customer&#x27;s  credit cards.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">his Refers to the unique id for the Pre login offer</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="offerType">This is a reference data field.  Please use /v1/utilities/referenceData/{offerType} resource to get valid value of this field with description (optional)</param>
        /// <param name="offerIndicator">This is a reference data field. Please use /v1/utilities/referenceData/{offerIndicator} resource to get valid value of this field with description (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLoginAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string offerType = null, string offerIndicator = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin");

            var localVarPath = "/v1/preLogin/creditChargeCard/creditPlans/{offerId}/loans";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (offerType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offerType", offerType)); // query parameter
            if (offerIndicator != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offerIndicator", offerIndicator)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanLoansResponse)));
        }

        /// <summary>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors. This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="productId">Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description. (optional)</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking. (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string productId = null, decimal? loanAmount = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppWithHttpInfo(authorization, uuid, accept, clientId, offerId, clientDetails, productId, loanAmount);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors. This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="productId">Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description. (optional)</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking. (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string productId = null, decimal? loanAmount = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");

            var localVarPath = "/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (productId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "productId", productId)); // query parameter
            if (loanAmount != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "loanAmount", loanAmount)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse)));
        }

        /// <summary>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors. This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="productId">Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description. (optional)</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking. (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppAsync (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string productId = null, decimal? loanAmount = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppAsyncWithHttpInfo(authorization, uuid, accept, clientId, offerId, clientDetails, productId, loanAmount);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors. This API list the Options for Pre Login EPP offers that the customer can avail. It provides the applicable interest rate and tenors.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="productId">Product ID.This is a reference data field. Please use /v1/utilities/referenceData/{productId} resource to get valid value of this field with description. (optional)</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking. (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null, string productId = null, decimal? loanAmount = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp");

            var localVarPath = "/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (productId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "productId", productId)); // query parameter
            if (loanAmount != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "loanAmount", loanAmount)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEpp", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppResponse)));
        }

        /// <summary>
        /// This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number. This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number. This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");

            var localVarPath = "/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans/bookings";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse)));
        }

        /// <summary>
        /// This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number. This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsAsync (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, contentType, offerId, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// This API is triggered after the EPP plan is selected  and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number. This API is triggered after the EPP Plan is selected and completes the EPP Booking. One of the responses to the execution of this API is the transaction reference/confirmation number.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest</param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="contentType">application/json</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsAsyncWithHttpInfo (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsRequest body, string authorization, string uuid, string accept, string clientId, string contentType, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'contentType' is set
            if (contentType == null)
                throw new ApiException(400, "Missing required parameter 'contentType' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings");

            var localVarPath = "/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans/bookings";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (contentType != null) localVarHeaderParams.Add("Content-Type", this.Configuration.ApiClient.ParameterToString(contentType)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookings", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppBookingsResponse)));
        }

        /// <summary>
        /// To allow customers to view the payment breakdown details. This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan in months</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <param name="binaryDataFlag">This refer to the flag in case of binary file is require. (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules (string authorization, string uuid, string accept, string clientId, string offerId, decimal? loanAmount, decimal? tenor, string clientDetails = null, string nextStartIndex = null, bool? binaryDataFlag = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesWithHttpInfo(authorization, uuid, accept, clientId, offerId, loanAmount, tenor, clientDetails, nextStartIndex, binaryDataFlag);
             return localVarResponse.Data;
        }

        /// <summary>
        /// To allow customers to view the payment breakdown details. This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan in months</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <param name="binaryDataFlag">This refer to the flag in case of binary file is require. (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, decimal? loanAmount, decimal? tenor, string clientDetails = null, string nextStartIndex = null, bool? binaryDataFlag = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'loanAmount' is set
            if (loanAmount == null)
                throw new ApiException(400, "Missing required parameter 'loanAmount' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'tenor' is set
            if (tenor == null)
                throw new ApiException(400, "Missing required parameter 'tenor' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");

            var localVarPath = "/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans/repaymentSchedules";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (loanAmount != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "loanAmount", loanAmount)); // query parameter
            if (tenor != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "tenor", tenor)); // query parameter
            if (nextStartIndex != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "nextStartIndex", nextStartIndex)); // query parameter
            if (binaryDataFlag != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "binaryDataFlag", binaryDataFlag)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse)));
        }

        /// <summary>
        /// To allow customers to view the payment breakdown details. This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan in months</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <param name="binaryDataFlag">This refer to the flag in case of binary file is require. (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesAsync (string authorization, string uuid, string accept, string clientId, string offerId, decimal? loanAmount, decimal? tenor, string clientDetails = null, string nextStartIndex = null, bool? binaryDataFlag = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesAsyncWithHttpInfo(authorization, uuid, accept, clientId, offerId, loanAmount, tenor, clientDetails, nextStartIndex, binaryDataFlag);
             return localVarResponse.Data;

        }

        /// <summary>
        /// To allow customers to view the payment breakdown details. This API allows the customer to view the payment breakdown details for the selected time period for prelogin offer
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan in months</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <param name="binaryDataFlag">This refer to the flag in case of binary file is require. (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, decimal? loanAmount, decimal? tenor, string clientDetails = null, string nextStartIndex = null, bool? binaryDataFlag = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'loanAmount' is set
            if (loanAmount == null)
                throw new ApiException(400, "Missing required parameter 'loanAmount' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");
            // verify the required parameter 'tenor' is set
            if (tenor == null)
                throw new ApiException(400, "Missing required parameter 'tenor' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules");

            var localVarPath = "/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/easyPaymentPlans/repaymentSchedules";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (loanAmount != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "loanAmount", loanAmount)); // query parameter
            if (tenor != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "tenor", tenor)); // query parameter
            if (nextStartIndex != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "nextStartIndex", nextStartIndex)); // query parameter
            if (binaryDataFlag != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "binaryDataFlag", binaryDataFlag)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedules", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersEppRepaymentSchedulesResponse)));
        }

        /// <summary>
        /// To allow customers to view the payment breakdown details. This API allows the customer to view the payment breakdown details.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <returns>RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse</returns>
        public RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules (string authorization, string uuid, string accept, string clientId, string offerId, string loanAmount, int? tenor, string clientDetails = null, string nextStartIndex = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse> localVarResponse = RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesWithHttpInfo(authorization, uuid, accept, clientId, offerId, loanAmount, tenor, clientDetails, nextStartIndex);
             return localVarResponse.Data;
        }

        /// <summary>
        /// To allow customers to view the payment breakdown details. This API allows the customer to view the payment breakdown details.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <returns>ApiResponse of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse</returns>
        public ApiResponse< RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse > RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string loanAmount, int? tenor, string clientDetails = null, string nextStartIndex = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'loanAmount' is set
            if (loanAmount == null)
                throw new ApiException(400, "Missing required parameter 'loanAmount' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'tenor' is set
            if (tenor == null)
                throw new ApiException(400, "Missing required parameter 'tenor' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");

            var localVarPath = "/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/loans/repaymentSchedules";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (loanAmount != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "loanAmount", loanAmount)); // query parameter
            if (tenor != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "tenor", tenor)); // query parameter
            if (nextStartIndex != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "nextStartIndex", nextStartIndex)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse)));
        }

        /// <summary>
        /// To allow customers to view the payment breakdown details. This API allows the customer to view the payment breakdown details.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <returns>Task of RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesAsync (string authorization, string uuid, string accept, string clientId, string offerId, string loanAmount, int? tenor, string clientDetails = null, string nextStartIndex = null)
        {
             ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse> localVarResponse = await RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesAsyncWithHttpInfo(authorization, uuid, accept, clientId, offerId, loanAmount, tenor, clientDetails, nextStartIndex);
             return localVarResponse.Data;

        }

        /// <summary>
        /// To allow customers to view the payment breakdown details. This API allows the customer to view the payment breakdown details.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="loanAmount">Loan amount for easy payment plan booking.</param>
        /// <param name="tenor">Tenure of loan.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <param name="nextStartIndex">In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data. (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse>> RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string loanAmount, int? tenor, string clientDetails = null, string nextStartIndex = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'loanAmount' is set
            if (loanAmount == null)
                throw new ApiException(400, "Missing required parameter 'loanAmount' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");
            // verify the required parameter 'tenor' is set
            if (tenor == null)
                throw new ApiException(400, "Missing required parameter 'tenor' when calling CardsApi->RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules");

            var localVarPath = "/v1/prelogin/creditChargeCard/creditPlans/offers/{offerId}/loans/repaymentSchedules";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (loanAmount != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "loanAmount", loanAmount)); // query parameter
            if (tenor != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "tenor", tenor)); // query parameter
            if (nextStartIndex != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "nextStartIndex", nextStartIndex)); // query parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedules", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveCreditChargeCardFulfillmentArrangementCreditPlanOffersLoanRepaymentSchedulesResponse)));
        }

        /// <summary>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option. Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>RetrieveDisbursementOptionsPreLoginResponse</returns>
        public RetrieveDisbursementOptionsPreLoginResponse RetrieveDisbursementOptionsPreLogin (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null)
        {
             ApiResponse<RetrieveDisbursementOptionsPreLoginResponse> localVarResponse = RetrieveDisbursementOptionsPreLoginWithHttpInfo(authorization, uuid, accept, clientId, offerId, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option. Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of RetrieveDisbursementOptionsPreLoginResponse</returns>
        public ApiResponse< RetrieveDisbursementOptionsPreLoginResponse > RetrieveDisbursementOptionsPreLoginWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");

            var localVarPath = "/v1/creditCardServices/offers/{offerId}/prelogin/loans/disbursementOptions";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveDisbursementOptionsPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveDisbursementOptionsPreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveDisbursementOptionsPreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveDisbursementOptionsPreLoginResponse)));
        }

        /// <summary>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option. Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of RetrieveDisbursementOptionsPreLoginResponse</returns>
        public async System.Threading.Tasks.Task<RetrieveDisbursementOptionsPreLoginResponse> RetrieveDisbursementOptionsPreLoginAsync (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null)
        {
             ApiResponse<RetrieveDisbursementOptionsPreLoginResponse> localVarResponse = await RetrieveDisbursementOptionsPreLoginAsyncWithHttpInfo(authorization, uuid, accept, clientId, offerId, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get the list of disbursement options and the details like bank details and billing address relevant to each option. Get the list of disbursement options and the details like bank details and billing address relevant to each option.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">Client ID generated during application registration.</param>
        /// <param name="offerId">This Refers to the unique id for the Pre login offer.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (RetrieveDisbursementOptionsPreLoginResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RetrieveDisbursementOptionsPreLoginResponse>> RetrieveDisbursementOptionsPreLoginAsyncWithHttpInfo (string authorization, string uuid, string accept, string clientId, string offerId, string clientDetails = null)
        {
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");
            // verify the required parameter 'offerId' is set
            if (offerId == null)
                throw new ApiException(400, "Missing required parameter 'offerId' when calling CardsApi->RetrieveDisbursementOptionsPreLogin");

            var localVarPath = "/v1/creditCardServices/offers/{offerId}/prelogin/loans/disbursementOptions";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (offerId != null) localVarPathParams.Add("offerId", this.Configuration.ApiClient.ParameterToString(offerId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RetrieveDisbursementOptionsPreLogin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RetrieveDisbursementOptionsPreLoginResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (RetrieveDisbursementOptionsPreLoginResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RetrieveDisbursementOptionsPreLoginResponse)));
        }

        /// <summary>
        /// Credit Check based on Debt Service Ratio This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>CreditCheckResponse</returns>
        public CreditCheckResponse V1AccountsAccountIdLoansCreditCheckSearchPost (CreditCheckRequest body, string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null)
        {
             ApiResponse<CreditCheckResponse> localVarResponse = V1AccountsAccountIdLoansCreditCheckSearchPostWithHttpInfo(body, authorization, uuid, accept, clientId, accountId, clientDetails);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Credit Check based on Debt Service Ratio This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>ApiResponse of CreditCheckResponse</returns>
        public ApiResponse< CreditCheckResponse > V1AccountsAccountIdLoansCreditCheckSearchPostWithHttpInfo (CreditCheckRequest body, string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'accountId' is set
            if (accountId == null)
                throw new ApiException(400, "Missing required parameter 'accountId' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");

            var localVarPath = "/v1/accounts/{accountId}/loans/creditCheck/search";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (accountId != null) localVarPathParams.Add("accountId", this.Configuration.ApiClient.ParameterToString(accountId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("V1AccountsAccountIdLoansCreditCheckSearchPost", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<CreditCheckResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (CreditCheckResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(CreditCheckResponse)));
        }

        /// <summary>
        /// Credit Check based on Debt Service Ratio This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of CreditCheckResponse</returns>
        public async System.Threading.Tasks.Task<CreditCheckResponse> V1AccountsAccountIdLoansCreditCheckSearchPostAsync (CreditCheckRequest body, string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null)
        {
             ApiResponse<CreditCheckResponse> localVarResponse = await V1AccountsAccountIdLoansCreditCheckSearchPostAsyncWithHttpInfo(body, authorization, uuid, accept, clientId, accountId, clientDetails);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Credit Check based on Debt Service Ratio This API is used to retrieve the eligible tenure options, the corresponding maximum eligible loan amount and the annual interest rate based on debt service ratio.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <param name="authorization">The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.</param>
        /// <param name="uuid">128 bit random UUID generated uniquely for every request.</param>
        /// <param name="accept">Content-Type that are acceptable for the response.</param>
        /// <param name="clientId">client id generated during consumer onboarding</param>
        /// <param name="accountId">The account id  in encrypted format.</param>
        /// <param name="clientDetails">This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId (optional)</param>
        /// <returns>Task of ApiResponse (CreditCheckResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<CreditCheckResponse>> V1AccountsAccountIdLoansCreditCheckSearchPostAsyncWithHttpInfo (CreditCheckRequest body, string authorization, string uuid, string accept, string clientId, string accountId, string clientDetails = null)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'authorization' is set
            if (authorization == null)
                throw new ApiException(400, "Missing required parameter 'authorization' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'uuid' is set
            if (uuid == null)
                throw new ApiException(400, "Missing required parameter 'uuid' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'accept' is set
            if (accept == null)
                throw new ApiException(400, "Missing required parameter 'accept' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'clientId' is set
            if (clientId == null)
                throw new ApiException(400, "Missing required parameter 'clientId' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");
            // verify the required parameter 'accountId' is set
            if (accountId == null)
                throw new ApiException(400, "Missing required parameter 'accountId' when calling CardsApi->V1AccountsAccountIdLoansCreditCheckSearchPost");

            var localVarPath = "/v1/accounts/{accountId}/loans/creditCheck/search";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (accountId != null) localVarPathParams.Add("accountId", this.Configuration.ApiClient.ParameterToString(accountId)); // path parameter
            if (authorization != null) localVarHeaderParams.Add("Authorization", this.Configuration.ApiClient.ParameterToString(authorization)); // header parameter
            if (uuid != null) localVarHeaderParams.Add("uuid", this.Configuration.ApiClient.ParameterToString(uuid)); // header parameter
            if (accept != null) localVarHeaderParams.Add("Accept", this.Configuration.ApiClient.ParameterToString(accept)); // header parameter
            if (clientId != null) localVarHeaderParams.Add("client_id", this.Configuration.ApiClient.ParameterToString(clientId)); // header parameter
            if (clientDetails != null) localVarHeaderParams.Add("clientDetails", this.Configuration.ApiClient.ParameterToString(clientDetails)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("V1AccountsAccountIdLoansCreditCheckSearchPost", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<CreditCheckResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (CreditCheckResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(CreditCheckResponse)));
        }

    }
}
