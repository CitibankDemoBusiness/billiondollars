<?php
/**
 * ApplicationUpdateUnsecuredLoanProduct
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Onboarding
 *
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.29
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ApplicationUpdateUnsecuredLoanProduct Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ApplicationUpdateUnsecuredLoanProduct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ApplicationUpdateUnsecuredLoanProduct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'product_code' => 'string',
'source_code' => 'string',
'organization' => 'string',
'logo' => 'string',
'request_credit_shield' => 'bool',
'billing_address' => 'string',
'gift_code' => 'string',
'requested_loan_amount' => 'double',
'tenor' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'product_code' => null,
'source_code' => null,
'organization' => null,
'logo' => null,
'request_credit_shield' => null,
'billing_address' => null,
'gift_code' => null,
'requested_loan_amount' => 'double',
'tenor' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'product_code' => 'productCode',
'source_code' => 'sourceCode',
'organization' => 'organization',
'logo' => 'logo',
'request_credit_shield' => 'requestCreditShield',
'billing_address' => 'billingAddress',
'gift_code' => 'giftCode',
'requested_loan_amount' => 'requestedLoanAmount',
'tenor' => 'tenor'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'product_code' => 'setProductCode',
'source_code' => 'setSourceCode',
'organization' => 'setOrganization',
'logo' => 'setLogo',
'request_credit_shield' => 'setRequestCreditShield',
'billing_address' => 'setBillingAddress',
'gift_code' => 'setGiftCode',
'requested_loan_amount' => 'setRequestedLoanAmount',
'tenor' => 'setTenor'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'product_code' => 'getProductCode',
'source_code' => 'getSourceCode',
'organization' => 'getOrganization',
'logo' => 'getLogo',
'request_credit_shield' => 'getRequestCreditShield',
'billing_address' => 'getBillingAddress',
'gift_code' => 'getGiftCode',
'requested_loan_amount' => 'getRequestedLoanAmount',
'tenor' => 'getTenor'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['product_code'] = isset($data['product_code']) ? $data['product_code'] : null;
        $this->container['source_code'] = isset($data['source_code']) ? $data['source_code'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['logo'] = isset($data['logo']) ? $data['logo'] : null;
        $this->container['request_credit_shield'] = isset($data['request_credit_shield']) ? $data['request_credit_shield'] : null;
        $this->container['billing_address'] = isset($data['billing_address']) ? $data['billing_address'] : null;
        $this->container['gift_code'] = isset($data['gift_code']) ? $data['gift_code'] : null;
        $this->container['requested_loan_amount'] = isset($data['requested_loan_amount']) ? $data['requested_loan_amount'] : null;
        $this->container['tenor'] = isset($data['tenor']) ? $data['tenor'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets product_code
     *
     * @return string
     */
    public function getProductCode()
    {
        return $this->container['product_code'];
    }

    /**
     * Sets product_code
     *
     * @param string $product_code A unique code that identifies the product
     *
     * @return $this
     */
    public function setProductCode($product_code)
    {
        $this->container['product_code'] = $product_code;

        return $this;
    }

    /**
     * Gets source_code
     *
     * @return string
     */
    public function getSourceCode()
    {
        return $this->container['source_code'];
    }

    /**
     * Sets source_code
     *
     * @param string $source_code A source code to identify the product
     *
     * @return $this
     */
    public function setSourceCode($source_code)
    {
        $this->container['source_code'] = $source_code;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization Card issuing Organisation code
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets logo
     *
     * @return string
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param string $logo Product logo to identify the product
     *
     * @return $this
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets request_credit_shield
     *
     * @return bool
     */
    public function getRequestCreditShield()
    {
        return $this->container['request_credit_shield'];
    }

    /**
     * Sets request_credit_shield
     *
     * @param bool $request_credit_shield Insurance enrolment for outstanding balance on the card. Valid values: true and false
     *
     * @return $this
     */
    public function setRequestCreditShield($request_credit_shield)
    {
        $this->container['request_credit_shield'] = $request_credit_shield;

        return $this;
    }

    /**
     * Gets billing_address
     *
     * @return string
     */
    public function getBillingAddress()
    {
        return $this->container['billing_address'];
    }

    /**
     * Sets billing_address
     *
     * @param string $billing_address Billing address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use addressType field name as the referenceCode parameter to retrieve the values.
     *
     * @return $this
     */
    public function setBillingAddress($billing_address)
    {
        $this->container['billing_address'] = $billing_address;

        return $this;
    }

    /**
     * Gets gift_code
     *
     * @return string
     */
    public function getGiftCode()
    {
        return $this->container['gift_code'];
    }

    /**
     * Sets gift_code
     *
     * @param string $gift_code A  unique code that identifies the gift offered along with the product
     *
     * @return $this
     */
    public function setGiftCode($gift_code)
    {
        $this->container['gift_code'] = $gift_code;

        return $this;
    }

    /**
     * Gets requested_loan_amount
     *
     * @return double
     */
    public function getRequestedLoanAmount()
    {
        return $this->container['requested_loan_amount'];
    }

    /**
     * Sets requested_loan_amount
     *
     * @param double $requested_loan_amount Requested loan amount
     *
     * @return $this
     */
    public function setRequestedLoanAmount($requested_loan_amount)
    {
        $this->container['requested_loan_amount'] = $requested_loan_amount;

        return $this;
    }

    /**
     * Gets tenor
     *
     * @return string
     */
    public function getTenor()
    {
        return $this->container['tenor'];
    }

    /**
     * Sets tenor
     *
     * @param string $tenor Tenure of loan. This is a reference data field. Please use /v1/apac/utilities/referenceData/{tenor} resource to get valid value of this field with description. You can use tenor field name as the referenceCode parameter to retrieve the values.
     *
     * @return $this
     */
    public function setTenor($tenor)
    {
        $this->container['tenor'] = $tenor;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
