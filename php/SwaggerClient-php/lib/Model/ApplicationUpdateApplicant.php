<?php
/**
 * ApplicationUpdateApplicant
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Onboarding
 *
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.29
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ApplicationUpdateApplicant Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ApplicationUpdateApplicant implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ApplicationUpdateApplicant';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'name' => '\Swagger\Client\Model\ApplicationUpdateName',
'phone' => '\Swagger\Client\Model\ApplicationUpdatePhone[]',
'email' => '\Swagger\Client\Model\ApplicationUpdateEmail[]',
'ocr' => '\Swagger\Client\Model\ApplicationUpdateOcr',
'demographics' => '\Swagger\Client\Model\ApplicationUpdateDemographics',
'address' => '\Swagger\Client\Model\ApplicationUpdateAddress[]',
'contact_preference' => '\Swagger\Client\Model\ApplicationUpdateContactPreference',
'contact_consent' => '\Swagger\Client\Model\ApplicationUpdateContactConsent',
'financial_information' => '\Swagger\Client\Model\ApplicationUpdateFinancialInformation',
'mother_maiden_name' => 'string',
'education' => '\Swagger\Client\Model\ApplicationUpdateEducation',
'employment_details' => '\Swagger\Client\Model\ApplicationUpdateEmploymentDetails[]',
'identification_document_details' => '\Swagger\Client\Model\ApplicationUpdateIdentificationDocumentDetails[]',
'additional_data' => '\Swagger\Client\Model\ApplicationUpdateAdditionalData',
'partner_customer_details' => '\Swagger\Client\Model\ApplicationUpdatePartnerCustomerDetails',
'consent_details' => '\Swagger\Client\Model\ApplicationUpdateConsentDetails[]',
'marketing_consent' => '\Swagger\Client\Model\ApplicationUpdateMarketingConsent',
'self_declaration' => '\Swagger\Client\Model\ApplicationUpdateSelfDeclaration',
'kyc_information' => '\Swagger\Client\Model\ApplicationUpdateKycInformation'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'name' => null,
'phone' => null,
'email' => null,
'ocr' => null,
'demographics' => null,
'address' => null,
'contact_preference' => null,
'contact_consent' => null,
'financial_information' => null,
'mother_maiden_name' => null,
'education' => null,
'employment_details' => null,
'identification_document_details' => null,
'additional_data' => null,
'partner_customer_details' => null,
'consent_details' => null,
'marketing_consent' => null,
'self_declaration' => null,
'kyc_information' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'name' => 'name',
'phone' => 'phone',
'email' => 'email',
'ocr' => 'ocr',
'demographics' => 'demographics',
'address' => 'address',
'contact_preference' => 'contactPreference',
'contact_consent' => 'contactConsent',
'financial_information' => 'financialInformation',
'mother_maiden_name' => 'motherMaidenName',
'education' => 'education',
'employment_details' => 'employmentDetails',
'identification_document_details' => 'identificationDocumentDetails',
'additional_data' => 'additionalData',
'partner_customer_details' => 'partnerCustomerDetails',
'consent_details' => 'consentDetails',
'marketing_consent' => 'marketingConsent',
'self_declaration' => 'selfDeclaration',
'kyc_information' => 'kycInformation'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'name' => 'setName',
'phone' => 'setPhone',
'email' => 'setEmail',
'ocr' => 'setOcr',
'demographics' => 'setDemographics',
'address' => 'setAddress',
'contact_preference' => 'setContactPreference',
'contact_consent' => 'setContactConsent',
'financial_information' => 'setFinancialInformation',
'mother_maiden_name' => 'setMotherMaidenName',
'education' => 'setEducation',
'employment_details' => 'setEmploymentDetails',
'identification_document_details' => 'setIdentificationDocumentDetails',
'additional_data' => 'setAdditionalData',
'partner_customer_details' => 'setPartnerCustomerDetails',
'consent_details' => 'setConsentDetails',
'marketing_consent' => 'setMarketingConsent',
'self_declaration' => 'setSelfDeclaration',
'kyc_information' => 'setKycInformation'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'name' => 'getName',
'phone' => 'getPhone',
'email' => 'getEmail',
'ocr' => 'getOcr',
'demographics' => 'getDemographics',
'address' => 'getAddress',
'contact_preference' => 'getContactPreference',
'contact_consent' => 'getContactConsent',
'financial_information' => 'getFinancialInformation',
'mother_maiden_name' => 'getMotherMaidenName',
'education' => 'getEducation',
'employment_details' => 'getEmploymentDetails',
'identification_document_details' => 'getIdentificationDocumentDetails',
'additional_data' => 'getAdditionalData',
'partner_customer_details' => 'getPartnerCustomerDetails',
'consent_details' => 'getConsentDetails',
'marketing_consent' => 'getMarketingConsent',
'self_declaration' => 'getSelfDeclaration',
'kyc_information' => 'getKycInformation'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['ocr'] = isset($data['ocr']) ? $data['ocr'] : null;
        $this->container['demographics'] = isset($data['demographics']) ? $data['demographics'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['contact_preference'] = isset($data['contact_preference']) ? $data['contact_preference'] : null;
        $this->container['contact_consent'] = isset($data['contact_consent']) ? $data['contact_consent'] : null;
        $this->container['financial_information'] = isset($data['financial_information']) ? $data['financial_information'] : null;
        $this->container['mother_maiden_name'] = isset($data['mother_maiden_name']) ? $data['mother_maiden_name'] : null;
        $this->container['education'] = isset($data['education']) ? $data['education'] : null;
        $this->container['employment_details'] = isset($data['employment_details']) ? $data['employment_details'] : null;
        $this->container['identification_document_details'] = isset($data['identification_document_details']) ? $data['identification_document_details'] : null;
        $this->container['additional_data'] = isset($data['additional_data']) ? $data['additional_data'] : null;
        $this->container['partner_customer_details'] = isset($data['partner_customer_details']) ? $data['partner_customer_details'] : null;
        $this->container['consent_details'] = isset($data['consent_details']) ? $data['consent_details'] : null;
        $this->container['marketing_consent'] = isset($data['marketing_consent']) ? $data['marketing_consent'] : null;
        $this->container['self_declaration'] = isset($data['self_declaration']) ? $data['self_declaration'] : null;
        $this->container['kyc_information'] = isset($data['kyc_information']) ? $data['kyc_information'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets name
     *
     * @return \Swagger\Client\Model\ApplicationUpdateName
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param \Swagger\Client\Model\ApplicationUpdateName $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return \Swagger\Client\Model\ApplicationUpdatePhone[]
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param \Swagger\Client\Model\ApplicationUpdatePhone[] $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets email
     *
     * @return \Swagger\Client\Model\ApplicationUpdateEmail[]
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param \Swagger\Client\Model\ApplicationUpdateEmail[] $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets ocr
     *
     * @return \Swagger\Client\Model\ApplicationUpdateOcr
     */
    public function getOcr()
    {
        return $this->container['ocr'];
    }

    /**
     * Sets ocr
     *
     * @param \Swagger\Client\Model\ApplicationUpdateOcr $ocr ocr
     *
     * @return $this
     */
    public function setOcr($ocr)
    {
        $this->container['ocr'] = $ocr;

        return $this;
    }

    /**
     * Gets demographics
     *
     * @return \Swagger\Client\Model\ApplicationUpdateDemographics
     */
    public function getDemographics()
    {
        return $this->container['demographics'];
    }

    /**
     * Sets demographics
     *
     * @param \Swagger\Client\Model\ApplicationUpdateDemographics $demographics demographics
     *
     * @return $this
     */
    public function setDemographics($demographics)
    {
        $this->container['demographics'] = $demographics;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Swagger\Client\Model\ApplicationUpdateAddress[]
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Swagger\Client\Model\ApplicationUpdateAddress[] $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets contact_preference
     *
     * @return \Swagger\Client\Model\ApplicationUpdateContactPreference
     */
    public function getContactPreference()
    {
        return $this->container['contact_preference'];
    }

    /**
     * Sets contact_preference
     *
     * @param \Swagger\Client\Model\ApplicationUpdateContactPreference $contact_preference contact_preference
     *
     * @return $this
     */
    public function setContactPreference($contact_preference)
    {
        $this->container['contact_preference'] = $contact_preference;

        return $this;
    }

    /**
     * Gets contact_consent
     *
     * @return \Swagger\Client\Model\ApplicationUpdateContactConsent
     */
    public function getContactConsent()
    {
        return $this->container['contact_consent'];
    }

    /**
     * Sets contact_consent
     *
     * @param \Swagger\Client\Model\ApplicationUpdateContactConsent $contact_consent contact_consent
     *
     * @return $this
     */
    public function setContactConsent($contact_consent)
    {
        $this->container['contact_consent'] = $contact_consent;

        return $this;
    }

    /**
     * Gets financial_information
     *
     * @return \Swagger\Client\Model\ApplicationUpdateFinancialInformation
     */
    public function getFinancialInformation()
    {
        return $this->container['financial_information'];
    }

    /**
     * Sets financial_information
     *
     * @param \Swagger\Client\Model\ApplicationUpdateFinancialInformation $financial_information financial_information
     *
     * @return $this
     */
    public function setFinancialInformation($financial_information)
    {
        $this->container['financial_information'] = $financial_information;

        return $this;
    }

    /**
     * Gets mother_maiden_name
     *
     * @return string
     */
    public function getMotherMaidenName()
    {
        return $this->container['mother_maiden_name'];
    }

    /**
     * Sets mother_maiden_name
     *
     * @param string $mother_maiden_name Mother's maiden name
     *
     * @return $this
     */
    public function setMotherMaidenName($mother_maiden_name)
    {
        $this->container['mother_maiden_name'] = $mother_maiden_name;

        return $this;
    }

    /**
     * Gets education
     *
     * @return \Swagger\Client\Model\ApplicationUpdateEducation
     */
    public function getEducation()
    {
        return $this->container['education'];
    }

    /**
     * Sets education
     *
     * @param \Swagger\Client\Model\ApplicationUpdateEducation $education education
     *
     * @return $this
     */
    public function setEducation($education)
    {
        $this->container['education'] = $education;

        return $this;
    }

    /**
     * Gets employment_details
     *
     * @return \Swagger\Client\Model\ApplicationUpdateEmploymentDetails[]
     */
    public function getEmploymentDetails()
    {
        return $this->container['employment_details'];
    }

    /**
     * Sets employment_details
     *
     * @param \Swagger\Client\Model\ApplicationUpdateEmploymentDetails[] $employment_details employment_details
     *
     * @return $this
     */
    public function setEmploymentDetails($employment_details)
    {
        $this->container['employment_details'] = $employment_details;

        return $this;
    }

    /**
     * Gets identification_document_details
     *
     * @return \Swagger\Client\Model\ApplicationUpdateIdentificationDocumentDetails[]
     */
    public function getIdentificationDocumentDetails()
    {
        return $this->container['identification_document_details'];
    }

    /**
     * Sets identification_document_details
     *
     * @param \Swagger\Client\Model\ApplicationUpdateIdentificationDocumentDetails[] $identification_document_details identification_document_details
     *
     * @return $this
     */
    public function setIdentificationDocumentDetails($identification_document_details)
    {
        $this->container['identification_document_details'] = $identification_document_details;

        return $this;
    }

    /**
     * Gets additional_data
     *
     * @return \Swagger\Client\Model\ApplicationUpdateAdditionalData
     */
    public function getAdditionalData()
    {
        return $this->container['additional_data'];
    }

    /**
     * Sets additional_data
     *
     * @param \Swagger\Client\Model\ApplicationUpdateAdditionalData $additional_data additional_data
     *
     * @return $this
     */
    public function setAdditionalData($additional_data)
    {
        $this->container['additional_data'] = $additional_data;

        return $this;
    }

    /**
     * Gets partner_customer_details
     *
     * @return \Swagger\Client\Model\ApplicationUpdatePartnerCustomerDetails
     */
    public function getPartnerCustomerDetails()
    {
        return $this->container['partner_customer_details'];
    }

    /**
     * Sets partner_customer_details
     *
     * @param \Swagger\Client\Model\ApplicationUpdatePartnerCustomerDetails $partner_customer_details partner_customer_details
     *
     * @return $this
     */
    public function setPartnerCustomerDetails($partner_customer_details)
    {
        $this->container['partner_customer_details'] = $partner_customer_details;

        return $this;
    }

    /**
     * Gets consent_details
     *
     * @return \Swagger\Client\Model\ApplicationUpdateConsentDetails[]
     */
    public function getConsentDetails()
    {
        return $this->container['consent_details'];
    }

    /**
     * Sets consent_details
     *
     * @param \Swagger\Client\Model\ApplicationUpdateConsentDetails[] $consent_details consent_details
     *
     * @return $this
     */
    public function setConsentDetails($consent_details)
    {
        $this->container['consent_details'] = $consent_details;

        return $this;
    }

    /**
     * Gets marketing_consent
     *
     * @return \Swagger\Client\Model\ApplicationUpdateMarketingConsent
     */
    public function getMarketingConsent()
    {
        return $this->container['marketing_consent'];
    }

    /**
     * Sets marketing_consent
     *
     * @param \Swagger\Client\Model\ApplicationUpdateMarketingConsent $marketing_consent marketing_consent
     *
     * @return $this
     */
    public function setMarketingConsent($marketing_consent)
    {
        $this->container['marketing_consent'] = $marketing_consent;

        return $this;
    }

    /**
     * Gets self_declaration
     *
     * @return \Swagger\Client\Model\ApplicationUpdateSelfDeclaration
     */
    public function getSelfDeclaration()
    {
        return $this->container['self_declaration'];
    }

    /**
     * Sets self_declaration
     *
     * @param \Swagger\Client\Model\ApplicationUpdateSelfDeclaration $self_declaration self_declaration
     *
     * @return $this
     */
    public function setSelfDeclaration($self_declaration)
    {
        $this->container['self_declaration'] = $self_declaration;

        return $this;
    }

    /**
     * Gets kyc_information
     *
     * @return \Swagger\Client\Model\ApplicationUpdateKycInformation
     */
    public function getKycInformation()
    {
        return $this->container['kyc_information'];
    }

    /**
     * Sets kyc_information
     *
     * @param \Swagger\Client\Model\ApplicationUpdateKycInformation $kyc_information kyc_information
     *
     * @return $this
     */
    public function setKycInformation($kyc_information)
    {
        $this->container['kyc_information'] = $kyc_information;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
