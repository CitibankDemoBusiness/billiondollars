<?php
/**
 * AdditionalDataAdd
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Onboarding
 *
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.29
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * AdditionalDataAdd Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AdditionalDataAdd implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AdditionalDataAdd';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_fund_source' => 'string',
'number_of_dependents' => 'float',
'staff_indicator' => 'bool',
'business_nature' => 'string',
'emergency_contact_name' => 'string',
'emergency_contact_surname' => 'string',
'emergency_contact_relationship' => 'string',
'emergency_contact_phone_number' => 'string',
'over_limit_consent_flag' => 'bool',
'country_specific_group' => '\Swagger\Client\Model\CountrySpecificGroup',
'primary_bank_details' => '\Swagger\Client\Model\PrimaryBankDetails',
'referral_given_name' => 'string',
'referral_surname' => 'string',
'referral_code' => 'string',
'media_id' => 'string',
'introducer_id' => 'string',
'related_to_citi_employee_flag' => 'bool',
'related_citi_employee_name' => 'string',
'related_citi_employee_department' => 'string',
'credit_card_usage_purpose' => 'string',
'cash_pin_flag' => 'bool',
'referral_tracking' => '\Swagger\Client\Model\ReferralTracking',
'utility_bill_details' => '\Swagger\Client\Model\UtilityBillDetails',
'fee_code' => 'string',
'billing_cycle_day' => 'string',
'application_reference_id' => 'string',
'customer_segment' => 'string',
'printing_serial_number' => 'string',
'additional_information' => 'string',
'trade_reference_details' => '\Swagger\Client\Model\TradeReferenceDetails',
'bureau_session_id_' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_fund_source' => null,
'number_of_dependents' => null,
'staff_indicator' => null,
'business_nature' => null,
'emergency_contact_name' => null,
'emergency_contact_surname' => null,
'emergency_contact_relationship' => null,
'emergency_contact_phone_number' => null,
'over_limit_consent_flag' => null,
'country_specific_group' => null,
'primary_bank_details' => null,
'referral_given_name' => null,
'referral_surname' => null,
'referral_code' => null,
'media_id' => null,
'introducer_id' => null,
'related_to_citi_employee_flag' => null,
'related_citi_employee_name' => null,
'related_citi_employee_department' => null,
'credit_card_usage_purpose' => null,
'cash_pin_flag' => null,
'referral_tracking' => null,
'utility_bill_details' => null,
'fee_code' => null,
'billing_cycle_day' => null,
'application_reference_id' => null,
'customer_segment' => null,
'printing_serial_number' => null,
'additional_information' => null,
'trade_reference_details' => null,
'bureau_session_id_' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_fund_source' => 'accountFundSource',
'number_of_dependents' => 'numberOfDependents',
'staff_indicator' => 'staffIndicator',
'business_nature' => 'businessNature',
'emergency_contact_name' => 'emergencyContactName',
'emergency_contact_surname' => 'emergencyContactSurname',
'emergency_contact_relationship' => 'emergencyContactRelationship',
'emergency_contact_phone_number' => 'emergencyContactPhoneNumber',
'over_limit_consent_flag' => 'overLimitConsentFlag',
'country_specific_group' => 'countrySpecificGroup',
'primary_bank_details' => 'primaryBankDetails',
'referral_given_name' => 'referralGivenName',
'referral_surname' => 'referralSurname',
'referral_code' => 'referralCode',
'media_id' => 'mediaId',
'introducer_id' => 'introducerId',
'related_to_citi_employee_flag' => 'relatedToCitiEmployeeFlag',
'related_citi_employee_name' => 'relatedCitiEmployeeName',
'related_citi_employee_department' => 'relatedCitiEmployeeDepartment',
'credit_card_usage_purpose' => 'creditCardUsagePurpose',
'cash_pin_flag' => 'cashPinFlag',
'referral_tracking' => 'referralTracking',
'utility_bill_details' => 'utilityBillDetails',
'fee_code' => 'feeCode',
'billing_cycle_day' => 'billingCycleDay',
'application_reference_id' => 'applicationReferenceId',
'customer_segment' => 'customerSegment',
'printing_serial_number' => 'printingSerialNumber',
'additional_information' => 'additionalInformation',
'trade_reference_details' => 'tradeReferenceDetails',
'bureau_session_id_' => 'bureauSessionId '    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_fund_source' => 'setAccountFundSource',
'number_of_dependents' => 'setNumberOfDependents',
'staff_indicator' => 'setStaffIndicator',
'business_nature' => 'setBusinessNature',
'emergency_contact_name' => 'setEmergencyContactName',
'emergency_contact_surname' => 'setEmergencyContactSurname',
'emergency_contact_relationship' => 'setEmergencyContactRelationship',
'emergency_contact_phone_number' => 'setEmergencyContactPhoneNumber',
'over_limit_consent_flag' => 'setOverLimitConsentFlag',
'country_specific_group' => 'setCountrySpecificGroup',
'primary_bank_details' => 'setPrimaryBankDetails',
'referral_given_name' => 'setReferralGivenName',
'referral_surname' => 'setReferralSurname',
'referral_code' => 'setReferralCode',
'media_id' => 'setMediaId',
'introducer_id' => 'setIntroducerId',
'related_to_citi_employee_flag' => 'setRelatedToCitiEmployeeFlag',
'related_citi_employee_name' => 'setRelatedCitiEmployeeName',
'related_citi_employee_department' => 'setRelatedCitiEmployeeDepartment',
'credit_card_usage_purpose' => 'setCreditCardUsagePurpose',
'cash_pin_flag' => 'setCashPinFlag',
'referral_tracking' => 'setReferralTracking',
'utility_bill_details' => 'setUtilityBillDetails',
'fee_code' => 'setFeeCode',
'billing_cycle_day' => 'setBillingCycleDay',
'application_reference_id' => 'setApplicationReferenceId',
'customer_segment' => 'setCustomerSegment',
'printing_serial_number' => 'setPrintingSerialNumber',
'additional_information' => 'setAdditionalInformation',
'trade_reference_details' => 'setTradeReferenceDetails',
'bureau_session_id_' => 'setBureauSessionId_'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_fund_source' => 'getAccountFundSource',
'number_of_dependents' => 'getNumberOfDependents',
'staff_indicator' => 'getStaffIndicator',
'business_nature' => 'getBusinessNature',
'emergency_contact_name' => 'getEmergencyContactName',
'emergency_contact_surname' => 'getEmergencyContactSurname',
'emergency_contact_relationship' => 'getEmergencyContactRelationship',
'emergency_contact_phone_number' => 'getEmergencyContactPhoneNumber',
'over_limit_consent_flag' => 'getOverLimitConsentFlag',
'country_specific_group' => 'getCountrySpecificGroup',
'primary_bank_details' => 'getPrimaryBankDetails',
'referral_given_name' => 'getReferralGivenName',
'referral_surname' => 'getReferralSurname',
'referral_code' => 'getReferralCode',
'media_id' => 'getMediaId',
'introducer_id' => 'getIntroducerId',
'related_to_citi_employee_flag' => 'getRelatedToCitiEmployeeFlag',
'related_citi_employee_name' => 'getRelatedCitiEmployeeName',
'related_citi_employee_department' => 'getRelatedCitiEmployeeDepartment',
'credit_card_usage_purpose' => 'getCreditCardUsagePurpose',
'cash_pin_flag' => 'getCashPinFlag',
'referral_tracking' => 'getReferralTracking',
'utility_bill_details' => 'getUtilityBillDetails',
'fee_code' => 'getFeeCode',
'billing_cycle_day' => 'getBillingCycleDay',
'application_reference_id' => 'getApplicationReferenceId',
'customer_segment' => 'getCustomerSegment',
'printing_serial_number' => 'getPrintingSerialNumber',
'additional_information' => 'getAdditionalInformation',
'trade_reference_details' => 'getTradeReferenceDetails',
'bureau_session_id_' => 'getBureauSessionId_'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_fund_source'] = isset($data['account_fund_source']) ? $data['account_fund_source'] : null;
        $this->container['number_of_dependents'] = isset($data['number_of_dependents']) ? $data['number_of_dependents'] : null;
        $this->container['staff_indicator'] = isset($data['staff_indicator']) ? $data['staff_indicator'] : null;
        $this->container['business_nature'] = isset($data['business_nature']) ? $data['business_nature'] : null;
        $this->container['emergency_contact_name'] = isset($data['emergency_contact_name']) ? $data['emergency_contact_name'] : null;
        $this->container['emergency_contact_surname'] = isset($data['emergency_contact_surname']) ? $data['emergency_contact_surname'] : null;
        $this->container['emergency_contact_relationship'] = isset($data['emergency_contact_relationship']) ? $data['emergency_contact_relationship'] : null;
        $this->container['emergency_contact_phone_number'] = isset($data['emergency_contact_phone_number']) ? $data['emergency_contact_phone_number'] : null;
        $this->container['over_limit_consent_flag'] = isset($data['over_limit_consent_flag']) ? $data['over_limit_consent_flag'] : null;
        $this->container['country_specific_group'] = isset($data['country_specific_group']) ? $data['country_specific_group'] : null;
        $this->container['primary_bank_details'] = isset($data['primary_bank_details']) ? $data['primary_bank_details'] : null;
        $this->container['referral_given_name'] = isset($data['referral_given_name']) ? $data['referral_given_name'] : null;
        $this->container['referral_surname'] = isset($data['referral_surname']) ? $data['referral_surname'] : null;
        $this->container['referral_code'] = isset($data['referral_code']) ? $data['referral_code'] : null;
        $this->container['media_id'] = isset($data['media_id']) ? $data['media_id'] : null;
        $this->container['introducer_id'] = isset($data['introducer_id']) ? $data['introducer_id'] : null;
        $this->container['related_to_citi_employee_flag'] = isset($data['related_to_citi_employee_flag']) ? $data['related_to_citi_employee_flag'] : null;
        $this->container['related_citi_employee_name'] = isset($data['related_citi_employee_name']) ? $data['related_citi_employee_name'] : null;
        $this->container['related_citi_employee_department'] = isset($data['related_citi_employee_department']) ? $data['related_citi_employee_department'] : null;
        $this->container['credit_card_usage_purpose'] = isset($data['credit_card_usage_purpose']) ? $data['credit_card_usage_purpose'] : null;
        $this->container['cash_pin_flag'] = isset($data['cash_pin_flag']) ? $data['cash_pin_flag'] : null;
        $this->container['referral_tracking'] = isset($data['referral_tracking']) ? $data['referral_tracking'] : null;
        $this->container['utility_bill_details'] = isset($data['utility_bill_details']) ? $data['utility_bill_details'] : null;
        $this->container['fee_code'] = isset($data['fee_code']) ? $data['fee_code'] : null;
        $this->container['billing_cycle_day'] = isset($data['billing_cycle_day']) ? $data['billing_cycle_day'] : null;
        $this->container['application_reference_id'] = isset($data['application_reference_id']) ? $data['application_reference_id'] : null;
        $this->container['customer_segment'] = isset($data['customer_segment']) ? $data['customer_segment'] : null;
        $this->container['printing_serial_number'] = isset($data['printing_serial_number']) ? $data['printing_serial_number'] : null;
        $this->container['additional_information'] = isset($data['additional_information']) ? $data['additional_information'] : null;
        $this->container['trade_reference_details'] = isset($data['trade_reference_details']) ? $data['trade_reference_details'] : null;
        $this->container['bureau_session_id_'] = isset($data['bureau_session_id_']) ? $data['bureau_session_id_'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_fund_source
     *
     * @return string
     */
    public function getAccountFundSource()
    {
        return $this->container['account_fund_source'];
    }

    /**
     * Sets account_fund_source
     *
     * @param string $account_fund_source This field is to indicates the primary source from which this account will be funded. This is a reference data field. Please use /v1/utilities/referenceData/{accountFundSource} resource to get valid value of this field with description.
     *
     * @return $this
     */
    public function setAccountFundSource($account_fund_source)
    {
        $this->container['account_fund_source'] = $account_fund_source;

        return $this;
    }

    /**
     * Gets number_of_dependents
     *
     * @return float
     */
    public function getNumberOfDependents()
    {
        return $this->container['number_of_dependents'];
    }

    /**
     * Sets number_of_dependents
     *
     * @param float $number_of_dependents Number of dependents
     *
     * @return $this
     */
    public function setNumberOfDependents($number_of_dependents)
    {
        $this->container['number_of_dependents'] = $number_of_dependents;

        return $this;
    }

    /**
     * Gets staff_indicator
     *
     * @return bool
     */
    public function getStaffIndicator()
    {
        return $this->container['staff_indicator'];
    }

    /**
     * Sets staff_indicator
     *
     * @param bool $staff_indicator Flag to indicates if applicant is a Citi Staff. Valid values: true and false
     *
     * @return $this
     */
    public function setStaffIndicator($staff_indicator)
    {
        $this->container['staff_indicator'] = $staff_indicator;

        return $this;
    }

    /**
     * Gets business_nature
     *
     * @return string
     */
    public function getBusinessNature()
    {
        return $this->container['business_nature'];
    }

    /**
     * Sets business_nature
     *
     * @param string $business_nature Business nature of the applicant This is a reference data field. Please use /v1/utilities/referenceData/{businessNature} resource to get valid value of this field with description.
     *
     * @return $this
     */
    public function setBusinessNature($business_nature)
    {
        $this->container['business_nature'] = $business_nature;

        return $this;
    }

    /**
     * Gets emergency_contact_name
     *
     * @return string
     */
    public function getEmergencyContactName()
    {
        return $this->container['emergency_contact_name'];
    }

    /**
     * Sets emergency_contact_name
     *
     * @param string $emergency_contact_name Emergency contact given name
     *
     * @return $this
     */
    public function setEmergencyContactName($emergency_contact_name)
    {
        $this->container['emergency_contact_name'] = $emergency_contact_name;

        return $this;
    }

    /**
     * Gets emergency_contact_surname
     *
     * @return string
     */
    public function getEmergencyContactSurname()
    {
        return $this->container['emergency_contact_surname'];
    }

    /**
     * Sets emergency_contact_surname
     *
     * @param string $emergency_contact_surname Emergency contact surname
     *
     * @return $this
     */
    public function setEmergencyContactSurname($emergency_contact_surname)
    {
        $this->container['emergency_contact_surname'] = $emergency_contact_surname;

        return $this;
    }

    /**
     * Gets emergency_contact_relationship
     *
     * @return string
     */
    public function getEmergencyContactRelationship()
    {
        return $this->container['emergency_contact_relationship'];
    }

    /**
     * Sets emergency_contact_relationship
     *
     * @param string $emergency_contact_relationship Applicant's relationship with the emergency contact.This is a reference data. Please use /v1/utilities/referenceData/{emergencyContactRelationship} resource to get valid value of this field
     *
     * @return $this
     */
    public function setEmergencyContactRelationship($emergency_contact_relationship)
    {
        $this->container['emergency_contact_relationship'] = $emergency_contact_relationship;

        return $this;
    }

    /**
     * Gets emergency_contact_phone_number
     *
     * @return string
     */
    public function getEmergencyContactPhoneNumber()
    {
        return $this->container['emergency_contact_phone_number'];
    }

    /**
     * Sets emergency_contact_phone_number
     *
     * @param string $emergency_contact_phone_number Emergency contact Number.
     *
     * @return $this
     */
    public function setEmergencyContactPhoneNumber($emergency_contact_phone_number)
    {
        $this->container['emergency_contact_phone_number'] = $emergency_contact_phone_number;

        return $this;
    }

    /**
     * Gets over_limit_consent_flag
     *
     * @return bool
     */
    public function getOverLimitConsentFlag()
    {
        return $this->container['over_limit_consent_flag'];
    }

    /**
     * Sets over_limit_consent_flag
     *
     * @param bool $over_limit_consent_flag Customer consent on spending more than the limit assigned to him. Valid values: true and false
     *
     * @return $this
     */
    public function setOverLimitConsentFlag($over_limit_consent_flag)
    {
        $this->container['over_limit_consent_flag'] = $over_limit_consent_flag;

        return $this;
    }

    /**
     * Gets country_specific_group
     *
     * @return \Swagger\Client\Model\CountrySpecificGroup
     */
    public function getCountrySpecificGroup()
    {
        return $this->container['country_specific_group'];
    }

    /**
     * Sets country_specific_group
     *
     * @param \Swagger\Client\Model\CountrySpecificGroup $country_specific_group country_specific_group
     *
     * @return $this
     */
    public function setCountrySpecificGroup($country_specific_group)
    {
        $this->container['country_specific_group'] = $country_specific_group;

        return $this;
    }

    /**
     * Gets primary_bank_details
     *
     * @return \Swagger\Client\Model\PrimaryBankDetails
     */
    public function getPrimaryBankDetails()
    {
        return $this->container['primary_bank_details'];
    }

    /**
     * Sets primary_bank_details
     *
     * @param \Swagger\Client\Model\PrimaryBankDetails $primary_bank_details primary_bank_details
     *
     * @return $this
     */
    public function setPrimaryBankDetails($primary_bank_details)
    {
        $this->container['primary_bank_details'] = $primary_bank_details;

        return $this;
    }

    /**
     * Gets referral_given_name
     *
     * @return string
     */
    public function getReferralGivenName()
    {
        return $this->container['referral_given_name'];
    }

    /**
     * Sets referral_given_name
     *
     * @param string $referral_given_name Referral First Name.
     *
     * @return $this
     */
    public function setReferralGivenName($referral_given_name)
    {
        $this->container['referral_given_name'] = $referral_given_name;

        return $this;
    }

    /**
     * Gets referral_surname
     *
     * @return string
     */
    public function getReferralSurname()
    {
        return $this->container['referral_surname'];
    }

    /**
     * Sets referral_surname
     *
     * @param string $referral_surname Referral Surname/Last Name.
     *
     * @return $this
     */
    public function setReferralSurname($referral_surname)
    {
        $this->container['referral_surname'] = $referral_surname;

        return $this;
    }

    /**
     * Gets referral_code
     *
     * @return string
     */
    public function getReferralCode()
    {
        return $this->container['referral_code'];
    }

    /**
     * Sets referral_code
     *
     * @param string $referral_code Referral Code used for the customer
     *
     * @return $this
     */
    public function setReferralCode($referral_code)
    {
        $this->container['referral_code'] = $referral_code;

        return $this;
    }

    /**
     * Gets media_id
     *
     * @return string
     */
    public function getMediaId()
    {
        return $this->container['media_id'];
    }

    /**
     * Sets media_id
     *
     * @param string $media_id The media ID will be used to determine which offer / campaign banner was clicked when the customer made his application
     *
     * @return $this
     */
    public function setMediaId($media_id)
    {
        $this->container['media_id'] = $media_id;

        return $this;
    }

    /**
     * Gets introducer_id
     *
     * @return string
     */
    public function getIntroducerId()
    {
        return $this->container['introducer_id'];
    }

    /**
     * Sets introducer_id
     *
     * @param string $introducer_id Unique identifier associated with the introducer who had referred the applicant.
     *
     * @return $this
     */
    public function setIntroducerId($introducer_id)
    {
        $this->container['introducer_id'] = $introducer_id;

        return $this;
    }

    /**
     * Gets related_to_citi_employee_flag
     *
     * @return bool
     */
    public function getRelatedToCitiEmployeeFlag()
    {
        return $this->container['related_to_citi_employee_flag'];
    }

    /**
     * Sets related_to_citi_employee_flag
     *
     * @param bool $related_to_citi_employee_flag Self declaration if applicant has any relation with citi bank employee. Valid values: true and false
     *
     * @return $this
     */
    public function setRelatedToCitiEmployeeFlag($related_to_citi_employee_flag)
    {
        $this->container['related_to_citi_employee_flag'] = $related_to_citi_employee_flag;

        return $this;
    }

    /**
     * Gets related_citi_employee_name
     *
     * @return string
     */
    public function getRelatedCitiEmployeeName()
    {
        return $this->container['related_citi_employee_name'];
    }

    /**
     * Sets related_citi_employee_name
     *
     * @param string $related_citi_employee_name Name of the citi employee if applicant has any relation with citi bank employee.
     *
     * @return $this
     */
    public function setRelatedCitiEmployeeName($related_citi_employee_name)
    {
        $this->container['related_citi_employee_name'] = $related_citi_employee_name;

        return $this;
    }

    /**
     * Gets related_citi_employee_department
     *
     * @return string
     */
    public function getRelatedCitiEmployeeDepartment()
    {
        return $this->container['related_citi_employee_department'];
    }

    /**
     * Sets related_citi_employee_department
     *
     * @param string $related_citi_employee_department Department of citi employee if applicant has any relation with citi bank employee.
     *
     * @return $this
     */
    public function setRelatedCitiEmployeeDepartment($related_citi_employee_department)
    {
        $this->container['related_citi_employee_department'] = $related_citi_employee_department;

        return $this;
    }

    /**
     * Gets credit_card_usage_purpose
     *
     * @return string
     */
    public function getCreditCardUsagePurpose()
    {
        return $this->container['credit_card_usage_purpose'];
    }

    /**
     * Sets credit_card_usage_purpose
     *
     * @param string $credit_card_usage_purpose Indicates applicants usage of credit card whether it is for personal or business.Please use /v1/utilities/referenceData/{creditCardUsagePurpose} resource to get valid value of this field with description.
     *
     * @return $this
     */
    public function setCreditCardUsagePurpose($credit_card_usage_purpose)
    {
        $this->container['credit_card_usage_purpose'] = $credit_card_usage_purpose;

        return $this;
    }

    /**
     * Gets cash_pin_flag
     *
     * @return bool
     */
    public function getCashPinFlag()
    {
        return $this->container['cash_pin_flag'];
    }

    /**
     * Sets cash_pin_flag
     *
     * @param bool $cash_pin_flag Indicates whether the customer wants a separate cash PIN.
     *
     * @return $this
     */
    public function setCashPinFlag($cash_pin_flag)
    {
        $this->container['cash_pin_flag'] = $cash_pin_flag;

        return $this;
    }

    /**
     * Gets referral_tracking
     *
     * @return \Swagger\Client\Model\ReferralTracking
     */
    public function getReferralTracking()
    {
        return $this->container['referral_tracking'];
    }

    /**
     * Sets referral_tracking
     *
     * @param \Swagger\Client\Model\ReferralTracking $referral_tracking referral_tracking
     *
     * @return $this
     */
    public function setReferralTracking($referral_tracking)
    {
        $this->container['referral_tracking'] = $referral_tracking;

        return $this;
    }

    /**
     * Gets utility_bill_details
     *
     * @return \Swagger\Client\Model\UtilityBillDetails
     */
    public function getUtilityBillDetails()
    {
        return $this->container['utility_bill_details'];
    }

    /**
     * Sets utility_bill_details
     *
     * @param \Swagger\Client\Model\UtilityBillDetails $utility_bill_details utility_bill_details
     *
     * @return $this
     */
    public function setUtilityBillDetails($utility_bill_details)
    {
        $this->container['utility_bill_details'] = $utility_bill_details;

        return $this;
    }

    /**
     * Gets fee_code
     *
     * @return string
     */
    public function getFeeCode()
    {
        return $this->container['fee_code'];
    }

    /**
     * Sets fee_code
     *
     * @param string $fee_code Fee code that applied to the requested product
     *
     * @return $this
     */
    public function setFeeCode($fee_code)
    {
        $this->container['fee_code'] = $fee_code;

        return $this;
    }

    /**
     * Gets billing_cycle_day
     *
     * @return string
     */
    public function getBillingCycleDay()
    {
        return $this->container['billing_cycle_day'];
    }

    /**
     * Sets billing_cycle_day
     *
     * @param string $billing_cycle_day Day of each month for the bill payment. This is a reference data field. Please use /v1/utilities/referenceData/{billingCycleDay} resource to get valid value of this field with description.
     *
     * @return $this
     */
    public function setBillingCycleDay($billing_cycle_day)
    {
        $this->container['billing_cycle_day'] = $billing_cycle_day;

        return $this;
    }

    /**
     * Gets application_reference_id
     *
     * @return string
     */
    public function getApplicationReferenceId()
    {
        return $this->container['application_reference_id'];
    }

    /**
     * Sets application_reference_id
     *
     * @param string $application_reference_id Unique reference ID associated with the application
     *
     * @return $this
     */
    public function setApplicationReferenceId($application_reference_id)
    {
        $this->container['application_reference_id'] = $application_reference_id;

        return $this;
    }

    /**
     * Gets customer_segment
     *
     * @return string
     */
    public function getCustomerSegment()
    {
        return $this->container['customer_segment'];
    }

    /**
     * Sets customer_segment
     *
     * @param string $customer_segment Customer segment decides each applicants interest rate  Different customer target will be subjected to different interest rate..This is a reference data field. Please use /v1/utilities/referenceData/{customerSegment} resource to get valid value of this field with description.
     *
     * @return $this
     */
    public function setCustomerSegment($customer_segment)
    {
        $this->container['customer_segment'] = $customer_segment;

        return $this;
    }

    /**
     * Gets printing_serial_number
     *
     * @return string
     */
    public function getPrintingSerialNumber()
    {
        return $this->container['printing_serial_number'];
    }

    /**
     * Sets printing_serial_number
     *
     * @param string $printing_serial_number This field refers to the unique number for each application to be identified by COLA and printed in PDF form.It enables to identify the customer in case the customer could not complete filling his/her details and was dropped-off in between
     *
     * @return $this
     */
    public function setPrintingSerialNumber($printing_serial_number)
    {
        $this->container['printing_serial_number'] = $printing_serial_number;

        return $this;
    }

    /**
     * Gets additional_information
     *
     * @return string
     */
    public function getAdditionalInformation()
    {
        return $this->container['additional_information'];
    }

    /**
     * Sets additional_information
     *
     * @param string $additional_information This field refers to the additional comments given by the customer which is to be noted-down during the application process.
     *
     * @return $this
     */
    public function setAdditionalInformation($additional_information)
    {
        $this->container['additional_information'] = $additional_information;

        return $this;
    }

    /**
     * Gets trade_reference_details
     *
     * @return \Swagger\Client\Model\TradeReferenceDetails
     */
    public function getTradeReferenceDetails()
    {
        return $this->container['trade_reference_details'];
    }

    /**
     * Sets trade_reference_details
     *
     * @param \Swagger\Client\Model\TradeReferenceDetails $trade_reference_details trade_reference_details
     *
     * @return $this
     */
    public function setTradeReferenceDetails($trade_reference_details)
    {
        $this->container['trade_reference_details'] = $trade_reference_details;

        return $this;
    }

    /**
     * Gets bureau_session_id_
     *
     * @return string
     */
    public function getBureauSessionId_()
    {
        return $this->container['bureau_session_id_'];
    }

    /**
     * Sets bureau_session_id_
     *
     * @param string $bureau_session_id_ Session ID that is generated from the session / interaction of channel with bureau.
     *
     * @return $this
     */
    public function setBureauSessionId_($bureau_session_id_)
    {
        $this->container['bureau_session_id_'] = $bureau_session_id_;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
