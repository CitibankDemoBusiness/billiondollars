<?php
/**
 * CreditSpecificSelection
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Onboarding
 *
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.29
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * CreditSpecificSelection Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CreditSpecificSelection implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CreditSpecificSelection';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'request_credit_shield' => 'bool',
'emboss_name' => 'string',
'billing_address' => 'string',
'card_delivery_address' => 'string',
'pin_delivery_address' => 'string',
'requested_credit_limit' => 'double',
'offered_credit_limit_accepted_flag' => 'bool',
'atm_required_flag' => 'bool',
'cheque_book_required_flag' => 'bool',
'credit_limit_increase_indicator' => 'bool'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'request_credit_shield' => null,
'emboss_name' => null,
'billing_address' => null,
'card_delivery_address' => null,
'pin_delivery_address' => null,
'requested_credit_limit' => 'double',
'offered_credit_limit_accepted_flag' => null,
'atm_required_flag' => null,
'cheque_book_required_flag' => null,
'credit_limit_increase_indicator' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'request_credit_shield' => 'requestCreditShield',
'emboss_name' => 'embossName',
'billing_address' => 'billingAddress',
'card_delivery_address' => 'cardDeliveryAddress',
'pin_delivery_address' => 'pinDeliveryAddress',
'requested_credit_limit' => 'requestedCreditLimit',
'offered_credit_limit_accepted_flag' => 'offeredCreditLimitAcceptedFlag',
'atm_required_flag' => 'atmRequiredFlag',
'cheque_book_required_flag' => 'chequeBookRequiredFlag',
'credit_limit_increase_indicator' => 'creditLimitIncreaseIndicator'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'request_credit_shield' => 'setRequestCreditShield',
'emboss_name' => 'setEmbossName',
'billing_address' => 'setBillingAddress',
'card_delivery_address' => 'setCardDeliveryAddress',
'pin_delivery_address' => 'setPinDeliveryAddress',
'requested_credit_limit' => 'setRequestedCreditLimit',
'offered_credit_limit_accepted_flag' => 'setOfferedCreditLimitAcceptedFlag',
'atm_required_flag' => 'setAtmRequiredFlag',
'cheque_book_required_flag' => 'setChequeBookRequiredFlag',
'credit_limit_increase_indicator' => 'setCreditLimitIncreaseIndicator'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'request_credit_shield' => 'getRequestCreditShield',
'emboss_name' => 'getEmbossName',
'billing_address' => 'getBillingAddress',
'card_delivery_address' => 'getCardDeliveryAddress',
'pin_delivery_address' => 'getPinDeliveryAddress',
'requested_credit_limit' => 'getRequestedCreditLimit',
'offered_credit_limit_accepted_flag' => 'getOfferedCreditLimitAcceptedFlag',
'atm_required_flag' => 'getAtmRequiredFlag',
'cheque_book_required_flag' => 'getChequeBookRequiredFlag',
'credit_limit_increase_indicator' => 'getCreditLimitIncreaseIndicator'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['request_credit_shield'] = isset($data['request_credit_shield']) ? $data['request_credit_shield'] : null;
        $this->container['emboss_name'] = isset($data['emboss_name']) ? $data['emboss_name'] : null;
        $this->container['billing_address'] = isset($data['billing_address']) ? $data['billing_address'] : null;
        $this->container['card_delivery_address'] = isset($data['card_delivery_address']) ? $data['card_delivery_address'] : null;
        $this->container['pin_delivery_address'] = isset($data['pin_delivery_address']) ? $data['pin_delivery_address'] : null;
        $this->container['requested_credit_limit'] = isset($data['requested_credit_limit']) ? $data['requested_credit_limit'] : null;
        $this->container['offered_credit_limit_accepted_flag'] = isset($data['offered_credit_limit_accepted_flag']) ? $data['offered_credit_limit_accepted_flag'] : null;
        $this->container['atm_required_flag'] = isset($data['atm_required_flag']) ? $data['atm_required_flag'] : null;
        $this->container['cheque_book_required_flag'] = isset($data['cheque_book_required_flag']) ? $data['cheque_book_required_flag'] : null;
        $this->container['credit_limit_increase_indicator'] = isset($data['credit_limit_increase_indicator']) ? $data['credit_limit_increase_indicator'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets request_credit_shield
     *
     * @return bool
     */
    public function getRequestCreditShield()
    {
        return $this->container['request_credit_shield'];
    }

    /**
     * Sets request_credit_shield
     *
     * @param bool $request_credit_shield Insurance enrolment for outstanding balance on the card. Valid values: true and false
     *
     * @return $this
     */
    public function setRequestCreditShield($request_credit_shield)
    {
        $this->container['request_credit_shield'] = $request_credit_shield;

        return $this;
    }

    /**
     * Gets emboss_name
     *
     * @return string
     */
    public function getEmbossName()
    {
        return $this->container['emboss_name'];
    }

    /**
     * Sets emboss_name
     *
     * @param string $emboss_name Name to be embossed on card
     *
     * @return $this
     */
    public function setEmbossName($emboss_name)
    {
        $this->container['emboss_name'] = $emboss_name;

        return $this;
    }

    /**
     * Gets billing_address
     *
     * @return string
     */
    public function getBillingAddress()
    {
        return $this->container['billing_address'];
    }

    /**
     * Sets billing_address
     *
     * @param string $billing_address Billing address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use billingAddress field as the referenceCode parameter to retrieve the values.
     *
     * @return $this
     */
    public function setBillingAddress($billing_address)
    {
        $this->container['billing_address'] = $billing_address;

        return $this;
    }

    /**
     * Gets card_delivery_address
     *
     * @return string
     */
    public function getCardDeliveryAddress()
    {
        return $this->container['card_delivery_address'];
    }

    /**
     * Sets card_delivery_address
     *
     * @param string $card_delivery_address Card delivery address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use cardDeliveryAddress field name as the referenceCode parameter to retrieve the values.
     *
     * @return $this
     */
    public function setCardDeliveryAddress($card_delivery_address)
    {
        $this->container['card_delivery_address'] = $card_delivery_address;

        return $this;
    }

    /**
     * Gets pin_delivery_address
     *
     * @return string
     */
    public function getPinDeliveryAddress()
    {
        return $this->container['pin_delivery_address'];
    }

    /**
     * Sets pin_delivery_address
     *
     * @param string $pin_delivery_address Delivery address  for card pin of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid values of this field with descriptions. You can use pinDeliveryAddress field name as the referenceCode parameter to retrieve the values.
     *
     * @return $this
     */
    public function setPinDeliveryAddress($pin_delivery_address)
    {
        $this->container['pin_delivery_address'] = $pin_delivery_address;

        return $this;
    }

    /**
     * Gets requested_credit_limit
     *
     * @return double
     */
    public function getRequestedCreditLimit()
    {
        return $this->container['requested_credit_limit'];
    }

    /**
     * Sets requested_credit_limit
     *
     * @param double $requested_credit_limit Credit limit accepted by customer
     *
     * @return $this
     */
    public function setRequestedCreditLimit($requested_credit_limit)
    {
        $this->container['requested_credit_limit'] = $requested_credit_limit;

        return $this;
    }

    /**
     * Gets offered_credit_limit_accepted_flag
     *
     * @return bool
     */
    public function getOfferedCreditLimitAcceptedFlag()
    {
        return $this->container['offered_credit_limit_accepted_flag'];
    }

    /**
     * Sets offered_credit_limit_accepted_flag
     *
     * @param bool $offered_credit_limit_accepted_flag Consent to offered credit limit and If the customer has not accepted Bankâ€™s approved credit limit then requestedCreditLimit is mandatory. Valid values: true and false
     *
     * @return $this
     */
    public function setOfferedCreditLimitAcceptedFlag($offered_credit_limit_accepted_flag)
    {
        $this->container['offered_credit_limit_accepted_flag'] = $offered_credit_limit_accepted_flag;

        return $this;
    }

    /**
     * Gets atm_required_flag
     *
     * @return bool
     */
    public function getAtmRequiredFlag()
    {
        return $this->container['atm_required_flag'];
    }

    /**
     * Sets atm_required_flag
     *
     * @param bool $atm_required_flag Option to get ATM card along with product. Valid values: true and false
     *
     * @return $this
     */
    public function setAtmRequiredFlag($atm_required_flag)
    {
        $this->container['atm_required_flag'] = $atm_required_flag;

        return $this;
    }

    /**
     * Gets cheque_book_required_flag
     *
     * @return bool
     */
    public function getChequeBookRequiredFlag()
    {
        return $this->container['cheque_book_required_flag'];
    }

    /**
     * Sets cheque_book_required_flag
     *
     * @param bool $cheque_book_required_flag Option to get cheque book along with product. Valid values: true and false
     *
     * @return $this
     */
    public function setChequeBookRequiredFlag($cheque_book_required_flag)
    {
        $this->container['cheque_book_required_flag'] = $cheque_book_required_flag;

        return $this;
    }

    /**
     * Gets credit_limit_increase_indicator
     *
     * @return bool
     */
    public function getCreditLimitIncreaseIndicator()
    {
        return $this->container['credit_limit_increase_indicator'];
    }

    /**
     * Sets credit_limit_increase_indicator
     *
     * @param bool $credit_limit_increase_indicator Option  to increase credit limit. Valid values: true and false
     *
     * @return $this
     */
    public function setCreditLimitIncreaseIndicator($credit_limit_increase_indicator)
    {
        $this->container['credit_limit_increase_indicator'] = $credit_limit_increase_indicator;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
