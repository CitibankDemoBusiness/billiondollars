/* 
 * Onboarding
 *
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OnboardingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OnboardingApiTests
    {
        private OnboardingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OnboardingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OnboardingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OnboardingApi
            //Assert.IsInstanceOfType(typeof(OnboardingApi), instance, "instance is a OnboardingApi");
        }

        /// <summary>
        /// Test ApplicantSalaryAndContributionsUpload
        /// </summary>
        [Test]
        public void ApplicantSalaryAndContributionsUploadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicantSalaryAndContributionsUploadRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string clientDetails = null;
            //instance.ApplicantSalaryAndContributionsUpload(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);
            
        }
        /// <summary>
        /// Test PresetAtmPinAdd
        /// </summary>
        [Test]
        public void PresetAtmPinAddTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PresetAtmPinAddRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string clientDetails = null;
            //instance.PresetAtmPinAdd(body, authorization, uuid, accept, clientId, contentType, clientDetails);
            
        }
        /// <summary>
        /// Test PresetAtmPinAddConfirmation
        /// </summary>
        [Test]
        public void PresetAtmPinAddConfirmationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PresetAtmPinAddConfirmationRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string clientDetails = null;
            //instance.PresetAtmPinAddConfirmation(body, authorization, uuid, accept, clientId, contentType, clientDetails);
            
        }
        /// <summary>
        /// Test UnsecuredApplicationGenerateAndSendOTP
        /// </summary>
        [Test]
        public void UnsecuredApplicationGenerateAndSendOTPTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UnsecuredApplicationGenerateAndSendOtpRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string clientDetails = null;
            //var response = instance.UnsecuredApplicationGenerateAndSendOTP(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);
            //Assert.IsInstanceOf<UnsecuredApplicationGenerateAndSendOtpResponse> (response, "response is UnsecuredApplicationGenerateAndSendOtpResponse");
        }
        /// <summary>
        /// Test UnsecuredApplicationValidateOtp
        /// </summary>
        [Test]
        public void UnsecuredApplicationValidateOtpTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UnsecuredApplicationValidateOtpRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string clientDetails = null;
            //instance.UnsecuredApplicationValidateOtp(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);
            
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdKnowledgeBasedAssessmentsPost
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdKnowledgeBasedAssessmentsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KbaSubmissionRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string clientDetails = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdKnowledgeBasedAssessmentsPost(body, authorization, uuid, accept, clientId, contentType, applicationId, clientDetails);
            //Assert.IsInstanceOf<KbaSubmissionResponse> (response, "response is KbaSubmissionResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdKnowledgeBasedAssessmentsQuestionnaireGet
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdKnowledgeBasedAssessmentsQuestionnaireGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string applicationId = null;
            //string controlFlowId = null;
            //string clientDetails = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdKnowledgeBasedAssessmentsQuestionnaireGet(authorization, uuid, accept, clientId, applicationId, controlFlowId, clientDetails);
            //Assert.IsInstanceOf<KbaQuestionnaireResponse> (response, "response is KbaQuestionnaireResponse");
        }
    }

}
