/* 
 * Onboarding
 *
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ApplicationUpdateUnsecuredLoanProduct
    /// </summary>
    [DataContract]
        public partial class ApplicationUpdateUnsecuredLoanProduct :  IEquatable<ApplicationUpdateUnsecuredLoanProduct>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationUpdateUnsecuredLoanProduct" /> class.
        /// </summary>
        /// <param name="productCode">A unique code that identifies the product.</param>
        /// <param name="sourceCode">A source code to identify the product.</param>
        /// <param name="organization">Card issuing Organisation code.</param>
        /// <param name="logo">Product logo to identify the product.</param>
        /// <param name="requestCreditShield">Insurance enrolment for outstanding balance on the card. Valid values: true and false.</param>
        /// <param name="billingAddress">Billing address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use addressType field name as the referenceCode parameter to retrieve the values..</param>
        /// <param name="giftCode">A  unique code that identifies the gift offered along with the product.</param>
        /// <param name="requestedLoanAmount">Requested loan amount.</param>
        /// <param name="tenor">Tenure of loan. This is a reference data field. Please use /v1/apac/utilities/referenceData/{tenor} resource to get valid value of this field with description. You can use tenor field name as the referenceCode parameter to retrieve the values..</param>
        public ApplicationUpdateUnsecuredLoanProduct(string productCode = default(string), string sourceCode = default(string), string organization = default(string), string logo = default(string), bool? requestCreditShield = default(bool?), string billingAddress = default(string), string giftCode = default(string), double? requestedLoanAmount = default(double?), string tenor = default(string))
        {
            this.ProductCode = productCode;
            this.SourceCode = sourceCode;
            this.Organization = organization;
            this.Logo = logo;
            this.RequestCreditShield = requestCreditShield;
            this.BillingAddress = billingAddress;
            this.GiftCode = giftCode;
            this.RequestedLoanAmount = requestedLoanAmount;
            this.Tenor = tenor;
        }
        
        /// <summary>
        /// A unique code that identifies the product
        /// </summary>
        /// <value>A unique code that identifies the product</value>
        [DataMember(Name="productCode", EmitDefaultValue=false)]
        public string ProductCode { get; set; }

        /// <summary>
        /// A source code to identify the product
        /// </summary>
        /// <value>A source code to identify the product</value>
        [DataMember(Name="sourceCode", EmitDefaultValue=false)]
        public string SourceCode { get; set; }

        /// <summary>
        /// Card issuing Organisation code
        /// </summary>
        /// <value>Card issuing Organisation code</value>
        [DataMember(Name="organization", EmitDefaultValue=false)]
        public string Organization { get; set; }

        /// <summary>
        /// Product logo to identify the product
        /// </summary>
        /// <value>Product logo to identify the product</value>
        [DataMember(Name="logo", EmitDefaultValue=false)]
        public string Logo { get; set; }

        /// <summary>
        /// Insurance enrolment for outstanding balance on the card. Valid values: true and false
        /// </summary>
        /// <value>Insurance enrolment for outstanding balance on the card. Valid values: true and false</value>
        [DataMember(Name="requestCreditShield", EmitDefaultValue=false)]
        public bool? RequestCreditShield { get; set; }

        /// <summary>
        /// Billing address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use addressType field name as the referenceCode parameter to retrieve the values.
        /// </summary>
        /// <value>Billing address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use addressType field name as the referenceCode parameter to retrieve the values.</value>
        [DataMember(Name="billingAddress", EmitDefaultValue=false)]
        public string BillingAddress { get; set; }

        /// <summary>
        /// A  unique code that identifies the gift offered along with the product
        /// </summary>
        /// <value>A  unique code that identifies the gift offered along with the product</value>
        [DataMember(Name="giftCode", EmitDefaultValue=false)]
        public string GiftCode { get; set; }

        /// <summary>
        /// Requested loan amount
        /// </summary>
        /// <value>Requested loan amount</value>
        [DataMember(Name="requestedLoanAmount", EmitDefaultValue=false)]
        public double? RequestedLoanAmount { get; set; }

        /// <summary>
        /// Tenure of loan. This is a reference data field. Please use /v1/apac/utilities/referenceData/{tenor} resource to get valid value of this field with description. You can use tenor field name as the referenceCode parameter to retrieve the values.
        /// </summary>
        /// <value>Tenure of loan. This is a reference data field. Please use /v1/apac/utilities/referenceData/{tenor} resource to get valid value of this field with description. You can use tenor field name as the referenceCode parameter to retrieve the values.</value>
        [DataMember(Name="tenor", EmitDefaultValue=false)]
        public string Tenor { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApplicationUpdateUnsecuredLoanProduct {\n");
            sb.Append("  ProductCode: ").Append(ProductCode).Append("\n");
            sb.Append("  SourceCode: ").Append(SourceCode).Append("\n");
            sb.Append("  Organization: ").Append(Organization).Append("\n");
            sb.Append("  Logo: ").Append(Logo).Append("\n");
            sb.Append("  RequestCreditShield: ").Append(RequestCreditShield).Append("\n");
            sb.Append("  BillingAddress: ").Append(BillingAddress).Append("\n");
            sb.Append("  GiftCode: ").Append(GiftCode).Append("\n");
            sb.Append("  RequestedLoanAmount: ").Append(RequestedLoanAmount).Append("\n");
            sb.Append("  Tenor: ").Append(Tenor).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApplicationUpdateUnsecuredLoanProduct);
        }

        /// <summary>
        /// Returns true if ApplicationUpdateUnsecuredLoanProduct instances are equal
        /// </summary>
        /// <param name="input">Instance of ApplicationUpdateUnsecuredLoanProduct to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApplicationUpdateUnsecuredLoanProduct input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ProductCode == input.ProductCode ||
                    (this.ProductCode != null &&
                    this.ProductCode.Equals(input.ProductCode))
                ) && 
                (
                    this.SourceCode == input.SourceCode ||
                    (this.SourceCode != null &&
                    this.SourceCode.Equals(input.SourceCode))
                ) && 
                (
                    this.Organization == input.Organization ||
                    (this.Organization != null &&
                    this.Organization.Equals(input.Organization))
                ) && 
                (
                    this.Logo == input.Logo ||
                    (this.Logo != null &&
                    this.Logo.Equals(input.Logo))
                ) && 
                (
                    this.RequestCreditShield == input.RequestCreditShield ||
                    (this.RequestCreditShield != null &&
                    this.RequestCreditShield.Equals(input.RequestCreditShield))
                ) && 
                (
                    this.BillingAddress == input.BillingAddress ||
                    (this.BillingAddress != null &&
                    this.BillingAddress.Equals(input.BillingAddress))
                ) && 
                (
                    this.GiftCode == input.GiftCode ||
                    (this.GiftCode != null &&
                    this.GiftCode.Equals(input.GiftCode))
                ) && 
                (
                    this.RequestedLoanAmount == input.RequestedLoanAmount ||
                    (this.RequestedLoanAmount != null &&
                    this.RequestedLoanAmount.Equals(input.RequestedLoanAmount))
                ) && 
                (
                    this.Tenor == input.Tenor ||
                    (this.Tenor != null &&
                    this.Tenor.Equals(input.Tenor))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ProductCode != null)
                    hashCode = hashCode * 59 + this.ProductCode.GetHashCode();
                if (this.SourceCode != null)
                    hashCode = hashCode * 59 + this.SourceCode.GetHashCode();
                if (this.Organization != null)
                    hashCode = hashCode * 59 + this.Organization.GetHashCode();
                if (this.Logo != null)
                    hashCode = hashCode * 59 + this.Logo.GetHashCode();
                if (this.RequestCreditShield != null)
                    hashCode = hashCode * 59 + this.RequestCreditShield.GetHashCode();
                if (this.BillingAddress != null)
                    hashCode = hashCode * 59 + this.BillingAddress.GetHashCode();
                if (this.GiftCode != null)
                    hashCode = hashCode * 59 + this.GiftCode.GetHashCode();
                if (this.RequestedLoanAmount != null)
                    hashCode = hashCode * 59 + this.RequestedLoanAmount.GetHashCode();
                if (this.Tenor != null)
                    hashCode = hashCode * 59 + this.Tenor.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
