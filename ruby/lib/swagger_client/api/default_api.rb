=begin
#Onboarding

#The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

module SwaggerClient
  class DefaultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Upload Application Documents
    # This API allows the applicant to upload the documents online to the specified application. Required documents such as drivers license and banking statements will be returned in the application decision.
    # @param body Insert the documents in documentum.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id The unique identifier of the application.
    # @param [Hash] opts the optional parameters
    # @return [InsertDocumentResponse]
    def v1_apac_onboarding_applications_application_id_documents_post(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_applications_application_id_documents_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts)
      data
    end

    # Upload Application Documents
    # This API allows the applicant to upload the documents online to the specified application. Required documents such as drivers license and banking statements will be returned in the application decision.
    # @param body Insert the documents in documentum.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id The unique identifier of the application.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InsertDocumentResponse, Integer, Hash)>] InsertDocumentResponse data, response status code and response headers
    def v1_apac_onboarding_applications_application_id_documents_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_applications_application_id_documents_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_applications_application_id_documents_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_applications_application_id_documents_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_applications_application_id_documents_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_applications_application_id_documents_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_applications_application_id_documents_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_applications_application_id_documents_post"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_applications_application_id_documents_post"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/applications/{applicationId}/documents'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'InsertDocumentResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_applications_application_id_documents_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Supp Applicant Delete
    # Allows primary card holder to delete the supplementary card application.
    # @param body Add applicant details to the application
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Types that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param applicant_id Unique ID created for an Applicant..
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put(body, authorization, uuid, accept, client_id, content_type, application_id, applicant_id, opts = {})
      v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, applicant_id, opts)
      nil
    end

    # Supp Applicant Delete
    # Allows primary card holder to delete the supplementary card application.
    # @param body Add applicant details to the application
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Types that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param applicant_id Unique ID created for an Applicant..
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, applicant_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put"
      end
      # verify the required parameter 'applicant_id' is set
      if @api_client.config.client_side_validation && applicant_id.nil?
        fail ArgumentError, "Missing the required parameter 'applicant_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/applicants/{applicantId}/delete'.sub('{' + 'applicationId' + '}', application_id.to_s).sub('{' + 'applicantId' + '}', applicant_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Supp Applicant Update
    # Allows primary card holder to edit or update the supplementary card application details.
    # @param body Add applicant details to the application
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Types that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param applicant_id Unique ID created for an Applicant. This is retuned back in ApplicantAdd response and the same should be passed here.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put(body, authorization, uuid, accept, client_id, content_type, application_id, applicant_id, opts = {})
      v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, applicant_id, opts)
      nil
    end

    # Supp Applicant Update
    # Allows primary card holder to edit or update the supplementary card application details.
    # @param body Add applicant details to the application
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Types that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param applicant_id Unique ID created for an Applicant. This is retuned back in ApplicantAdd response and the same should be passed here.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, applicant_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put"
      end
      # verify the required parameter 'applicant_id' is set
      if @api_client.config.client_side_validation && applicant_id.nil?
        fail ArgumentError, "Missing the required parameter 'applicant_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/applicants/{applicantId}'.sub('{' + 'applicationId' + '}', application_id.to_s).sub('{' + 'applicantId' + '}', applicant_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Supp Applicant Inquiry
    # This API returns supplementary application details for the specific supplementary application id.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Types that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param control_flow_id It is used to control the flow for subsequent requests in the session.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :applicant_id Unique ID created for an Applicant. This is retuned back in ApplicantAdd response and the same should be passed here.
    # @return [ApplicantInquiryResponse]
    def v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get(authorization, uuid, accept, client_id, application_id, control_flow_id, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get_with_http_info(authorization, uuid, accept, client_id, application_id, control_flow_id, opts)
      data
    end

    # Supp Applicant Inquiry
    # This API returns supplementary application details for the specific supplementary application id.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Types that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param control_flow_id It is used to control the flow for subsequent requests in the session.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :applicant_id Unique ID created for an Applicant. This is retuned back in ApplicantAdd response and the same should be passed here.
    # @return [Array<(ApplicantInquiryResponse, Integer, Hash)>] ApplicantInquiryResponse data, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get_with_http_info(authorization, uuid, accept, client_id, application_id, control_flow_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get"
      end
      # verify the required parameter 'control_flow_id' is set
      if @api_client.config.client_side_validation && control_flow_id.nil?
        fail ArgumentError, "Missing the required parameter 'control_flow_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/applicants'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'controlFlowId'] = control_flow_id
      query_params[:'applicantId'] = opts[:'applicant_id'] if !opts[:'applicant_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'ApplicantInquiryResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Supp Applicant Add
    # This API creates a new supplementary card application along with primary card application.
    # @param body Add applicant details to the application
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Types that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param [Hash] opts the optional parameters
    # @return [ApplicantAddResponse]
    def v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts)
      data
    end

    # Supp Applicant Add
    # This API creates a new supplementary card application along with primary card application.
    # @param body Add applicant details to the application
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Types that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ApplicantAddResponse, Integer, Hash)>] ApplicantAddResponse data, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/applicants'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ApplicantAddResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Screen Unsecured Credit Application
    # This API submits the specified unsecured credit application for screening.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id The unique identifier of the application
    # @param [Hash] opts the optional parameters
    # @return [BackgroundScreeningResponse]
    def v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts)
      data
    end

    # Screen Unsecured Credit Application
    # This API submits the specified unsecured credit application for screening.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id The unique identifier of the application
    # @param [Hash] opts the optional parameters
    # @return [Array<(BackgroundScreeningResponse, Integer, Hash)>] BackgroundScreeningResponse data, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/backgroundScreening'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'BackgroundScreeningResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Application Inquiry
    # This API returns the application details and status for a specific application id after a successful Multi Factor Authentication.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param application_id Unique identifier for the application.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :control_flow_id Control flow id is used to control the flow for subsequent requests in the session.
    # @return [ApplicationInquiryResponse]
    def v1_apac_onboarding_products_unsecured_applications_application_id_get(authorization, uuid, accept, client_id, application_id, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_products_unsecured_applications_application_id_get_with_http_info(authorization, uuid, accept, client_id, application_id, opts)
      data
    end

    # Application Inquiry
    # This API returns the application details and status for a specific application id after a successful Multi Factor Authentication.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param application_id Unique identifier for the application.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :control_flow_id Control flow id is used to control the flow for subsequent requests in the session.
    # @return [Array<(ApplicationInquiryResponse, Integer, Hash)>] ApplicationInquiryResponse data, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_get_with_http_info(authorization, uuid, accept, client_id, application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_get"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_get"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'controlFlowId'] = opts[:'control_flow_id'] if !opts[:'control_flow_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'ApplicationInquiryResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Request Credit Application Decision
    # This API returns the results of a decision inquiry for an application, including credit limit, counter-product offers and cross-sell offers along with the list of required documents.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id the ID of the application
    # @param [Hash] opts the optional parameters
    # @return [InPrincipleApprovalResponse]
    def v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts)
      data
    end

    # Request Credit Application Decision
    # This API returns the results of a decision inquiry for an application, including credit limit, counter-product offers and cross-sell offers along with the list of required documents.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id the ID of the application
    # @param [Hash] opts the optional parameters
    # @return [Array<(InPrincipleApprovalResponse, Integer, Hash)>] InPrincipleApprovalResponse data, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/inPrincipleApprovals'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'InPrincipleApprovalResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Accept Cross Sell Products
    # This API accepts specified cross-sell product offers that were returned in the application decision.
    # @param body Input Data to accept the product offered in the application.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id the ID of the application
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts)
      nil
    end

    # Accept Cross Sell Products
    # This API accepts specified cross-sell product offers that were returned in the application decision.
    # @param body Input Data to accept the product offered in the application.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id the ID of the application
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/offerAcceptance'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update Unsecured Credit Application
    # This API updates a saved application to correct information that was previously blank.
    # @param body Input Data to submit the application.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param [Hash] opts the optional parameters
    # @return [ApplicationUpdateResponse]
    def v1_apac_onboarding_products_unsecured_applications_application_id_put(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_products_unsecured_applications_application_id_put_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts)
      data
    end

    # Update Unsecured Credit Application
    # This API updates a saved application to correct information that was previously blank.
    # @param body Input Data to submit the application.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ApplicationUpdateResponse, Integer, Hash)>] ApplicationUpdateResponse data, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_put_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_put ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_put"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_put"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_put"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_put"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_put"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_put"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_put"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ApplicationUpdateResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Check Application Status
    # This API returns the status for a specified submitted application and takes the application id as parameter.
    # @param application_id the ID of the application
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param control_flow_id Control Flow Id
    # @param [Hash] opts the optional parameters
    # @return [ApplicationStatusResponse]
    def v1_apac_onboarding_products_unsecured_applications_application_id_status_get(application_id, authorization, uuid, accept, client_id, control_flow_id, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_products_unsecured_applications_application_id_status_get_with_http_info(application_id, authorization, uuid, accept, client_id, control_flow_id, opts)
      data
    end

    # Check Application Status
    # This API returns the status for a specified submitted application and takes the application id as parameter.
    # @param application_id the ID of the application
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param control_flow_id Control Flow Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(ApplicationStatusResponse, Integer, Hash)>] ApplicationStatusResponse data, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_status_get_with_http_info(application_id, authorization, uuid, accept, client_id, control_flow_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_status_get ...'
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_status_get"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_status_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_status_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_status_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_status_get"
      end
      # verify the required parameter 'control_flow_id' is set
      if @api_client.config.client_side_validation && control_flow_id.nil?
        fail ArgumentError, "Missing the required parameter 'control_flow_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_status_get"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/status'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'controlFlowId'] = control_flow_id

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'ApplicationStatusResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_status_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Submit Application
    # This API submits the created application to host systems for a particular application id.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id The unique identifier of the application.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v1_apac_onboarding_products_unsecured_applications_application_id_submission_post(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      v1_apac_onboarding_products_unsecured_applications_application_id_submission_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts)
      nil
    end

    # Submit Application
    # This API submits the created application to host systems for a particular application id.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param application_id The unique identifier of the application.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_application_id_submission_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, application_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_submission_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_submission_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_submission_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_submission_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_submission_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_submission_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_submission_post"
      end
      # verify the required parameter 'application_id' is set
      if @api_client.config.client_side_validation && application_id.nil?
        fail ArgumentError, "Missing the required parameter 'application_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_application_id_submission_post"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications/{applicationId}/submission'.sub('{' + 'applicationId' + '}', application_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_application_id_submission_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create Unsecured Credit Application
    # This API pre-populates an application for card and banking products with the applicant's details. The API will then return an application id that can be used to perform actions on the application and check status.
    # @param body Input Data to submit the application.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response
    # @return [ApplicationAddResponse]
    def v1_apac_onboarding_products_unsecured_applications_post(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_products_unsecured_applications_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # Create Unsecured Credit Application
    # This API pre-populates an application for card and banking products with the applicant&#x27;s details. The API will then return an application id that can be used to perform actions on the application and check status.
    # @param body Input Data to submit the application.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :accept_language List of acceptable human languages for response
    # @return [Array<(ApplicationAddResponse, Integer, Hash)>] ApplicationAddResponse data, response status code and response headers
    def v1_apac_onboarding_products_unsecured_applications_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_products_unsecured_applications_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_products_unsecured_applications_post"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/products/unsecured/applications'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept-Language'] = opts[:'accept_language'] if !opts[:'accept_language'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ApplicationAddResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_products_unsecured_applications_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Submit Prospect
    # This API is used to create a new prospect or a potential customer for the bank. Returns a prospect id that can be used for reach out and conversions to applications.
    # @param body Prospect Add Request
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @return [ProspectAddResponse]
    def v1_apac_onboarding_prospects_post(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = v1_apac_onboarding_prospects_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # Submit Prospect
    # This API is used to create a new prospect or a potential customer for the bank. Returns a prospect id that can be used for reach out and conversions to applications.
    # @param body Prospect Add Request
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @return [Array<(ProspectAddResponse, Integer, Hash)>] ProspectAddResponse data, response status code and response headers
    def v1_apac_onboarding_prospects_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.v1_apac_onboarding_prospects_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DefaultApi.v1_apac_onboarding_prospects_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling DefaultApi.v1_apac_onboarding_prospects_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling DefaultApi.v1_apac_onboarding_prospects_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling DefaultApi.v1_apac_onboarding_prospects_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling DefaultApi.v1_apac_onboarding_prospects_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling DefaultApi.v1_apac_onboarding_prospects_post"
      end
      # resource path
      local_var_path = '/v1/apac/onboarding/prospects'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ProspectAddResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#v1_apac_onboarding_prospects_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
