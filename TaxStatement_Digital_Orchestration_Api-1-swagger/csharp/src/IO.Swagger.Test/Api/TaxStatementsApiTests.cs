/* 
 * TaxStatement_Digital_Orchestation
 *
 * Account Documents APIs Version 2.0. These APIs will be used by Citi Partners to retrieve tax documents for existing Accounts from various regions. PCF Deployment Reference name - -> DM-O-DocumentServices-Statements  </br>Version 2.0.0 Added new Tax statements apis.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TaxStatementsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TaxStatementsApiTests
    {
        private TaxStatementsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaxStatementsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaxStatementsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TaxStatementsApi
            //Assert.IsInstanceOfType(typeof(TaxStatementsApi), instance, "instance is a TaxStatementsApi");
        }

        /// <summary>
        /// Test GetTaxStatement
        /// </summary>
        [Test]
        public void GetTaxStatementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string accept = null;
            //string contentType = null;
            //string uuid = null;
            //string clientId = null;
            //string taxstatementId = null;
            //string countryCode = null;
            //var response = instance.GetTaxStatement(authorization, accept, contentType, uuid, clientId, taxstatementId, countryCode);
            //Assert.IsInstanceOf<Document> (response, "response is Document");
        }
        /// <summary>
        /// Test GetTaxStatements
        /// </summary>
        [Test]
        public void GetTaxStatementsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string accept = null;
            //string uuid = null;
            //string contentType = null;
            //string clientId = null;
            //string countryCode = null;
            //var response = instance.GetTaxStatements(authorization, accept, uuid, contentType, clientId, countryCode);
            //Assert.IsInstanceOf<Documents> (response, "response is Documents");
        }
    }

}
