/*
 * TaxStatement_Digital_Orchestation
 * Account Documents APIs Version 2.0. These APIs will be used by Citi Partners to retrieve tax documents for existing Accounts from various regions. PCF Deployment Reference name --> DM-O-DocumentServices-Statements  </br>Version 2.0.0 Added new Tax statements apis.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Document;
import io.swagger.client.model.Documents;
import io.swagger.client.model.ErrorResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaxStatementsApi
 */
@Ignore
public class TaxStatementsApiTest {

    private final TaxStatementsApi api = new TaxStatementsApi();

    /**
     * OB Return the masked tax statement for the given tax statement id
     *
     * This API retrieves a masked tax statement for the given tax statement id. This global API uses country fields to identify the appropriate regional services.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaxStatementTest() throws ApiException {
        String authorization = null;
        String accept = null;
        String contentType = null;
        String uuid = null;
        String clientId = null;
        String taxstatementId = null;
        String countryCode = null;
        Document response = api.getTaxStatement(authorization, accept, contentType, uuid, clientId, taxstatementId, countryCode);

        // TODO: test validations
    }
    /**
     * OB Returns list of masked tax statements
     *
     * This API is used to retrieve list of masked tax statements for given parameters. This global API uses country fields to identify the appropriate regional services.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaxStatementsTest() throws ApiException {
        String authorization = null;
        String accept = null;
        String uuid = null;
        String contentType = null;
        String clientId = null;
        String countryCode = null;
        Documents response = api.getTaxStatements(authorization, accept, uuid, contentType, clientId, countryCode);

        // TODO: test validations
    }
}
