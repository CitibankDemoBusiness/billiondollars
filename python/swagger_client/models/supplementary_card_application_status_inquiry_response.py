# coding: utf-8

"""
    Onboarding

    The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SupplementaryCardApplicationStatusInquiryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'application_status': 'str',
        'application_creation_date': 'date'
    }

    attribute_map = {
        'application_status': 'applicationStatus',
        'application_creation_date': 'applicationCreationDate'
    }

    def __init__(self, application_status=None, application_creation_date=None):  # noqa: E501
        """SupplementaryCardApplicationStatusInquiryResponse - a model defined in Swagger"""  # noqa: E501
        self._application_status = None
        self._application_creation_date = None
        self.discriminator = None
        self.application_status = application_status
        self.application_creation_date = application_creation_date

    @property
    def application_status(self):
        """Gets the application_status of this SupplementaryCardApplicationStatusInquiryResponse.  # noqa: E501

        Application Status of an application.This is a reference data field. Please use /v1/utilities/referenceData/{applicationStatus} resource to get possible value of this field with description.  # noqa: E501

        :return: The application_status of this SupplementaryCardApplicationStatusInquiryResponse.  # noqa: E501
        :rtype: str
        """
        return self._application_status

    @application_status.setter
    def application_status(self, application_status):
        """Sets the application_status of this SupplementaryCardApplicationStatusInquiryResponse.

        Application Status of an application.This is a reference data field. Please use /v1/utilities/referenceData/{applicationStatus} resource to get possible value of this field with description.  # noqa: E501

        :param application_status: The application_status of this SupplementaryCardApplicationStatusInquiryResponse.  # noqa: E501
        :type: str
        """
        if application_status is None:
            raise ValueError("Invalid value for `application_status`, must not be `None`")  # noqa: E501

        self._application_status = application_status

    @property
    def application_creation_date(self):
        """Gets the application_creation_date of this SupplementaryCardApplicationStatusInquiryResponse.  # noqa: E501

        Date on which the application was created in ISO 8601 date format YYYY - MM - DD.  # noqa: E501

        :return: The application_creation_date of this SupplementaryCardApplicationStatusInquiryResponse.  # noqa: E501
        :rtype: date
        """
        return self._application_creation_date

    @application_creation_date.setter
    def application_creation_date(self, application_creation_date):
        """Sets the application_creation_date of this SupplementaryCardApplicationStatusInquiryResponse.

        Date on which the application was created in ISO 8601 date format YYYY - MM - DD.  # noqa: E501

        :param application_creation_date: The application_creation_date of this SupplementaryCardApplicationStatusInquiryResponse.  # noqa: E501
        :type: date
        """
        if application_creation_date is None:
            raise ValueError("Invalid value for `application_creation_date`, must not be `None`")  # noqa: E501

        self._application_creation_date = application_creation_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SupplementaryCardApplicationStatusInquiryResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SupplementaryCardApplicationStatusInquiryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
