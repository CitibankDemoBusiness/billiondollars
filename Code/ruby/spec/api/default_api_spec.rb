=begin
#Onboarding

#The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DefaultApi)
    end
  end

  # unit tests for v1_apac_onboarding_applications_application_id_documents_post
  # Upload Application Documents
  # This API allows the applicant to upload the documents online to the specified application. Required documents such as drivers license and banking statements will be returned in the application decision.
  # @param body Insert the documents in documentum.
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id The unique identifier of the application.
  # @param [Hash] opts the optional parameters
  # @return [InsertDocumentResponse]
  describe 'v1_apac_onboarding_applications_application_id_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put
  # Supp Applicant Delete
  # Allows primary card holder to delete the supplementary card application.
  # @param body Add applicant details to the application
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Types that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
  # @param applicant_id Unique ID created for an Applicant..
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_delete_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put
  # Supp Applicant Update
  # Allows primary card holder to edit or update the supplementary card application details.
  # @param body Add applicant details to the application
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Types that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
  # @param applicant_id Unique ID created for an Applicant. This is retuned back in ApplicantAdd response and the same should be passed here.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_applicants_applicant_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get
  # Supp Applicant Inquiry
  # This API returns supplementary application details for the specific supplementary application id.
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Types that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
  # @param control_flow_id It is used to control the flow for subsequent requests in the session.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :applicant_id Unique ID created for an Applicant. This is retuned back in ApplicantAdd response and the same should be passed here.
  # @return [ApplicantInquiryResponse]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_applicants_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post
  # Supp Applicant Add
  # This API creates a new supplementary card application along with primary card application.
  # @param body Add applicant details to the application
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Types that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
  # @param [Hash] opts the optional parameters
  # @return [ApplicantAddResponse]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_applicants_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post
  # Screen Unsecured Credit Application
  # This API submits the specified unsecured credit application for screening.
  # @param body 
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id The unique identifier of the application
  # @param [Hash] opts the optional parameters
  # @return [BackgroundScreeningResponse]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_background_screening_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_get
  # Application Inquiry
  # This API returns the application details and status for a specific application id after a successful Multi Factor Authentication.
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param application_id Unique identifier for the application.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :control_flow_id Control flow id is used to control the flow for subsequent requests in the session.
  # @return [ApplicationInquiryResponse]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post
  # Request Credit Application Decision
  # This API returns the results of a decision inquiry for an application, including credit limit, counter-product offers and cross-sell offers along with the list of required documents.
  # @param body 
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id the ID of the application
  # @param [Hash] opts the optional parameters
  # @return [InPrincipleApprovalResponse]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_in_principle_approvals_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post
  # Accept Cross Sell Products
  # This API accepts specified cross-sell product offers that were returned in the application decision.
  # @param body Input Data to accept the product offered in the application.
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id the ID of the application
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_offer_acceptance_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_put
  # Update Unsecured Credit Application
  # This API updates a saved application to correct information that was previously blank.
  # @param body Input Data to submit the application.
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id Unique ID created for an Application. This is retuned back in ApplicationAdd response and the same should be passed here.
  # @param [Hash] opts the optional parameters
  # @return [ApplicationUpdateResponse]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_status_get
  # Check Application Status
  # This API returns the status for a specified submitted application and takes the application id as parameter.
  # @param application_id the ID of the application
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param control_flow_id Control Flow Id
  # @param [Hash] opts the optional parameters
  # @return [ApplicationStatusResponse]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_status_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_application_id_submission_post
  # Submit Application
  # This API submits the created application to host systems for a particular application id.
  # @param body 
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param application_id The unique identifier of the application.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_apac_onboarding_products_unsecured_applications_application_id_submission_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_products_unsecured_applications_post
  # Create Unsecured Credit Application
  # This API pre-populates an application for card and banking products with the applicant&#x27;s details. The API will then return an application id that can be used to perform actions on the application and check status.
  # @param body Input Data to submit the application.
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept_language List of acceptable human languages for response
  # @return [ApplicationAddResponse]
  describe 'v1_apac_onboarding_products_unsecured_applications_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_apac_onboarding_prospects_post
  # Submit Prospect
  # This API is used to create a new prospect or a potential customer for the bank. Returns a prospect id that can be used for reach out and conversions to applications.
  # @param body Prospect Add Request
  # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param client_id Client ID generated during application registration.
  # @param content_type application/json
  # @param [Hash] opts the optional parameters
  # @return [ProspectAddResponse]
  describe 'v1_apac_onboarding_prospects_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
