/* 
 * Onboarding
 *
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        /// <summary>
        /// Test V1ApacOnboardingApplicationsApplicationIdDocumentsPost
        /// </summary>
        [Test]
        public void V1ApacOnboardingApplicationsApplicationIdDocumentsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InsertDocumentRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //var response = instance.V1ApacOnboardingApplicationsApplicationIdDocumentsPost(body, authorization, uuid, accept, clientId, contentType, applicationId);
            //Assert.IsInstanceOf<InsertDocumentResponse> (response, "response is InsertDocumentResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdDeletePut
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdDeletePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicantDeleteRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string applicantId = null;
            //instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdDeletePut(body, authorization, uuid, accept, clientId, contentType, applicationId, applicantId);
            
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdPut
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicantUpdateRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //string applicantId = null;
            //instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdPut(body, authorization, uuid, accept, clientId, contentType, applicationId, applicantId);
            
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsGet
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string applicationId = null;
            //string controlFlowId = null;
            //string applicantId = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsGet(authorization, uuid, accept, clientId, applicationId, controlFlowId, applicantId);
            //Assert.IsInstanceOf<ApplicantInquiryResponse> (response, "response is ApplicantInquiryResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsPost
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicantAddRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsPost(body, authorization, uuid, accept, clientId, contentType, applicationId);
            //Assert.IsInstanceOf<ApplicantAddResponse> (response, "response is ApplicantAddResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdBackgroundScreeningPost
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdBackgroundScreeningPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BackgroundScreeningRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdBackgroundScreeningPost(body, authorization, uuid, accept, clientId, contentType, applicationId);
            //Assert.IsInstanceOf<BackgroundScreeningResponse> (response, "response is BackgroundScreeningResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdGet
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string applicationId = null;
            //string controlFlowId = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdGet(authorization, uuid, accept, clientId, applicationId, controlFlowId);
            //Assert.IsInstanceOf<ApplicationInquiryResponse> (response, "response is ApplicationInquiryResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdInPrincipleApprovalsPost
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdInPrincipleApprovalsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InPrincipleApprovalRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdInPrincipleApprovalsPost(body, authorization, uuid, accept, clientId, contentType, applicationId);
            //Assert.IsInstanceOf<InPrincipleApprovalResponse> (response, "response is InPrincipleApprovalResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdOfferAcceptancePost
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdOfferAcceptancePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OfferAcceptanceRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdOfferAcceptancePost(body, authorization, uuid, accept, clientId, contentType, applicationId);
            
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdPut
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicationUpdateRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdPut(body, authorization, uuid, accept, clientId, contentType, applicationId);
            //Assert.IsInstanceOf<ApplicationUpdateResponse> (response, "response is ApplicationUpdateResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdStatusGet
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string controlFlowId = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdStatusGet(applicationId, authorization, uuid, accept, clientId, controlFlowId);
            //Assert.IsInstanceOf<ApplicationStatusResponse> (response, "response is ApplicationStatusResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdSubmissionPost
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdSubmissionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FinalSubmitRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string applicationId = null;
            //instance.V1ApacOnboardingProductsUnsecuredApplicationsApplicationIdSubmissionPost(body, authorization, uuid, accept, clientId, contentType, applicationId);
            
        }
        /// <summary>
        /// Test V1ApacOnboardingProductsUnsecuredApplicationsPost
        /// </summary>
        [Test]
        public void V1ApacOnboardingProductsUnsecuredApplicationsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicationAddRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //string acceptLanguage = null;
            //var response = instance.V1ApacOnboardingProductsUnsecuredApplicationsPost(body, authorization, uuid, accept, clientId, contentType, acceptLanguage);
            //Assert.IsInstanceOf<ApplicationAddResponse> (response, "response is ApplicationAddResponse");
        }
        /// <summary>
        /// Test V1ApacOnboardingProspectsPost
        /// </summary>
        [Test]
        public void V1ApacOnboardingProspectsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProspectAddRequest body = null;
            //string authorization = null;
            //string uuid = null;
            //string accept = null;
            //string clientId = null;
            //string contentType = null;
            //var response = instance.V1ApacOnboardingProspectsPost(body, authorization, uuid, accept, clientId, contentType);
            //Assert.IsInstanceOf<ProspectAddResponse> (response, "response is ProspectAddResponse");
        }
    }

}
