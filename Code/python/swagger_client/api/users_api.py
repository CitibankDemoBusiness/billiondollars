# coding: utf-8

"""
    Onboarding

    The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from swagger_client.api_client import ApiClient


class UsersApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def supplementary_card_application_status_inquiry(self, authorization, uuid, accept, client_id, application_id, date_of_birth, mother_maiden_name, **kwargs):  # noqa: E501
        """Check Supplementary Application Status  # noqa: E501

        This API is used to check the status of the supplementary application.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supplementary_card_application_status_inquiry(authorization, uuid, accept, client_id, application_id, date_of_birth, mother_maiden_name, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str authorization: The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ== (required)
        :param str uuid: 128 bit random UUID generated uniquely for every request. (required)
        :param str accept: Content-Type that are acceptable for the response. (required)
        :param str client_id: client id generated during consumer on-boarding (required)
        :param str application_id: This refers to Unique identifier for the application. (required)
        :param str date_of_birth: Applicant's date of birth in  ISO 8601 date format YYYY-MM-DD (required)
        :param str mother_maiden_name: Mother's maiden name (required)
        :param str client_details: This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
        :return: SupplementaryCardApplicationStatusInquiryResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.supplementary_card_application_status_inquiry_with_http_info(authorization, uuid, accept, client_id, application_id, date_of_birth, mother_maiden_name, **kwargs)  # noqa: E501
        else:
            (data) = self.supplementary_card_application_status_inquiry_with_http_info(authorization, uuid, accept, client_id, application_id, date_of_birth, mother_maiden_name, **kwargs)  # noqa: E501
            return data

    def supplementary_card_application_status_inquiry_with_http_info(self, authorization, uuid, accept, client_id, application_id, date_of_birth, mother_maiden_name, **kwargs):  # noqa: E501
        """Check Supplementary Application Status  # noqa: E501

        This API is used to check the status of the supplementary application.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supplementary_card_application_status_inquiry_with_http_info(authorization, uuid, accept, client_id, application_id, date_of_birth, mother_maiden_name, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str authorization: The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ== (required)
        :param str uuid: 128 bit random UUID generated uniquely for every request. (required)
        :param str accept: Content-Type that are acceptable for the response. (required)
        :param str client_id: client id generated during consumer on-boarding (required)
        :param str application_id: This refers to Unique identifier for the application. (required)
        :param str date_of_birth: Applicant's date of birth in  ISO 8601 date format YYYY-MM-DD (required)
        :param str mother_maiden_name: Mother's maiden name (required)
        :param str client_details: This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
        :return: SupplementaryCardApplicationStatusInquiryResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['authorization', 'uuid', 'accept', 'client_id', 'application_id', 'date_of_birth', 'mother_maiden_name', 'client_details']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method supplementary_card_application_status_inquiry" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'authorization' is set
        if ('authorization' not in params or
                params['authorization'] is None):
            raise ValueError("Missing the required parameter `authorization` when calling `supplementary_card_application_status_inquiry`")  # noqa: E501
        # verify the required parameter 'uuid' is set
        if ('uuid' not in params or
                params['uuid'] is None):
            raise ValueError("Missing the required parameter `uuid` when calling `supplementary_card_application_status_inquiry`")  # noqa: E501
        # verify the required parameter 'accept' is set
        if ('accept' not in params or
                params['accept'] is None):
            raise ValueError("Missing the required parameter `accept` when calling `supplementary_card_application_status_inquiry`")  # noqa: E501
        # verify the required parameter 'client_id' is set
        if ('client_id' not in params or
                params['client_id'] is None):
            raise ValueError("Missing the required parameter `client_id` when calling `supplementary_card_application_status_inquiry`")  # noqa: E501
        # verify the required parameter 'application_id' is set
        if ('application_id' not in params or
                params['application_id'] is None):
            raise ValueError("Missing the required parameter `application_id` when calling `supplementary_card_application_status_inquiry`")  # noqa: E501
        # verify the required parameter 'date_of_birth' is set
        if ('date_of_birth' not in params or
                params['date_of_birth'] is None):
            raise ValueError("Missing the required parameter `date_of_birth` when calling `supplementary_card_application_status_inquiry`")  # noqa: E501
        # verify the required parameter 'mother_maiden_name' is set
        if ('mother_maiden_name' not in params or
                params['mother_maiden_name'] is None):
            raise ValueError("Missing the required parameter `mother_maiden_name` when calling `supplementary_card_application_status_inquiry`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'application_id' in params:
            path_params['applicationId'] = params['application_id']  # noqa: E501

        query_params = []
        if 'date_of_birth' in params:
            query_params.append(('dateOfBirth', params['date_of_birth']))  # noqa: E501
        if 'mother_maiden_name' in params:
            query_params.append(('motherMaidenName', params['mother_maiden_name']))  # noqa: E501

        header_params = {}
        if 'authorization' in params:
            header_params['Authorization'] = params['authorization']  # noqa: E501
        if 'uuid' in params:
            header_params['uuid'] = params['uuid']  # noqa: E501
        if 'accept' in params:
            header_params['Accept'] = params['accept']  # noqa: E501
        if 'client_id' in params:
            header_params['client_id'] = params['client_id']  # noqa: E501
        if 'client_details' in params:
            header_params['clientDetails'] = params['client_details']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/onboarding/supplementary/applications/{applicationId}/status', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='SupplementaryCardApplicationStatusInquiryResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
