# coding: utf-8

"""
    Onboarding

    The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CardDeliveryDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'card_delivery_status': 'str',
        'airway_bill_number': 'str',
        'delivery_method': 'str',
        'card_delivery_date': 'str',
        'received_by': 'str',
        'display_card_number': 'str'
    }

    attribute_map = {
        'card_delivery_status': 'cardDeliveryStatus',
        'airway_bill_number': 'airwayBillNumber',
        'delivery_method': 'deliveryMethod',
        'card_delivery_date': 'cardDeliveryDate',
        'received_by': 'receivedBy',
        'display_card_number': 'displayCardNumber'
    }

    def __init__(self, card_delivery_status=None, airway_bill_number=None, delivery_method=None, card_delivery_date=None, received_by=None, display_card_number=None):  # noqa: E501
        """CardDeliveryDetails - a model defined in Swagger"""  # noqa: E501
        self._card_delivery_status = None
        self._airway_bill_number = None
        self._delivery_method = None
        self._card_delivery_date = None
        self._received_by = None
        self._display_card_number = None
        self.discriminator = None
        if card_delivery_status is not None:
            self.card_delivery_status = card_delivery_status
        if airway_bill_number is not None:
            self.airway_bill_number = airway_bill_number
        if delivery_method is not None:
            self.delivery_method = delivery_method
        if card_delivery_date is not None:
            self.card_delivery_date = card_delivery_date
        if received_by is not None:
            self.received_by = received_by
        if display_card_number is not None:
            self.display_card_number = display_card_number

    @property
    def card_delivery_status(self):
        """Gets the card_delivery_status of this CardDeliveryDetails.  # noqa: E501

        Cd delivery status.  This is a reference data field. Please use /v1/utilities/referenceData/{cardDeliveryStatus} resource to get possible values of this field with descriptions.  # noqa: E501

        :return: The card_delivery_status of this CardDeliveryDetails.  # noqa: E501
        :rtype: str
        """
        return self._card_delivery_status

    @card_delivery_status.setter
    def card_delivery_status(self, card_delivery_status):
        """Sets the card_delivery_status of this CardDeliveryDetails.

        Cd delivery status.  This is a reference data field. Please use /v1/utilities/referenceData/{cardDeliveryStatus} resource to get possible values of this field with descriptions.  # noqa: E501

        :param card_delivery_status: The card_delivery_status of this CardDeliveryDetails.  # noqa: E501
        :type: str
        """

        self._card_delivery_status = card_delivery_status

    @property
    def airway_bill_number(self):
        """Gets the airway_bill_number of this CardDeliveryDetails.  # noqa: E501

        New Field in EPCDFIL. This field denotes the Airway Bill Number or reference number provided by the courier company for the dispatch.  # noqa: E501

        :return: The airway_bill_number of this CardDeliveryDetails.  # noqa: E501
        :rtype: str
        """
        return self._airway_bill_number

    @airway_bill_number.setter
    def airway_bill_number(self, airway_bill_number):
        """Sets the airway_bill_number of this CardDeliveryDetails.

        New Field in EPCDFIL. This field denotes the Airway Bill Number or reference number provided by the courier company for the dispatch.  # noqa: E501

        :param airway_bill_number: The airway_bill_number of this CardDeliveryDetails.  # noqa: E501
        :type: str
        """

        self._airway_bill_number = airway_bill_number

    @property
    def delivery_method(self):
        """Gets the delivery_method of this CardDeliveryDetails.  # noqa: E501

        New Field in EPCDFIL. This field denotes the mode through which the card was disptached. Valid Values :  'Courier' or 'Post'   # noqa: E501

        :return: The delivery_method of this CardDeliveryDetails.  # noqa: E501
        :rtype: str
        """
        return self._delivery_method

    @delivery_method.setter
    def delivery_method(self, delivery_method):
        """Sets the delivery_method of this CardDeliveryDetails.

        New Field in EPCDFIL. This field denotes the mode through which the card was disptached. Valid Values :  'Courier' or 'Post'   # noqa: E501

        :param delivery_method: The delivery_method of this CardDeliveryDetails.  # noqa: E501
        :type: str
        """

        self._delivery_method = delivery_method

    @property
    def card_delivery_date(self):
        """Gets the card_delivery_date of this CardDeliveryDetails.  # noqa: E501

        New Field in EPCDFIL This field denotes the date of card delivery.  # noqa: E501

        :return: The card_delivery_date of this CardDeliveryDetails.  # noqa: E501
        :rtype: str
        """
        return self._card_delivery_date

    @card_delivery_date.setter
    def card_delivery_date(self, card_delivery_date):
        """Sets the card_delivery_date of this CardDeliveryDetails.

        New Field in EPCDFIL This field denotes the date of card delivery.  # noqa: E501

        :param card_delivery_date: The card_delivery_date of this CardDeliveryDetails.  # noqa: E501
        :type: str
        """

        self._card_delivery_date = card_delivery_date

    @property
    def received_by(self):
        """Gets the received_by of this CardDeliveryDetails.  # noqa: E501

        New Field in EPCDFIL. This field denotes the Name and Relationship of the individual who has received the card on behalf of the cardholder. If the card holder has received the card, then this field will have the value as ‘Self’.  # noqa: E501

        :return: The received_by of this CardDeliveryDetails.  # noqa: E501
        :rtype: str
        """
        return self._received_by

    @received_by.setter
    def received_by(self, received_by):
        """Sets the received_by of this CardDeliveryDetails.

        New Field in EPCDFIL. This field denotes the Name and Relationship of the individual who has received the card on behalf of the cardholder. If the card holder has received the card, then this field will have the value as ‘Self’.  # noqa: E501

        :param received_by: The received_by of this CardDeliveryDetails.  # noqa: E501
        :type: str
        """

        self._received_by = received_by

    @property
    def display_card_number(self):
        """Gets the display_card_number of this CardDeliveryDetails.  # noqa: E501

        Card last four Digit.  # noqa: E501

        :return: The display_card_number of this CardDeliveryDetails.  # noqa: E501
        :rtype: str
        """
        return self._display_card_number

    @display_card_number.setter
    def display_card_number(self, display_card_number):
        """Sets the display_card_number of this CardDeliveryDetails.

        Card last four Digit.  # noqa: E501

        :param display_card_number: The display_card_number of this CardDeliveryDetails.  # noqa: E501
        :type: str
        """

        self._display_card_number = display_card_number

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CardDeliveryDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CardDeliveryDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
