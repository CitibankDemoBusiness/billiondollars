/* 
 * Onboarding
 *
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EmploymentDetails
    /// </summary>
    [DataContract]
        public partial class EmploymentDetails :  IEquatable<EmploymentDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmploymentDetails" /> class.
        /// </summary>
        /// <param name="employerName">Name of the Employer..</param>
        /// <param name="jobTitle">Job Title. This is a reference data field. Please use /v1/apac/utilities/referenceData/{jobTitle} resource to get possible values of this field with descriptions. You can use jobTitle field name as the referenceCode parameter to retrieve the values..</param>
        /// <param name="occupationCode">Occupation code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{occupationCode} resource to get possible values of this field with descriptions. You can use occupationCode field name as the referenceCode parameter to retrieve the values..</param>
        /// <param name="industryCode">Code of the industry of employment. This is a reference data field. Please use /v1/apac/utilities/referenceData/{industryCode} resource to get possible values of this field with descriptions. You can use the field name as the referenceCode parameter to retrieve the values..</param>
        public EmploymentDetails(string employerName = default(string), string jobTitle = default(string), string occupationCode = default(string), string industryCode = default(string))
        {
            this.EmployerName = employerName;
            this.JobTitle = jobTitle;
            this.OccupationCode = occupationCode;
            this.IndustryCode = industryCode;
        }
        
        /// <summary>
        /// Name of the Employer.
        /// </summary>
        /// <value>Name of the Employer.</value>
        [DataMember(Name="employerName", EmitDefaultValue=false)]
        public string EmployerName { get; set; }

        /// <summary>
        /// Job Title. This is a reference data field. Please use /v1/apac/utilities/referenceData/{jobTitle} resource to get possible values of this field with descriptions. You can use jobTitle field name as the referenceCode parameter to retrieve the values.
        /// </summary>
        /// <value>Job Title. This is a reference data field. Please use /v1/apac/utilities/referenceData/{jobTitle} resource to get possible values of this field with descriptions. You can use jobTitle field name as the referenceCode parameter to retrieve the values.</value>
        [DataMember(Name="jobTitle", EmitDefaultValue=false)]
        public string JobTitle { get; set; }

        /// <summary>
        /// Occupation code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{occupationCode} resource to get possible values of this field with descriptions. You can use occupationCode field name as the referenceCode parameter to retrieve the values.
        /// </summary>
        /// <value>Occupation code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{occupationCode} resource to get possible values of this field with descriptions. You can use occupationCode field name as the referenceCode parameter to retrieve the values.</value>
        [DataMember(Name="occupationCode", EmitDefaultValue=false)]
        public string OccupationCode { get; set; }

        /// <summary>
        /// Code of the industry of employment. This is a reference data field. Please use /v1/apac/utilities/referenceData/{industryCode} resource to get possible values of this field with descriptions. You can use the field name as the referenceCode parameter to retrieve the values.
        /// </summary>
        /// <value>Code of the industry of employment. This is a reference data field. Please use /v1/apac/utilities/referenceData/{industryCode} resource to get possible values of this field with descriptions. You can use the field name as the referenceCode parameter to retrieve the values.</value>
        [DataMember(Name="industryCode", EmitDefaultValue=false)]
        public string IndustryCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmploymentDetails {\n");
            sb.Append("  EmployerName: ").Append(EmployerName).Append("\n");
            sb.Append("  JobTitle: ").Append(JobTitle).Append("\n");
            sb.Append("  OccupationCode: ").Append(OccupationCode).Append("\n");
            sb.Append("  IndustryCode: ").Append(IndustryCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EmploymentDetails);
        }

        /// <summary>
        /// Returns true if EmploymentDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of EmploymentDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmploymentDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EmployerName == input.EmployerName ||
                    (this.EmployerName != null &&
                    this.EmployerName.Equals(input.EmployerName))
                ) && 
                (
                    this.JobTitle == input.JobTitle ||
                    (this.JobTitle != null &&
                    this.JobTitle.Equals(input.JobTitle))
                ) && 
                (
                    this.OccupationCode == input.OccupationCode ||
                    (this.OccupationCode != null &&
                    this.OccupationCode.Equals(input.OccupationCode))
                ) && 
                (
                    this.IndustryCode == input.IndustryCode ||
                    (this.IndustryCode != null &&
                    this.IndustryCode.Equals(input.IndustryCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EmployerName != null)
                    hashCode = hashCode * 59 + this.EmployerName.GetHashCode();
                if (this.JobTitle != null)
                    hashCode = hashCode * 59 + this.JobTitle.GetHashCode();
                if (this.OccupationCode != null)
                    hashCode = hashCode * 59 + this.OccupationCode.GetHashCode();
                if (this.IndustryCode != null)
                    hashCode = hashCode * 59 + this.IndustryCode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
