/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApplicantUpdateAdditionalData;
import io.swagger.client.model.ApplicantUpdateAddress;
import io.swagger.client.model.ApplicantUpdateConsentDetails;
import io.swagger.client.model.ApplicantUpdateContactConsent;
import io.swagger.client.model.ApplicantUpdateDemographics;
import io.swagger.client.model.ApplicantUpdateEmail;
import io.swagger.client.model.ApplicantUpdateEmploymentDetails;
import io.swagger.client.model.ApplicantUpdateFinancialInformation;
import io.swagger.client.model.ApplicantUpdateIdentificationDocumentDetails;
import io.swagger.client.model.ApplicantUpdateKycInformation;
import io.swagger.client.model.ApplicantUpdateName;
import io.swagger.client.model.ApplicantUpdatePartnerCustomerDetails;
import io.swagger.client.model.ApplicantUpdatePhone;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ApplicantUpdateApplicant
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicantUpdateApplicant {
  @SerializedName("applicantType")
  private String applicantType = null;

  @SerializedName("motherMaidenName")
  private String motherMaidenName = null;

  @SerializedName("name")
  private ApplicantUpdateName name = null;

  @SerializedName("demographics")
  private ApplicantUpdateDemographics demographics = null;

  @SerializedName("address")
  private List<ApplicantUpdateAddress> address = null;

  @SerializedName("email")
  private List<ApplicantUpdateEmail> email = null;

  @SerializedName("phone")
  private List<ApplicantUpdatePhone> phone = null;

  @SerializedName("financialInformation")
  private ApplicantUpdateFinancialInformation financialInformation = null;

  @SerializedName("employmentDetails")
  private List<ApplicantUpdateEmploymentDetails> employmentDetails = null;

  @SerializedName("identificationDocumentDetails")
  private List<ApplicantUpdateIdentificationDocumentDetails> identificationDocumentDetails = null;

  @SerializedName("additionalData")
  private ApplicantUpdateAdditionalData additionalData = null;

  @SerializedName("partnerCustomerDetails")
  private ApplicantUpdatePartnerCustomerDetails partnerCustomerDetails = null;

  @SerializedName("consentDetails")
  private List<ApplicantUpdateConsentDetails> consentDetails = null;

  @SerializedName("kycInformation")
  private ApplicantUpdateKycInformation kycInformation = null;

  @SerializedName("contactConsent")
  private ApplicantUpdateContactConsent contactConsent = null;

  public ApplicantUpdateApplicant applicantType(String applicantType) {
    this.applicantType = applicantType;
    return this;
  }

   /**
   * Type of an applicant.This is a reference data field.Please use /utilities/referenceData/{applicantType} resource to get valid values of this field with descriptions. You can use the fieldname as the referenceCode parameter to retrieve the values.
   * @return applicantType
  **/
  @Schema(example = "SUPPLEMENTARY", required = true, description = "Type of an applicant.This is a reference data field.Please use /utilities/referenceData/{applicantType} resource to get valid values of this field with descriptions. You can use the fieldname as the referenceCode parameter to retrieve the values.")
  public String getApplicantType() {
    return applicantType;
  }

  public void setApplicantType(String applicantType) {
    this.applicantType = applicantType;
  }

  public ApplicantUpdateApplicant motherMaidenName(String motherMaidenName) {
    this.motherMaidenName = motherMaidenName;
    return this;
  }

   /**
   * Mothers maiden name
   * @return motherMaidenName
  **/
  @Schema(example = "Monica", description = "Mothers maiden name")
  public String getMotherMaidenName() {
    return motherMaidenName;
  }

  public void setMotherMaidenName(String motherMaidenName) {
    this.motherMaidenName = motherMaidenName;
  }

  public ApplicantUpdateApplicant name(ApplicantUpdateName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public ApplicantUpdateName getName() {
    return name;
  }

  public void setName(ApplicantUpdateName name) {
    this.name = name;
  }

  public ApplicantUpdateApplicant demographics(ApplicantUpdateDemographics demographics) {
    this.demographics = demographics;
    return this;
  }

   /**
   * Get demographics
   * @return demographics
  **/
  @Schema(description = "")
  public ApplicantUpdateDemographics getDemographics() {
    return demographics;
  }

  public void setDemographics(ApplicantUpdateDemographics demographics) {
    this.demographics = demographics;
  }

  public ApplicantUpdateApplicant address(List<ApplicantUpdateAddress> address) {
    this.address = address;
    return this;
  }

  public ApplicantUpdateApplicant addAddressItem(ApplicantUpdateAddress addressItem) {
    if (this.address == null) {
      this.address = new ArrayList<ApplicantUpdateAddress>();
    }
    this.address.add(addressItem);
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public List<ApplicantUpdateAddress> getAddress() {
    return address;
  }

  public void setAddress(List<ApplicantUpdateAddress> address) {
    this.address = address;
  }

  public ApplicantUpdateApplicant email(List<ApplicantUpdateEmail> email) {
    this.email = email;
    return this;
  }

  public ApplicantUpdateApplicant addEmailItem(ApplicantUpdateEmail emailItem) {
    if (this.email == null) {
      this.email = new ArrayList<ApplicantUpdateEmail>();
    }
    this.email.add(emailItem);
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public List<ApplicantUpdateEmail> getEmail() {
    return email;
  }

  public void setEmail(List<ApplicantUpdateEmail> email) {
    this.email = email;
  }

  public ApplicantUpdateApplicant phone(List<ApplicantUpdatePhone> phone) {
    this.phone = phone;
    return this;
  }

  public ApplicantUpdateApplicant addPhoneItem(ApplicantUpdatePhone phoneItem) {
    if (this.phone == null) {
      this.phone = new ArrayList<ApplicantUpdatePhone>();
    }
    this.phone.add(phoneItem);
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(description = "")
  public List<ApplicantUpdatePhone> getPhone() {
    return phone;
  }

  public void setPhone(List<ApplicantUpdatePhone> phone) {
    this.phone = phone;
  }

  public ApplicantUpdateApplicant financialInformation(ApplicantUpdateFinancialInformation financialInformation) {
    this.financialInformation = financialInformation;
    return this;
  }

   /**
   * Get financialInformation
   * @return financialInformation
  **/
  @Schema(description = "")
  public ApplicantUpdateFinancialInformation getFinancialInformation() {
    return financialInformation;
  }

  public void setFinancialInformation(ApplicantUpdateFinancialInformation financialInformation) {
    this.financialInformation = financialInformation;
  }

  public ApplicantUpdateApplicant employmentDetails(List<ApplicantUpdateEmploymentDetails> employmentDetails) {
    this.employmentDetails = employmentDetails;
    return this;
  }

  public ApplicantUpdateApplicant addEmploymentDetailsItem(ApplicantUpdateEmploymentDetails employmentDetailsItem) {
    if (this.employmentDetails == null) {
      this.employmentDetails = new ArrayList<ApplicantUpdateEmploymentDetails>();
    }
    this.employmentDetails.add(employmentDetailsItem);
    return this;
  }

   /**
   * Get employmentDetails
   * @return employmentDetails
  **/
  @Schema(description = "")
  public List<ApplicantUpdateEmploymentDetails> getEmploymentDetails() {
    return employmentDetails;
  }

  public void setEmploymentDetails(List<ApplicantUpdateEmploymentDetails> employmentDetails) {
    this.employmentDetails = employmentDetails;
  }

  public ApplicantUpdateApplicant identificationDocumentDetails(List<ApplicantUpdateIdentificationDocumentDetails> identificationDocumentDetails) {
    this.identificationDocumentDetails = identificationDocumentDetails;
    return this;
  }

  public ApplicantUpdateApplicant addIdentificationDocumentDetailsItem(ApplicantUpdateIdentificationDocumentDetails identificationDocumentDetailsItem) {
    if (this.identificationDocumentDetails == null) {
      this.identificationDocumentDetails = new ArrayList<ApplicantUpdateIdentificationDocumentDetails>();
    }
    this.identificationDocumentDetails.add(identificationDocumentDetailsItem);
    return this;
  }

   /**
   * Get identificationDocumentDetails
   * @return identificationDocumentDetails
  **/
  @Schema(description = "")
  public List<ApplicantUpdateIdentificationDocumentDetails> getIdentificationDocumentDetails() {
    return identificationDocumentDetails;
  }

  public void setIdentificationDocumentDetails(List<ApplicantUpdateIdentificationDocumentDetails> identificationDocumentDetails) {
    this.identificationDocumentDetails = identificationDocumentDetails;
  }

  public ApplicantUpdateApplicant additionalData(ApplicantUpdateAdditionalData additionalData) {
    this.additionalData = additionalData;
    return this;
  }

   /**
   * Get additionalData
   * @return additionalData
  **/
  @Schema(description = "")
  public ApplicantUpdateAdditionalData getAdditionalData() {
    return additionalData;
  }

  public void setAdditionalData(ApplicantUpdateAdditionalData additionalData) {
    this.additionalData = additionalData;
  }

  public ApplicantUpdateApplicant partnerCustomerDetails(ApplicantUpdatePartnerCustomerDetails partnerCustomerDetails) {
    this.partnerCustomerDetails = partnerCustomerDetails;
    return this;
  }

   /**
   * Get partnerCustomerDetails
   * @return partnerCustomerDetails
  **/
  @Schema(description = "")
  public ApplicantUpdatePartnerCustomerDetails getPartnerCustomerDetails() {
    return partnerCustomerDetails;
  }

  public void setPartnerCustomerDetails(ApplicantUpdatePartnerCustomerDetails partnerCustomerDetails) {
    this.partnerCustomerDetails = partnerCustomerDetails;
  }

  public ApplicantUpdateApplicant consentDetails(List<ApplicantUpdateConsentDetails> consentDetails) {
    this.consentDetails = consentDetails;
    return this;
  }

  public ApplicantUpdateApplicant addConsentDetailsItem(ApplicantUpdateConsentDetails consentDetailsItem) {
    if (this.consentDetails == null) {
      this.consentDetails = new ArrayList<ApplicantUpdateConsentDetails>();
    }
    this.consentDetails.add(consentDetailsItem);
    return this;
  }

   /**
   * Get consentDetails
   * @return consentDetails
  **/
  @Schema(description = "")
  public List<ApplicantUpdateConsentDetails> getConsentDetails() {
    return consentDetails;
  }

  public void setConsentDetails(List<ApplicantUpdateConsentDetails> consentDetails) {
    this.consentDetails = consentDetails;
  }

  public ApplicantUpdateApplicant kycInformation(ApplicantUpdateKycInformation kycInformation) {
    this.kycInformation = kycInformation;
    return this;
  }

   /**
   * Get kycInformation
   * @return kycInformation
  **/
  @Schema(description = "")
  public ApplicantUpdateKycInformation getKycInformation() {
    return kycInformation;
  }

  public void setKycInformation(ApplicantUpdateKycInformation kycInformation) {
    this.kycInformation = kycInformation;
  }

  public ApplicantUpdateApplicant contactConsent(ApplicantUpdateContactConsent contactConsent) {
    this.contactConsent = contactConsent;
    return this;
  }

   /**
   * Get contactConsent
   * @return contactConsent
  **/
  @Schema(description = "")
  public ApplicantUpdateContactConsent getContactConsent() {
    return contactConsent;
  }

  public void setContactConsent(ApplicantUpdateContactConsent contactConsent) {
    this.contactConsent = contactConsent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicantUpdateApplicant applicantUpdateApplicant = (ApplicantUpdateApplicant) o;
    return Objects.equals(this.applicantType, applicantUpdateApplicant.applicantType) &&
        Objects.equals(this.motherMaidenName, applicantUpdateApplicant.motherMaidenName) &&
        Objects.equals(this.name, applicantUpdateApplicant.name) &&
        Objects.equals(this.demographics, applicantUpdateApplicant.demographics) &&
        Objects.equals(this.address, applicantUpdateApplicant.address) &&
        Objects.equals(this.email, applicantUpdateApplicant.email) &&
        Objects.equals(this.phone, applicantUpdateApplicant.phone) &&
        Objects.equals(this.financialInformation, applicantUpdateApplicant.financialInformation) &&
        Objects.equals(this.employmentDetails, applicantUpdateApplicant.employmentDetails) &&
        Objects.equals(this.identificationDocumentDetails, applicantUpdateApplicant.identificationDocumentDetails) &&
        Objects.equals(this.additionalData, applicantUpdateApplicant.additionalData) &&
        Objects.equals(this.partnerCustomerDetails, applicantUpdateApplicant.partnerCustomerDetails) &&
        Objects.equals(this.consentDetails, applicantUpdateApplicant.consentDetails) &&
        Objects.equals(this.kycInformation, applicantUpdateApplicant.kycInformation) &&
        Objects.equals(this.contactConsent, applicantUpdateApplicant.contactConsent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicantType, motherMaidenName, name, demographics, address, email, phone, financialInformation, employmentDetails, identificationDocumentDetails, additionalData, partnerCustomerDetails, consentDetails, kycInformation, contactConsent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicantUpdateApplicant {\n");
    
    sb.append("    applicantType: ").append(toIndentedString(applicantType)).append("\n");
    sb.append("    motherMaidenName: ").append(toIndentedString(motherMaidenName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    demographics: ").append(toIndentedString(demographics)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    financialInformation: ").append(toIndentedString(financialInformation)).append("\n");
    sb.append("    employmentDetails: ").append(toIndentedString(employmentDetails)).append("\n");
    sb.append("    identificationDocumentDetails: ").append(toIndentedString(identificationDocumentDetails)).append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    partnerCustomerDetails: ").append(toIndentedString(partnerCustomerDetails)).append("\n");
    sb.append("    consentDetails: ").append(toIndentedString(consentDetails)).append("\n");
    sb.append("    kycInformation: ").append(toIndentedString(kycInformation)).append("\n");
    sb.append("    contactConsent: ").append(toIndentedString(contactConsent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
