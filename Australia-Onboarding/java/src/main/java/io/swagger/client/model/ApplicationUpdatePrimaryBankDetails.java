/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ApplicationUpdatePrimaryBankDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicationUpdatePrimaryBankDetails {
  @SerializedName("bankName")
  private String bankName = null;

  @SerializedName("accountType")
  private String accountType = null;

  public ApplicationUpdatePrimaryBankDetails bankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

   /**
   * Main bank name with Citi. This is a reference data field. Please use /v1/apac/utilities/referenceData/{bankName} resource to get valid value of this field with description.
   * @return bankName
  **/
  @Schema(example = "CITIBANK_MALAYSIA", description = "Main bank name with Citi. This is a reference data field. Please use /v1/apac/utilities/referenceData/{bankName} resource to get valid value of this field with description.")
  public String getBankName() {
    return bankName;
  }

  public void setBankName(String bankName) {
    this.bankName = bankName;
  }

  public ApplicationUpdatePrimaryBankDetails accountType(String accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * Type of the account. This is a reference data field. Please use /v1/apac/utilities/referenceData/{accountType} resource to get valid value of this field with description.
   * @return accountType
  **/
  @Schema(example = "FIXED_ACCOUNT", description = "Type of the account. This is a reference data field. Please use /v1/apac/utilities/referenceData/{accountType} resource to get valid value of this field with description.")
  public String getAccountType() {
    return accountType;
  }

  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationUpdatePrimaryBankDetails applicationUpdatePrimaryBankDetails = (ApplicationUpdatePrimaryBankDetails) o;
    return Objects.equals(this.bankName, applicationUpdatePrimaryBankDetails.bankName) &&
        Objects.equals(this.accountType, applicationUpdatePrimaryBankDetails.accountType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankName, accountType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationUpdatePrimaryBankDetails {\n");
    
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
