/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PresetAtmPinAddRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class PresetAtmPinAddRequest {
  @SerializedName("applicationId")
  private String applicationId = null;

  @SerializedName("controlFlowId")
  private String controlFlowId = null;

  @SerializedName("encryptedPin")
  private String encryptedPin = null;

  @SerializedName("pinRegistrationKey")
  private String pinRegistrationKey = null;

  @SerializedName("pinLength")
  private Integer pinLength = null;

  @SerializedName("keyDeviceId")
  private String keyDeviceId = null;

  @SerializedName("keyGenerationId")
  private String keyGenerationId = null;

  public PresetAtmPinAddRequest applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * The unique identifier of the application.
   * @return applicationId
  **/
  @Schema(example = "ABC6782NJU45EF", required = true, description = "The unique identifier of the application.")
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }

  public PresetAtmPinAddRequest controlFlowId(String controlFlowId) {
    this.controlFlowId = controlFlowId;
    return this;
  }

   /**
   * Control flow id is used to control the flow for subsequent requests in the session.
   * @return controlFlowId
  **/
  @Schema(example = "6e3774334f724a2b7947663653712f52456f524c41797038516a59347a437549564a77755676376e616a733d", required = true, description = "Control flow id is used to control the flow for subsequent requests in the session.")
  public String getControlFlowId() {
    return controlFlowId;
  }

  public void setControlFlowId(String controlFlowId) {
    this.controlFlowId = controlFlowId;
  }

  public PresetAtmPinAddRequest encryptedPin(String encryptedPin) {
    this.encryptedPin = encryptedPin;
    return this;
  }

   /**
   * Encrypted ATM PIN set by the customer
   * @return encryptedPin
  **/
  @Schema(example = "Encrypted ATM pin information", required = true, description = "Encrypted ATM PIN set by the customer")
  public String getEncryptedPin() {
    return encryptedPin;
  }

  public void setEncryptedPin(String encryptedPin) {
    this.encryptedPin = encryptedPin;
  }

  public PresetAtmPinAddRequest pinRegistrationKey(String pinRegistrationKey) {
    this.pinRegistrationKey = pinRegistrationKey;
    return this;
  }

   /**
   * Unique key used for the registration of ATM PIN
   * @return pinRegistrationKey
  **/
  @Schema(example = "00YSSBEV291303VC311111", required = true, description = "Unique key used for the registration of ATM PIN")
  public String getPinRegistrationKey() {
    return pinRegistrationKey;
  }

  public void setPinRegistrationKey(String pinRegistrationKey) {
    this.pinRegistrationKey = pinRegistrationKey;
  }

  public PresetAtmPinAddRequest pinLength(Integer pinLength) {
    this.pinLength = pinLength;
    return this;
  }

   /**
   * Length of the ATM  PIN
   * @return pinLength
  **/
  @Schema(example = "4", required = true, description = "Length of the ATM  PIN")
  public Integer getPinLength() {
    return pinLength;
  }

  public void setPinLength(Integer pinLength) {
    this.pinLength = pinLength;
  }

  public PresetAtmPinAddRequest keyDeviceId(String keyDeviceId) {
    this.keyDeviceId = keyDeviceId;
    return this;
  }

   /**
   * Label to identify the HSM keys used to encrypt PIN
   * @return keyDeviceId
  **/
  @Schema(example = "43", required = true, description = "Label to identify the HSM keys used to encrypt PIN")
  public String getKeyDeviceId() {
    return keyDeviceId;
  }

  public void setKeyDeviceId(String keyDeviceId) {
    this.keyDeviceId = keyDeviceId;
  }

  public PresetAtmPinAddRequest keyGenerationId(String keyGenerationId) {
    this.keyGenerationId = keyGenerationId;
    return this;
  }

   /**
   * It is the generation ID of the HSM Keys referred for encryption for PIN
   * @return keyGenerationId
  **/
  @Schema(example = "1", required = true, description = "It is the generation ID of the HSM Keys referred for encryption for PIN")
  public String getKeyGenerationId() {
    return keyGenerationId;
  }

  public void setKeyGenerationId(String keyGenerationId) {
    this.keyGenerationId = keyGenerationId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PresetAtmPinAddRequest presetAtmPinAddRequest = (PresetAtmPinAddRequest) o;
    return Objects.equals(this.applicationId, presetAtmPinAddRequest.applicationId) &&
        Objects.equals(this.controlFlowId, presetAtmPinAddRequest.controlFlowId) &&
        Objects.equals(this.encryptedPin, presetAtmPinAddRequest.encryptedPin) &&
        Objects.equals(this.pinRegistrationKey, presetAtmPinAddRequest.pinRegistrationKey) &&
        Objects.equals(this.pinLength, presetAtmPinAddRequest.pinLength) &&
        Objects.equals(this.keyDeviceId, presetAtmPinAddRequest.keyDeviceId) &&
        Objects.equals(this.keyGenerationId, presetAtmPinAddRequest.keyGenerationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, controlFlowId, encryptedPin, pinRegistrationKey, pinLength, keyDeviceId, keyGenerationId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PresetAtmPinAddRequest {\n");
    
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    controlFlowId: ").append(toIndentedString(controlFlowId)).append("\n");
    sb.append("    encryptedPin: ").append(toIndentedString(encryptedPin)).append("\n");
    sb.append("    pinRegistrationKey: ").append(toIndentedString(pinRegistrationKey)).append("\n");
    sb.append("    pinLength: ").append(toIndentedString(pinLength)).append("\n");
    sb.append("    keyDeviceId: ").append(toIndentedString(keyDeviceId)).append("\n");
    sb.append("    keyGenerationId: ").append(toIndentedString(keyGenerationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
