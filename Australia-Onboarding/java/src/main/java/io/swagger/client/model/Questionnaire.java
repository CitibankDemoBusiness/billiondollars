/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ResponseOptions;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Questionnaire
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class Questionnaire {
  @SerializedName("questionSequenceNumber")
  private Integer questionSequenceNumber = null;

  @SerializedName("questionnaireId")
  private String questionnaireId = null;

  @SerializedName("questionId")
  private String questionId = null;

  @SerializedName("questionText")
  private String questionText = null;

  @SerializedName("questionType")
  private String questionType = null;

  @SerializedName("timetakentoAnswer")
  private Integer timetakentoAnswer = null;

  @SerializedName("responseOptions")
  private List<ResponseOptions> responseOptions = null;

  public Questionnaire questionSequenceNumber(Integer questionSequenceNumber) {
    this.questionSequenceNumber = questionSequenceNumber;
    return this;
  }

   /**
   * Question sequence number
   * @return questionSequenceNumber
  **/
  @Schema(example = "5", description = "Question sequence number")
  public Integer getQuestionSequenceNumber() {
    return questionSequenceNumber;
  }

  public void setQuestionSequenceNumber(Integer questionSequenceNumber) {
    this.questionSequenceNumber = questionSequenceNumber;
  }

  public Questionnaire questionnaireId(String questionnaireId) {
    this.questionnaireId = questionnaireId;
    return this;
  }

   /**
   * Identifer used in request to map a response to a given questionnaire.
   * @return questionnaireId
  **/
  @Schema(example = "5e863c39-7838-4d95-8ac2-f66414b79ed9", description = "Identifer used in request to map a response to a given questionnaire.")
  public String getQuestionnaireId() {
    return questionnaireId;
  }

  public void setQuestionnaireId(String questionnaireId) {
    this.questionnaireId = questionnaireId;
  }

  public Questionnaire questionId(String questionId) {
    this.questionId = questionId;
    return this;
  }

   /**
   * Question Number used in request to map a response to a given enquiry.
   * @return questionId
  **/
  @Schema(example = "Q10", description = "Question Number used in request to map a response to a given enquiry.")
  public String getQuestionId() {
    return questionId;
  }

  public void setQuestionId(String questionId) {
    this.questionId = questionId;
  }

  public Questionnaire questionText(String questionText) {
    this.questionText = questionText;
    return this;
  }

   /**
   * Question text to be displayed to the end user.
   * @return questionText
  **/
  @Schema(example = "Who were you working for in December 2012?", description = "Question text to be displayed to the end user.")
  public String getQuestionText() {
    return questionText;
  }

  public void setQuestionText(String questionText) {
    this.questionText = questionText;
  }

  public Questionnaire questionType(String questionType) {
    this.questionType = questionType;
    return this;
  }

   /**
   * Type of question.
   * @return questionType
  **/
  @Schema(example = "MultipleChoicesSingleAnswer", description = "Type of question.")
  public String getQuestionType() {
    return questionType;
  }

  public void setQuestionType(String questionType) {
    this.questionType = questionType;
  }

  public Questionnaire timetakentoAnswer(Integer timetakentoAnswer) {
    this.timetakentoAnswer = timetakentoAnswer;
    return this;
  }

   /**
   * Time taken to answer this question by customer.
   * @return timetakentoAnswer
  **/
  @Schema(example = "300", description = "Time taken to answer this question by customer.")
  public Integer getTimetakentoAnswer() {
    return timetakentoAnswer;
  }

  public void setTimetakentoAnswer(Integer timetakentoAnswer) {
    this.timetakentoAnswer = timetakentoAnswer;
  }

  public Questionnaire responseOptions(List<ResponseOptions> responseOptions) {
    this.responseOptions = responseOptions;
    return this;
  }

  public Questionnaire addResponseOptionsItem(ResponseOptions responseOptionsItem) {
    if (this.responseOptions == null) {
      this.responseOptions = new ArrayList<ResponseOptions>();
    }
    this.responseOptions.add(responseOptionsItem);
    return this;
  }

   /**
   * Get responseOptions
   * @return responseOptions
  **/
  @Schema(description = "")
  public List<ResponseOptions> getResponseOptions() {
    return responseOptions;
  }

  public void setResponseOptions(List<ResponseOptions> responseOptions) {
    this.responseOptions = responseOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Questionnaire questionnaire = (Questionnaire) o;
    return Objects.equals(this.questionSequenceNumber, questionnaire.questionSequenceNumber) &&
        Objects.equals(this.questionnaireId, questionnaire.questionnaireId) &&
        Objects.equals(this.questionId, questionnaire.questionId) &&
        Objects.equals(this.questionText, questionnaire.questionText) &&
        Objects.equals(this.questionType, questionnaire.questionType) &&
        Objects.equals(this.timetakentoAnswer, questionnaire.timetakentoAnswer) &&
        Objects.equals(this.responseOptions, questionnaire.responseOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(questionSequenceNumber, questionnaireId, questionId, questionText, questionType, timetakentoAnswer, responseOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Questionnaire {\n");
    
    sb.append("    questionSequenceNumber: ").append(toIndentedString(questionSequenceNumber)).append("\n");
    sb.append("    questionnaireId: ").append(toIndentedString(questionnaireId)).append("\n");
    sb.append("    questionId: ").append(toIndentedString(questionId)).append("\n");
    sb.append("    questionText: ").append(toIndentedString(questionText)).append("\n");
    sb.append("    questionType: ").append(toIndentedString(questionType)).append("\n");
    sb.append("    timetakentoAnswer: ").append(toIndentedString(timetakentoAnswer)).append("\n");
    sb.append("    responseOptions: ").append(toIndentedString(responseOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
