/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApplicationInquiryApplicant;
import io.swagger.client.model.ApplicationInquiryCounterOffer;
import io.swagger.client.model.ApplicationInquiryCrossSellOffer;
import io.swagger.client.model.ApplicationInquiryProduct;
import io.swagger.client.model.ApplicationInquiryRequestedProductDecision;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * ApplicationInquiryResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicationInquiryResponse {
  @SerializedName("applicationStage")
  private String applicationStage = null;

  @SerializedName("hasAnySupplementaryFlag")
  private Boolean hasAnySupplementaryFlag = null;

  @SerializedName("ipaExpiryDate")
  private LocalDate ipaExpiryDate = null;

  @SerializedName("product")
  private ApplicationInquiryProduct product = null;

  @SerializedName("applicant")
  private ApplicationInquiryApplicant applicant = null;

  @SerializedName("requestedProductDecision")
  private List<ApplicationInquiryRequestedProductDecision> requestedProductDecision = null;

  @SerializedName("counterOffers")
  private List<ApplicationInquiryCounterOffer> counterOffers = null;

  @SerializedName("crossSellOffers")
  private List<ApplicationInquiryCrossSellOffer> crossSellOffers = null;

  public ApplicationInquiryResponse applicationStage(String applicationStage) {
    this.applicationStage = applicationStage;
    return this;
  }

   /**
   * Current stage of an application.This is a reference data field. Please use /v1/apac/utilities/referenceData/{applicationStage} resource to get possible value of this field with description. You can use applicationStage field name as the referenceCode parameter to retrieve the values.
   * @return applicationStage
  **/
  @Schema(example = "PRESCREENING", required = true, description = "Current stage of an application.This is a reference data field. Please use /v1/apac/utilities/referenceData/{applicationStage} resource to get possible value of this field with description. You can use applicationStage field name as the referenceCode parameter to retrieve the values.")
  public String getApplicationStage() {
    return applicationStage;
  }

  public void setApplicationStage(String applicationStage) {
    this.applicationStage = applicationStage;
  }

  public ApplicationInquiryResponse hasAnySupplementaryFlag(Boolean hasAnySupplementaryFlag) {
    this.hasAnySupplementaryFlag = hasAnySupplementaryFlag;
    return this;
  }

   /**
   * Flag indicating whether the primary applicant has any supplementary.
   * @return hasAnySupplementaryFlag
  **/
  @Schema(example = "true", description = "Flag indicating whether the primary applicant has any supplementary.")
  public Boolean isHasAnySupplementaryFlag() {
    return hasAnySupplementaryFlag;
  }

  public void setHasAnySupplementaryFlag(Boolean hasAnySupplementaryFlag) {
    this.hasAnySupplementaryFlag = hasAnySupplementaryFlag;
  }

  public ApplicationInquiryResponse ipaExpiryDate(LocalDate ipaExpiryDate) {
    this.ipaExpiryDate = ipaExpiryDate;
    return this;
  }

   /**
   * In principle approval expiration date in  ISO 8601 date format YYYY-MM-DD
   * @return ipaExpiryDate
  **/
  @Schema(example = "Sat Sep 15 00:00:00 UTC 2018", description = "In principle approval expiration date in  ISO 8601 date format YYYY-MM-DD")
  public LocalDate getIpaExpiryDate() {
    return ipaExpiryDate;
  }

  public void setIpaExpiryDate(LocalDate ipaExpiryDate) {
    this.ipaExpiryDate = ipaExpiryDate;
  }

  public ApplicationInquiryResponse product(ApplicationInquiryProduct product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @Schema(required = true, description = "")
  public ApplicationInquiryProduct getProduct() {
    return product;
  }

  public void setProduct(ApplicationInquiryProduct product) {
    this.product = product;
  }

  public ApplicationInquiryResponse applicant(ApplicationInquiryApplicant applicant) {
    this.applicant = applicant;
    return this;
  }

   /**
   * Get applicant
   * @return applicant
  **/
  @Schema(required = true, description = "")
  public ApplicationInquiryApplicant getApplicant() {
    return applicant;
  }

  public void setApplicant(ApplicationInquiryApplicant applicant) {
    this.applicant = applicant;
  }

  public ApplicationInquiryResponse requestedProductDecision(List<ApplicationInquiryRequestedProductDecision> requestedProductDecision) {
    this.requestedProductDecision = requestedProductDecision;
    return this;
  }

  public ApplicationInquiryResponse addRequestedProductDecisionItem(ApplicationInquiryRequestedProductDecision requestedProductDecisionItem) {
    if (this.requestedProductDecision == null) {
      this.requestedProductDecision = new ArrayList<ApplicationInquiryRequestedProductDecision>();
    }
    this.requestedProductDecision.add(requestedProductDecisionItem);
    return this;
  }

   /**
   * Get requestedProductDecision
   * @return requestedProductDecision
  **/
  @Schema(description = "")
  public List<ApplicationInquiryRequestedProductDecision> getRequestedProductDecision() {
    return requestedProductDecision;
  }

  public void setRequestedProductDecision(List<ApplicationInquiryRequestedProductDecision> requestedProductDecision) {
    this.requestedProductDecision = requestedProductDecision;
  }

  public ApplicationInquiryResponse counterOffers(List<ApplicationInquiryCounterOffer> counterOffers) {
    this.counterOffers = counterOffers;
    return this;
  }

  public ApplicationInquiryResponse addCounterOffersItem(ApplicationInquiryCounterOffer counterOffersItem) {
    if (this.counterOffers == null) {
      this.counterOffers = new ArrayList<ApplicationInquiryCounterOffer>();
    }
    this.counterOffers.add(counterOffersItem);
    return this;
  }

   /**
   * Get counterOffers
   * @return counterOffers
  **/
  @Schema(description = "")
  public List<ApplicationInquiryCounterOffer> getCounterOffers() {
    return counterOffers;
  }

  public void setCounterOffers(List<ApplicationInquiryCounterOffer> counterOffers) {
    this.counterOffers = counterOffers;
  }

  public ApplicationInquiryResponse crossSellOffers(List<ApplicationInquiryCrossSellOffer> crossSellOffers) {
    this.crossSellOffers = crossSellOffers;
    return this;
  }

  public ApplicationInquiryResponse addCrossSellOffersItem(ApplicationInquiryCrossSellOffer crossSellOffersItem) {
    if (this.crossSellOffers == null) {
      this.crossSellOffers = new ArrayList<ApplicationInquiryCrossSellOffer>();
    }
    this.crossSellOffers.add(crossSellOffersItem);
    return this;
  }

   /**
   * Get crossSellOffers
   * @return crossSellOffers
  **/
  @Schema(description = "")
  public List<ApplicationInquiryCrossSellOffer> getCrossSellOffers() {
    return crossSellOffers;
  }

  public void setCrossSellOffers(List<ApplicationInquiryCrossSellOffer> crossSellOffers) {
    this.crossSellOffers = crossSellOffers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationInquiryResponse applicationInquiryResponse = (ApplicationInquiryResponse) o;
    return Objects.equals(this.applicationStage, applicationInquiryResponse.applicationStage) &&
        Objects.equals(this.hasAnySupplementaryFlag, applicationInquiryResponse.hasAnySupplementaryFlag) &&
        Objects.equals(this.ipaExpiryDate, applicationInquiryResponse.ipaExpiryDate) &&
        Objects.equals(this.product, applicationInquiryResponse.product) &&
        Objects.equals(this.applicant, applicationInquiryResponse.applicant) &&
        Objects.equals(this.requestedProductDecision, applicationInquiryResponse.requestedProductDecision) &&
        Objects.equals(this.counterOffers, applicationInquiryResponse.counterOffers) &&
        Objects.equals(this.crossSellOffers, applicationInquiryResponse.crossSellOffers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationStage, hasAnySupplementaryFlag, ipaExpiryDate, product, applicant, requestedProductDecision, counterOffers, crossSellOffers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationInquiryResponse {\n");
    
    sb.append("    applicationStage: ").append(toIndentedString(applicationStage)).append("\n");
    sb.append("    hasAnySupplementaryFlag: ").append(toIndentedString(hasAnySupplementaryFlag)).append("\n");
    sb.append("    ipaExpiryDate: ").append(toIndentedString(ipaExpiryDate)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    applicant: ").append(toIndentedString(applicant)).append("\n");
    sb.append("    requestedProductDecision: ").append(toIndentedString(requestedProductDecision)).append("\n");
    sb.append("    counterOffers: ").append(toIndentedString(counterOffers)).append("\n");
    sb.append("    crossSellOffers: ").append(toIndentedString(crossSellOffers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
