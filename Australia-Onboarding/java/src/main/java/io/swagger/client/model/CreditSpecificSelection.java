/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CreditSpecificSelection
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class CreditSpecificSelection {
  @SerializedName("requestCreditShield")
  private Boolean requestCreditShield = null;

  @SerializedName("embossName")
  private String embossName = null;

  @SerializedName("billingAddress")
  private String billingAddress = null;

  @SerializedName("cardDeliveryAddress")
  private String cardDeliveryAddress = null;

  @SerializedName("pinDeliveryAddress")
  private String pinDeliveryAddress = null;

  @SerializedName("requestedCreditLimit")
  private Double requestedCreditLimit = null;

  @SerializedName("offeredCreditLimitAcceptedFlag")
  private Boolean offeredCreditLimitAcceptedFlag = null;

  @SerializedName("atmRequiredFlag")
  private Boolean atmRequiredFlag = null;

  @SerializedName("chequeBookRequiredFlag")
  private Boolean chequeBookRequiredFlag = null;

  @SerializedName("creditLimitIncreaseIndicator")
  private Boolean creditLimitIncreaseIndicator = null;

  public CreditSpecificSelection requestCreditShield(Boolean requestCreditShield) {
    this.requestCreditShield = requestCreditShield;
    return this;
  }

   /**
   * Insurance enrolment for outstanding balance on the card. Valid values: true and false
   * @return requestCreditShield
  **/
  @Schema(example = "true", description = "Insurance enrolment for outstanding balance on the card. Valid values: true and false")
  public Boolean isRequestCreditShield() {
    return requestCreditShield;
  }

  public void setRequestCreditShield(Boolean requestCreditShield) {
    this.requestCreditShield = requestCreditShield;
  }

  public CreditSpecificSelection embossName(String embossName) {
    this.embossName = embossName;
    return this;
  }

   /**
   * Name to be embossed on card
   * @return embossName
  **/
  @Schema(example = "Matthew Hyden", description = "Name to be embossed on card")
  public String getEmbossName() {
    return embossName;
  }

  public void setEmbossName(String embossName) {
    this.embossName = embossName;
  }

  public CreditSpecificSelection billingAddress(String billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Billing address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use billingAddress field as the referenceCode parameter to retrieve the values.
   * @return billingAddress
  **/
  @Schema(example = "HOME_ADDRESS", description = "Billing address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use billingAddress field as the referenceCode parameter to retrieve the values.")
  public String getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(String billingAddress) {
    this.billingAddress = billingAddress;
  }

  public CreditSpecificSelection cardDeliveryAddress(String cardDeliveryAddress) {
    this.cardDeliveryAddress = cardDeliveryAddress;
    return this;
  }

   /**
   * Card delivery address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use cardDeliveryAddress field name as the referenceCode parameter to retrieve the values.
   * @return cardDeliveryAddress
  **/
  @Schema(example = "HOME_ADDRESS", description = "Card delivery address of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid value of this field with description. You can use cardDeliveryAddress field name as the referenceCode parameter to retrieve the values.")
  public String getCardDeliveryAddress() {
    return cardDeliveryAddress;
  }

  public void setCardDeliveryAddress(String cardDeliveryAddress) {
    this.cardDeliveryAddress = cardDeliveryAddress;
  }

  public CreditSpecificSelection pinDeliveryAddress(String pinDeliveryAddress) {
    this.pinDeliveryAddress = pinDeliveryAddress;
    return this;
  }

   /**
   * Delivery address  for card pin of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid values of this field with descriptions. You can use pinDeliveryAddress field name as the referenceCode parameter to retrieve the values.
   * @return pinDeliveryAddress
  **/
  @Schema(example = "HOME_ADDRESS", description = "Delivery address  for card pin of applicant. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid values of this field with descriptions. You can use pinDeliveryAddress field name as the referenceCode parameter to retrieve the values.")
  public String getPinDeliveryAddress() {
    return pinDeliveryAddress;
  }

  public void setPinDeliveryAddress(String pinDeliveryAddress) {
    this.pinDeliveryAddress = pinDeliveryAddress;
  }

  public CreditSpecificSelection requestedCreditLimit(Double requestedCreditLimit) {
    this.requestedCreditLimit = requestedCreditLimit;
    return this;
  }

   /**
   * Credit limit accepted by customer
   * @return requestedCreditLimit
  **/
  @Schema(example = "25000.0", description = "Credit limit accepted by customer")
  public Double getRequestedCreditLimit() {
    return requestedCreditLimit;
  }

  public void setRequestedCreditLimit(Double requestedCreditLimit) {
    this.requestedCreditLimit = requestedCreditLimit;
  }

  public CreditSpecificSelection offeredCreditLimitAcceptedFlag(Boolean offeredCreditLimitAcceptedFlag) {
    this.offeredCreditLimitAcceptedFlag = offeredCreditLimitAcceptedFlag;
    return this;
  }

   /**
   * Consent to offered credit limit and If the customer has not accepted Bankâ€™s approved credit limit then requestedCreditLimit is mandatory. Valid values: true and false
   * @return offeredCreditLimitAcceptedFlag
  **/
  @Schema(example = "true", description = "Consent to offered credit limit and If the customer has not accepted Bankâ€™s approved credit limit then requestedCreditLimit is mandatory. Valid values: true and false")
  public Boolean isOfferedCreditLimitAcceptedFlag() {
    return offeredCreditLimitAcceptedFlag;
  }

  public void setOfferedCreditLimitAcceptedFlag(Boolean offeredCreditLimitAcceptedFlag) {
    this.offeredCreditLimitAcceptedFlag = offeredCreditLimitAcceptedFlag;
  }

  public CreditSpecificSelection atmRequiredFlag(Boolean atmRequiredFlag) {
    this.atmRequiredFlag = atmRequiredFlag;
    return this;
  }

   /**
   * Option to get ATM card along with product. Valid values: true and false
   * @return atmRequiredFlag
  **/
  @Schema(example = "true", description = "Option to get ATM card along with product. Valid values: true and false")
  public Boolean isAtmRequiredFlag() {
    return atmRequiredFlag;
  }

  public void setAtmRequiredFlag(Boolean atmRequiredFlag) {
    this.atmRequiredFlag = atmRequiredFlag;
  }

  public CreditSpecificSelection chequeBookRequiredFlag(Boolean chequeBookRequiredFlag) {
    this.chequeBookRequiredFlag = chequeBookRequiredFlag;
    return this;
  }

   /**
   * Option to get cheque book along with product. Valid values: true and false
   * @return chequeBookRequiredFlag
  **/
  @Schema(example = "true", description = "Option to get cheque book along with product. Valid values: true and false")
  public Boolean isChequeBookRequiredFlag() {
    return chequeBookRequiredFlag;
  }

  public void setChequeBookRequiredFlag(Boolean chequeBookRequiredFlag) {
    this.chequeBookRequiredFlag = chequeBookRequiredFlag;
  }

  public CreditSpecificSelection creditLimitIncreaseIndicator(Boolean creditLimitIncreaseIndicator) {
    this.creditLimitIncreaseIndicator = creditLimitIncreaseIndicator;
    return this;
  }

   /**
   * Option  to increase credit limit. Valid values: true and false
   * @return creditLimitIncreaseIndicator
  **/
  @Schema(example = "true", description = "Option  to increase credit limit. Valid values: true and false")
  public Boolean isCreditLimitIncreaseIndicator() {
    return creditLimitIncreaseIndicator;
  }

  public void setCreditLimitIncreaseIndicator(Boolean creditLimitIncreaseIndicator) {
    this.creditLimitIncreaseIndicator = creditLimitIncreaseIndicator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditSpecificSelection creditSpecificSelection = (CreditSpecificSelection) o;
    return Objects.equals(this.requestCreditShield, creditSpecificSelection.requestCreditShield) &&
        Objects.equals(this.embossName, creditSpecificSelection.embossName) &&
        Objects.equals(this.billingAddress, creditSpecificSelection.billingAddress) &&
        Objects.equals(this.cardDeliveryAddress, creditSpecificSelection.cardDeliveryAddress) &&
        Objects.equals(this.pinDeliveryAddress, creditSpecificSelection.pinDeliveryAddress) &&
        Objects.equals(this.requestedCreditLimit, creditSpecificSelection.requestedCreditLimit) &&
        Objects.equals(this.offeredCreditLimitAcceptedFlag, creditSpecificSelection.offeredCreditLimitAcceptedFlag) &&
        Objects.equals(this.atmRequiredFlag, creditSpecificSelection.atmRequiredFlag) &&
        Objects.equals(this.chequeBookRequiredFlag, creditSpecificSelection.chequeBookRequiredFlag) &&
        Objects.equals(this.creditLimitIncreaseIndicator, creditSpecificSelection.creditLimitIncreaseIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestCreditShield, embossName, billingAddress, cardDeliveryAddress, pinDeliveryAddress, requestedCreditLimit, offeredCreditLimitAcceptedFlag, atmRequiredFlag, chequeBookRequiredFlag, creditLimitIncreaseIndicator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditSpecificSelection {\n");
    
    sb.append("    requestCreditShield: ").append(toIndentedString(requestCreditShield)).append("\n");
    sb.append("    embossName: ").append(toIndentedString(embossName)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    cardDeliveryAddress: ").append(toIndentedString(cardDeliveryAddress)).append("\n");
    sb.append("    pinDeliveryAddress: ").append(toIndentedString(pinDeliveryAddress)).append("\n");
    sb.append("    requestedCreditLimit: ").append(toIndentedString(requestedCreditLimit)).append("\n");
    sb.append("    offeredCreditLimitAcceptedFlag: ").append(toIndentedString(offeredCreditLimitAcceptedFlag)).append("\n");
    sb.append("    atmRequiredFlag: ").append(toIndentedString(atmRequiredFlag)).append("\n");
    sb.append("    chequeBookRequiredFlag: ").append(toIndentedString(chequeBookRequiredFlag)).append("\n");
    sb.append("    creditLimitIncreaseIndicator: ").append(toIndentedString(creditLimitIncreaseIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
