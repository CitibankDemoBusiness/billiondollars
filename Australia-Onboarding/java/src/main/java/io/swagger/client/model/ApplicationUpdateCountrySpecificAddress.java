/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ApplicationUpdateCountrySpecificAddress
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicationUpdateCountrySpecificAddress {
  @SerializedName("unitNumber")
  private String unitNumber = null;

  @SerializedName("floorNumber")
  private String floorNumber = null;

  @SerializedName("blockNumber")
  private String blockNumber = null;

  @SerializedName("buildingName")
  private String buildingName = null;

  @SerializedName("estateName")
  private String estateName = null;

  @SerializedName("streetNumber")
  private String streetNumber = null;

  @SerializedName("streetName")
  private String streetName = null;

  @SerializedName("streetType")
  private String streetType = null;

  @SerializedName("town")
  private String town = null;

  public ApplicationUpdateCountrySpecificAddress unitNumber(String unitNumber) {
    this.unitNumber = unitNumber;
    return this;
  }

   /**
   * Unit Number
   * @return unitNumber
  **/
  @Schema(example = "99", description = "Unit Number")
  public String getUnitNumber() {
    return unitNumber;
  }

  public void setUnitNumber(String unitNumber) {
    this.unitNumber = unitNumber;
  }

  public ApplicationUpdateCountrySpecificAddress floorNumber(String floorNumber) {
    this.floorNumber = floorNumber;
    return this;
  }

   /**
   * Floor Number
   * @return floorNumber
  **/
  @Schema(example = "18", description = "Floor Number")
  public String getFloorNumber() {
    return floorNumber;
  }

  public void setFloorNumber(String floorNumber) {
    this.floorNumber = floorNumber;
  }

  public ApplicationUpdateCountrySpecificAddress blockNumber(String blockNumber) {
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Block Number
   * @return blockNumber
  **/
  @Schema(example = "19", description = "Block Number")
  public String getBlockNumber() {
    return blockNumber;
  }

  public void setBlockNumber(String blockNumber) {
    this.blockNumber = blockNumber;
  }

  public ApplicationUpdateCountrySpecificAddress buildingName(String buildingName) {
    this.buildingName = buildingName;
    return this;
  }

   /**
   * Building Name
   * @return buildingName
  **/
  @Schema(example = "Estella", description = "Building Name")
  public String getBuildingName() {
    return buildingName;
  }

  public void setBuildingName(String buildingName) {
    this.buildingName = buildingName;
  }

  public ApplicationUpdateCountrySpecificAddress estateName(String estateName) {
    this.estateName = estateName;
    return this;
  }

   /**
   * Estate Name
   * @return estateName
  **/
  @Schema(example = "Marine Parade", description = "Estate Name")
  public String getEstateName() {
    return estateName;
  }

  public void setEstateName(String estateName) {
    this.estateName = estateName;
  }

  public ApplicationUpdateCountrySpecificAddress streetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
    return this;
  }

   /**
   * Street Number
   * @return streetNumber
  **/
  @Schema(example = "52", description = "Street Number")
  public String getStreetNumber() {
    return streetNumber;
  }

  public void setStreetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
  }

  public ApplicationUpdateCountrySpecificAddress streetName(String streetName) {
    this.streetName = streetName;
    return this;
  }

   /**
   * Street Name
   * @return streetName
  **/
  @Schema(example = "Marine Parade", description = "Street Name")
  public String getStreetName() {
    return streetName;
  }

  public void setStreetName(String streetName) {
    this.streetName = streetName;
  }

  public ApplicationUpdateCountrySpecificAddress streetType(String streetType) {
    this.streetType = streetType;
    return this;
  }

   /**
   * Applicant&#x27;s street Type.Please use /v1/apac/utilities/referenceData/{streetType} resource to get valid value of this field with description. You can use streetType field name as the referenceCode parameter to retrieve the values
   * @return streetType
  **/
  @Schema(example = "ARCADE", description = "Applicant's street Type.Please use /v1/apac/utilities/referenceData/{streetType} resource to get valid value of this field with description. You can use streetType field name as the referenceCode parameter to retrieve the values")
  public String getStreetType() {
    return streetType;
  }

  public void setStreetType(String streetType) {
    this.streetType = streetType;
  }

  public ApplicationUpdateCountrySpecificAddress town(String town) {
    this.town = town;
    return this;
  }

   /**
   * Town
   * @return town
  **/
  @Schema(example = "SG", description = "Town")
  public String getTown() {
    return town;
  }

  public void setTown(String town) {
    this.town = town;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationUpdateCountrySpecificAddress applicationUpdateCountrySpecificAddress = (ApplicationUpdateCountrySpecificAddress) o;
    return Objects.equals(this.unitNumber, applicationUpdateCountrySpecificAddress.unitNumber) &&
        Objects.equals(this.floorNumber, applicationUpdateCountrySpecificAddress.floorNumber) &&
        Objects.equals(this.blockNumber, applicationUpdateCountrySpecificAddress.blockNumber) &&
        Objects.equals(this.buildingName, applicationUpdateCountrySpecificAddress.buildingName) &&
        Objects.equals(this.estateName, applicationUpdateCountrySpecificAddress.estateName) &&
        Objects.equals(this.streetNumber, applicationUpdateCountrySpecificAddress.streetNumber) &&
        Objects.equals(this.streetName, applicationUpdateCountrySpecificAddress.streetName) &&
        Objects.equals(this.streetType, applicationUpdateCountrySpecificAddress.streetType) &&
        Objects.equals(this.town, applicationUpdateCountrySpecificAddress.town);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unitNumber, floorNumber, blockNumber, buildingName, estateName, streetNumber, streetName, streetType, town);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationUpdateCountrySpecificAddress {\n");
    
    sb.append("    unitNumber: ").append(toIndentedString(unitNumber)).append("\n");
    sb.append("    floorNumber: ").append(toIndentedString(floorNumber)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    buildingName: ").append(toIndentedString(buildingName)).append("\n");
    sb.append("    estateName: ").append(toIndentedString(estateName)).append("\n");
    sb.append("    streetNumber: ").append(toIndentedString(streetNumber)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    streetType: ").append(toIndentedString(streetType)).append("\n");
    sb.append("    town: ").append(toIndentedString(town)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
