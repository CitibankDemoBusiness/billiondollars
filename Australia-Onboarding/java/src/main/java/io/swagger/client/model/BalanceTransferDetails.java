/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BalanceTransferDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class BalanceTransferDetails {
  @SerializedName("amountToTransfer")
  private Double amountToTransfer = null;

  @SerializedName("issuingOrganizationName")
  private String issuingOrganizationName = null;

  @SerializedName("accountName")
  private String accountName = null;

  @SerializedName("accountReferenceNumber")
  private String accountReferenceNumber = null;

  @SerializedName("billerCode")
  private String billerCode = null;

  @SerializedName("campaignId")
  private String campaignId = null;

  @SerializedName("paymentType")
  private String paymentType = null;

  @SerializedName("bsbCode")
  private String bsbCode = null;

  public BalanceTransferDetails amountToTransfer(Double amountToTransfer) {
    this.amountToTransfer = amountToTransfer;
    return this;
  }

   /**
   * Amount to Transfer
   * @return amountToTransfer
  **/
  @Schema(example = "5000.25", required = true, description = "Amount to Transfer")
  public Double getAmountToTransfer() {
    return amountToTransfer;
  }

  public void setAmountToTransfer(Double amountToTransfer) {
    this.amountToTransfer = amountToTransfer;
  }

  public BalanceTransferDetails issuingOrganizationName(String issuingOrganizationName) {
    this.issuingOrganizationName = issuingOrganizationName;
    return this;
  }

   /**
   * Name of the Organization to which the fund has to be transferred. This is a reference data field. Please use /v1/utilities/referenceData/{cardIssuingOrganization} resource to get valid value of this field with description.
   * @return issuingOrganizationName
  **/
  @Schema(example = "VOYAGER", description = "Name of the Organization to which the fund has to be transferred. This is a reference data field. Please use /v1/utilities/referenceData/{cardIssuingOrganization} resource to get valid value of this field with description.")
  public String getIssuingOrganizationName() {
    return issuingOrganizationName;
  }

  public void setIssuingOrganizationName(String issuingOrganizationName) {
    this.issuingOrganizationName = issuingOrganizationName;
  }

  public BalanceTransferDetails accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * Customer&#x27;s account Name
   * @return accountName
  **/
  @Schema(example = "Matt", description = "Customer's account Name")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public BalanceTransferDetails accountReferenceNumber(String accountReferenceNumber) {
    this.accountReferenceNumber = accountReferenceNumber;
    return this;
  }

   /**
   * Customer&#x27;s account reference number with biller.
   * @return accountReferenceNumber
  **/
  @Schema(example = "521212345121", description = "Customer's account reference number with biller.")
  public String getAccountReferenceNumber() {
    return accountReferenceNumber;
  }

  public void setAccountReferenceNumber(String accountReferenceNumber) {
    this.accountReferenceNumber = accountReferenceNumber;
  }

  public BalanceTransferDetails billerCode(String billerCode) {
    this.billerCode = billerCode;
    return this;
  }

   /**
   * It is a unique code to identify a BPAY biller
   * @return billerCode
  **/
  @Schema(example = "11000125", description = "It is a unique code to identify a BPAY biller")
  public String getBillerCode() {
    return billerCode;
  }

  public void setBillerCode(String billerCode) {
    this.billerCode = billerCode;
  }

  public BalanceTransferDetails campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * Campaign code of the balance transfer.
   * @return campaignId
  **/
  @Schema(example = "C$11785241", description = "Campaign code of the balance transfer.")
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }

  public BalanceTransferDetails paymentType(String paymentType) {
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Mode of payment.This is a reference data field. Please use /v1/apac/utilities/referenceData/{paymentType} resource to get valid value of this field with description. You can use paymentType field name as the referenceCode parameter to retrieve the values.
   * @return paymentType
  **/
  @Schema(example = "EXTERNAL_TRANSFER OR BPAY", description = "Mode of payment.This is a reference data field. Please use /v1/apac/utilities/referenceData/{paymentType} resource to get valid value of this field with description. You can use paymentType field name as the referenceCode parameter to retrieve the values.")
  public String getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }

  public BalanceTransferDetails bsbCode(String bsbCode) {
    this.bsbCode = bsbCode;
    return this;
  }

   /**
   * BSB Code for EFT payment mode.
   * @return bsbCode
  **/
  @Schema(example = "123456", description = "BSB Code for EFT payment mode.")
  public String getBsbCode() {
    return bsbCode;
  }

  public void setBsbCode(String bsbCode) {
    this.bsbCode = bsbCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BalanceTransferDetails balanceTransferDetails = (BalanceTransferDetails) o;
    return Objects.equals(this.amountToTransfer, balanceTransferDetails.amountToTransfer) &&
        Objects.equals(this.issuingOrganizationName, balanceTransferDetails.issuingOrganizationName) &&
        Objects.equals(this.accountName, balanceTransferDetails.accountName) &&
        Objects.equals(this.accountReferenceNumber, balanceTransferDetails.accountReferenceNumber) &&
        Objects.equals(this.billerCode, balanceTransferDetails.billerCode) &&
        Objects.equals(this.campaignId, balanceTransferDetails.campaignId) &&
        Objects.equals(this.paymentType, balanceTransferDetails.paymentType) &&
        Objects.equals(this.bsbCode, balanceTransferDetails.bsbCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountToTransfer, issuingOrganizationName, accountName, accountReferenceNumber, billerCode, campaignId, paymentType, bsbCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BalanceTransferDetails {\n");
    
    sb.append("    amountToTransfer: ").append(toIndentedString(amountToTransfer)).append("\n");
    sb.append("    issuingOrganizationName: ").append(toIndentedString(issuingOrganizationName)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    accountReferenceNumber: ").append(toIndentedString(accountReferenceNumber)).append("\n");
    sb.append("    billerCode: ").append(toIndentedString(billerCode)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    bsbCode: ").append(toIndentedString(bsbCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
