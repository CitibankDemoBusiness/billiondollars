/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ECMCountrySpecificGroup;
import io.swagger.client.model.ReferralTracking;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ECMAdditionalData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ECMAdditionalData {
  @SerializedName("feeCode")
  private String feeCode = null;

  @SerializedName("countrySpecificGroup")
  private ECMCountrySpecificGroup countrySpecificGroup = null;

  @SerializedName("introducerId")
  private String introducerId = null;

  @SerializedName("referralTracking")
  private ReferralTracking referralTracking = null;

  @SerializedName("mediaId")
  private String mediaId = null;

  public ECMAdditionalData feeCode(String feeCode) {
    this.feeCode = feeCode;
    return this;
  }

   /**
   * Fee code that applied to the requested product
   * @return feeCode
  **/
  @Schema(description = "Fee code that applied to the requested product")
  public String getFeeCode() {
    return feeCode;
  }

  public void setFeeCode(String feeCode) {
    this.feeCode = feeCode;
  }

  public ECMAdditionalData countrySpecificGroup(ECMCountrySpecificGroup countrySpecificGroup) {
    this.countrySpecificGroup = countrySpecificGroup;
    return this;
  }

   /**
   * Get countrySpecificGroup
   * @return countrySpecificGroup
  **/
  @Schema(description = "")
  public ECMCountrySpecificGroup getCountrySpecificGroup() {
    return countrySpecificGroup;
  }

  public void setCountrySpecificGroup(ECMCountrySpecificGroup countrySpecificGroup) {
    this.countrySpecificGroup = countrySpecificGroup;
  }

  public ECMAdditionalData introducerId(String introducerId) {
    this.introducerId = introducerId;
    return this;
  }

   /**
   * Unique identifier associated with the introducer who had referred the applicant.
   * @return introducerId
  **/
  @Schema(description = "Unique identifier associated with the introducer who had referred the applicant.")
  public String getIntroducerId() {
    return introducerId;
  }

  public void setIntroducerId(String introducerId) {
    this.introducerId = introducerId;
  }

  public ECMAdditionalData referralTracking(ReferralTracking referralTracking) {
    this.referralTracking = referralTracking;
    return this;
  }

   /**
   * Get referralTracking
   * @return referralTracking
  **/
  @Schema(description = "")
  public ReferralTracking getReferralTracking() {
    return referralTracking;
  }

  public void setReferralTracking(ReferralTracking referralTracking) {
    this.referralTracking = referralTracking;
  }

  public ECMAdditionalData mediaId(String mediaId) {
    this.mediaId = mediaId;
    return this;
  }

   /**
   * The media ID will be used to determine which offer/campaign banner was clicked when the customer has submitted the application
   * @return mediaId
  **/
  @Schema(example = "71580", description = "The media ID will be used to determine which offer/campaign banner was clicked when the customer has submitted the application")
  public String getMediaId() {
    return mediaId;
  }

  public void setMediaId(String mediaId) {
    this.mediaId = mediaId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECMAdditionalData ecMAdditionalData = (ECMAdditionalData) o;
    return Objects.equals(this.feeCode, ecMAdditionalData.feeCode) &&
        Objects.equals(this.countrySpecificGroup, ecMAdditionalData.countrySpecificGroup) &&
        Objects.equals(this.introducerId, ecMAdditionalData.introducerId) &&
        Objects.equals(this.referralTracking, ecMAdditionalData.referralTracking) &&
        Objects.equals(this.mediaId, ecMAdditionalData.mediaId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feeCode, countrySpecificGroup, introducerId, referralTracking, mediaId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECMAdditionalData {\n");
    
    sb.append("    feeCode: ").append(toIndentedString(feeCode)).append("\n");
    sb.append("    countrySpecificGroup: ").append(toIndentedString(countrySpecificGroup)).append("\n");
    sb.append("    introducerId: ").append(toIndentedString(introducerId)).append("\n");
    sb.append("    referralTracking: ").append(toIndentedString(referralTracking)).append("\n");
    sb.append("    mediaId: ").append(toIndentedString(mediaId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
