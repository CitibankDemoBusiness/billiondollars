/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApplicationInquiryAdditionalData;
import io.swagger.client.model.ApplicationInquiryAddress;
import io.swagger.client.model.ApplicationInquiryConsentDetails;
import io.swagger.client.model.ApplicationInquiryContactConsent;
import io.swagger.client.model.ApplicationInquiryContactPreference;
import io.swagger.client.model.ApplicationInquiryDemographics;
import io.swagger.client.model.ApplicationInquiryEducation;
import io.swagger.client.model.ApplicationInquiryEmail;
import io.swagger.client.model.ApplicationInquiryEmploymentDetails;
import io.swagger.client.model.ApplicationInquiryFinancialInformation;
import io.swagger.client.model.ApplicationInquiryIdentificationDocumentDetails;
import io.swagger.client.model.ApplicationInquiryKycInformation;
import io.swagger.client.model.ApplicationInquiryMarketingConsent;
import io.swagger.client.model.ApplicationInquiryName;
import io.swagger.client.model.ApplicationInquiryPartnerCustomerDetails;
import io.swagger.client.model.ApplicationInquiryPhone;
import io.swagger.client.model.ApplicationInquirySelfDeclaration;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ApplicationInquiryApplicant
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicationInquiryApplicant {
  @SerializedName("motherMaidenName")
  private String motherMaidenName = null;

  @SerializedName("name")
  private ApplicationInquiryName name = null;

  @SerializedName("demographics")
  private ApplicationInquiryDemographics demographics = null;

  @SerializedName("address")
  private List<ApplicationInquiryAddress> address = null;

  @SerializedName("email")
  private List<ApplicationInquiryEmail> email = null;

  @SerializedName("phone")
  private List<ApplicationInquiryPhone> phone = new ArrayList<ApplicationInquiryPhone>();

  @SerializedName("contactPreference")
  private ApplicationInquiryContactPreference contactPreference = null;

  @SerializedName("contactConsent")
  private ApplicationInquiryContactConsent contactConsent = null;

  @SerializedName("financialInformation")
  private ApplicationInquiryFinancialInformation financialInformation = null;

  @SerializedName("education")
  private ApplicationInquiryEducation education = null;

  @SerializedName("employmentDetails")
  private List<ApplicationInquiryEmploymentDetails> employmentDetails = null;

  @SerializedName("identificationDocumentDetails")
  private List<ApplicationInquiryIdentificationDocumentDetails> identificationDocumentDetails = null;

  @SerializedName("additionalData")
  private ApplicationInquiryAdditionalData additionalData = null;

  @SerializedName("partnerCustomerDetails")
  private ApplicationInquiryPartnerCustomerDetails partnerCustomerDetails = null;

  @SerializedName("consentDetails")
  private List<ApplicationInquiryConsentDetails> consentDetails = null;

  @SerializedName("marketingConsent")
  private ApplicationInquiryMarketingConsent marketingConsent = null;

  @SerializedName("selfDeclaration")
  private ApplicationInquirySelfDeclaration selfDeclaration = null;

  @SerializedName("kycInformation")
  private ApplicationInquiryKycInformation kycInformation = null;

  public ApplicationInquiryApplicant motherMaidenName(String motherMaidenName) {
    this.motherMaidenName = motherMaidenName;
    return this;
  }

   /**
   * Mother&#x27;s maiden name
   * @return motherMaidenName
  **/
  @Schema(example = "Lisa", description = "Mother's maiden name")
  public String getMotherMaidenName() {
    return motherMaidenName;
  }

  public void setMotherMaidenName(String motherMaidenName) {
    this.motherMaidenName = motherMaidenName;
  }

  public ApplicationInquiryApplicant name(ApplicationInquiryName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public ApplicationInquiryName getName() {
    return name;
  }

  public void setName(ApplicationInquiryName name) {
    this.name = name;
  }

  public ApplicationInquiryApplicant demographics(ApplicationInquiryDemographics demographics) {
    this.demographics = demographics;
    return this;
  }

   /**
   * Get demographics
   * @return demographics
  **/
  @Schema(description = "")
  public ApplicationInquiryDemographics getDemographics() {
    return demographics;
  }

  public void setDemographics(ApplicationInquiryDemographics demographics) {
    this.demographics = demographics;
  }

  public ApplicationInquiryApplicant address(List<ApplicationInquiryAddress> address) {
    this.address = address;
    return this;
  }

  public ApplicationInquiryApplicant addAddressItem(ApplicationInquiryAddress addressItem) {
    if (this.address == null) {
      this.address = new ArrayList<ApplicationInquiryAddress>();
    }
    this.address.add(addressItem);
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public List<ApplicationInquiryAddress> getAddress() {
    return address;
  }

  public void setAddress(List<ApplicationInquiryAddress> address) {
    this.address = address;
  }

  public ApplicationInquiryApplicant email(List<ApplicationInquiryEmail> email) {
    this.email = email;
    return this;
  }

  public ApplicationInquiryApplicant addEmailItem(ApplicationInquiryEmail emailItem) {
    if (this.email == null) {
      this.email = new ArrayList<ApplicationInquiryEmail>();
    }
    this.email.add(emailItem);
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public List<ApplicationInquiryEmail> getEmail() {
    return email;
  }

  public void setEmail(List<ApplicationInquiryEmail> email) {
    this.email = email;
  }

  public ApplicationInquiryApplicant phone(List<ApplicationInquiryPhone> phone) {
    this.phone = phone;
    return this;
  }

  public ApplicationInquiryApplicant addPhoneItem(ApplicationInquiryPhone phoneItem) {
    this.phone.add(phoneItem);
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(required = true, description = "")
  public List<ApplicationInquiryPhone> getPhone() {
    return phone;
  }

  public void setPhone(List<ApplicationInquiryPhone> phone) {
    this.phone = phone;
  }

  public ApplicationInquiryApplicant contactPreference(ApplicationInquiryContactPreference contactPreference) {
    this.contactPreference = contactPreference;
    return this;
  }

   /**
   * Get contactPreference
   * @return contactPreference
  **/
  @Schema(description = "")
  public ApplicationInquiryContactPreference getContactPreference() {
    return contactPreference;
  }

  public void setContactPreference(ApplicationInquiryContactPreference contactPreference) {
    this.contactPreference = contactPreference;
  }

  public ApplicationInquiryApplicant contactConsent(ApplicationInquiryContactConsent contactConsent) {
    this.contactConsent = contactConsent;
    return this;
  }

   /**
   * Get contactConsent
   * @return contactConsent
  **/
  @Schema(description = "")
  public ApplicationInquiryContactConsent getContactConsent() {
    return contactConsent;
  }

  public void setContactConsent(ApplicationInquiryContactConsent contactConsent) {
    this.contactConsent = contactConsent;
  }

  public ApplicationInquiryApplicant financialInformation(ApplicationInquiryFinancialInformation financialInformation) {
    this.financialInformation = financialInformation;
    return this;
  }

   /**
   * Get financialInformation
   * @return financialInformation
  **/
  @Schema(description = "")
  public ApplicationInquiryFinancialInformation getFinancialInformation() {
    return financialInformation;
  }

  public void setFinancialInformation(ApplicationInquiryFinancialInformation financialInformation) {
    this.financialInformation = financialInformation;
  }

  public ApplicationInquiryApplicant education(ApplicationInquiryEducation education) {
    this.education = education;
    return this;
  }

   /**
   * Get education
   * @return education
  **/
  @Schema(description = "")
  public ApplicationInquiryEducation getEducation() {
    return education;
  }

  public void setEducation(ApplicationInquiryEducation education) {
    this.education = education;
  }

  public ApplicationInquiryApplicant employmentDetails(List<ApplicationInquiryEmploymentDetails> employmentDetails) {
    this.employmentDetails = employmentDetails;
    return this;
  }

  public ApplicationInquiryApplicant addEmploymentDetailsItem(ApplicationInquiryEmploymentDetails employmentDetailsItem) {
    if (this.employmentDetails == null) {
      this.employmentDetails = new ArrayList<ApplicationInquiryEmploymentDetails>();
    }
    this.employmentDetails.add(employmentDetailsItem);
    return this;
  }

   /**
   * Get employmentDetails
   * @return employmentDetails
  **/
  @Schema(description = "")
  public List<ApplicationInquiryEmploymentDetails> getEmploymentDetails() {
    return employmentDetails;
  }

  public void setEmploymentDetails(List<ApplicationInquiryEmploymentDetails> employmentDetails) {
    this.employmentDetails = employmentDetails;
  }

  public ApplicationInquiryApplicant identificationDocumentDetails(List<ApplicationInquiryIdentificationDocumentDetails> identificationDocumentDetails) {
    this.identificationDocumentDetails = identificationDocumentDetails;
    return this;
  }

  public ApplicationInquiryApplicant addIdentificationDocumentDetailsItem(ApplicationInquiryIdentificationDocumentDetails identificationDocumentDetailsItem) {
    if (this.identificationDocumentDetails == null) {
      this.identificationDocumentDetails = new ArrayList<ApplicationInquiryIdentificationDocumentDetails>();
    }
    this.identificationDocumentDetails.add(identificationDocumentDetailsItem);
    return this;
  }

   /**
   * Get identificationDocumentDetails
   * @return identificationDocumentDetails
  **/
  @Schema(description = "")
  public List<ApplicationInquiryIdentificationDocumentDetails> getIdentificationDocumentDetails() {
    return identificationDocumentDetails;
  }

  public void setIdentificationDocumentDetails(List<ApplicationInquiryIdentificationDocumentDetails> identificationDocumentDetails) {
    this.identificationDocumentDetails = identificationDocumentDetails;
  }

  public ApplicationInquiryApplicant additionalData(ApplicationInquiryAdditionalData additionalData) {
    this.additionalData = additionalData;
    return this;
  }

   /**
   * Get additionalData
   * @return additionalData
  **/
  @Schema(description = "")
  public ApplicationInquiryAdditionalData getAdditionalData() {
    return additionalData;
  }

  public void setAdditionalData(ApplicationInquiryAdditionalData additionalData) {
    this.additionalData = additionalData;
  }

  public ApplicationInquiryApplicant partnerCustomerDetails(ApplicationInquiryPartnerCustomerDetails partnerCustomerDetails) {
    this.partnerCustomerDetails = partnerCustomerDetails;
    return this;
  }

   /**
   * Get partnerCustomerDetails
   * @return partnerCustomerDetails
  **/
  @Schema(description = "")
  public ApplicationInquiryPartnerCustomerDetails getPartnerCustomerDetails() {
    return partnerCustomerDetails;
  }

  public void setPartnerCustomerDetails(ApplicationInquiryPartnerCustomerDetails partnerCustomerDetails) {
    this.partnerCustomerDetails = partnerCustomerDetails;
  }

  public ApplicationInquiryApplicant consentDetails(List<ApplicationInquiryConsentDetails> consentDetails) {
    this.consentDetails = consentDetails;
    return this;
  }

  public ApplicationInquiryApplicant addConsentDetailsItem(ApplicationInquiryConsentDetails consentDetailsItem) {
    if (this.consentDetails == null) {
      this.consentDetails = new ArrayList<ApplicationInquiryConsentDetails>();
    }
    this.consentDetails.add(consentDetailsItem);
    return this;
  }

   /**
   * Get consentDetails
   * @return consentDetails
  **/
  @Schema(description = "")
  public List<ApplicationInquiryConsentDetails> getConsentDetails() {
    return consentDetails;
  }

  public void setConsentDetails(List<ApplicationInquiryConsentDetails> consentDetails) {
    this.consentDetails = consentDetails;
  }

  public ApplicationInquiryApplicant marketingConsent(ApplicationInquiryMarketingConsent marketingConsent) {
    this.marketingConsent = marketingConsent;
    return this;
  }

   /**
   * Get marketingConsent
   * @return marketingConsent
  **/
  @Schema(description = "")
  public ApplicationInquiryMarketingConsent getMarketingConsent() {
    return marketingConsent;
  }

  public void setMarketingConsent(ApplicationInquiryMarketingConsent marketingConsent) {
    this.marketingConsent = marketingConsent;
  }

  public ApplicationInquiryApplicant selfDeclaration(ApplicationInquirySelfDeclaration selfDeclaration) {
    this.selfDeclaration = selfDeclaration;
    return this;
  }

   /**
   * Get selfDeclaration
   * @return selfDeclaration
  **/
  @Schema(description = "")
  public ApplicationInquirySelfDeclaration getSelfDeclaration() {
    return selfDeclaration;
  }

  public void setSelfDeclaration(ApplicationInquirySelfDeclaration selfDeclaration) {
    this.selfDeclaration = selfDeclaration;
  }

  public ApplicationInquiryApplicant kycInformation(ApplicationInquiryKycInformation kycInformation) {
    this.kycInformation = kycInformation;
    return this;
  }

   /**
   * Get kycInformation
   * @return kycInformation
  **/
  @Schema(description = "")
  public ApplicationInquiryKycInformation getKycInformation() {
    return kycInformation;
  }

  public void setKycInformation(ApplicationInquiryKycInformation kycInformation) {
    this.kycInformation = kycInformation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationInquiryApplicant applicationInquiryApplicant = (ApplicationInquiryApplicant) o;
    return Objects.equals(this.motherMaidenName, applicationInquiryApplicant.motherMaidenName) &&
        Objects.equals(this.name, applicationInquiryApplicant.name) &&
        Objects.equals(this.demographics, applicationInquiryApplicant.demographics) &&
        Objects.equals(this.address, applicationInquiryApplicant.address) &&
        Objects.equals(this.email, applicationInquiryApplicant.email) &&
        Objects.equals(this.phone, applicationInquiryApplicant.phone) &&
        Objects.equals(this.contactPreference, applicationInquiryApplicant.contactPreference) &&
        Objects.equals(this.contactConsent, applicationInquiryApplicant.contactConsent) &&
        Objects.equals(this.financialInformation, applicationInquiryApplicant.financialInformation) &&
        Objects.equals(this.education, applicationInquiryApplicant.education) &&
        Objects.equals(this.employmentDetails, applicationInquiryApplicant.employmentDetails) &&
        Objects.equals(this.identificationDocumentDetails, applicationInquiryApplicant.identificationDocumentDetails) &&
        Objects.equals(this.additionalData, applicationInquiryApplicant.additionalData) &&
        Objects.equals(this.partnerCustomerDetails, applicationInquiryApplicant.partnerCustomerDetails) &&
        Objects.equals(this.consentDetails, applicationInquiryApplicant.consentDetails) &&
        Objects.equals(this.marketingConsent, applicationInquiryApplicant.marketingConsent) &&
        Objects.equals(this.selfDeclaration, applicationInquiryApplicant.selfDeclaration) &&
        Objects.equals(this.kycInformation, applicationInquiryApplicant.kycInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(motherMaidenName, name, demographics, address, email, phone, contactPreference, contactConsent, financialInformation, education, employmentDetails, identificationDocumentDetails, additionalData, partnerCustomerDetails, consentDetails, marketingConsent, selfDeclaration, kycInformation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationInquiryApplicant {\n");
    
    sb.append("    motherMaidenName: ").append(toIndentedString(motherMaidenName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    demographics: ").append(toIndentedString(demographics)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    contactPreference: ").append(toIndentedString(contactPreference)).append("\n");
    sb.append("    contactConsent: ").append(toIndentedString(contactConsent)).append("\n");
    sb.append("    financialInformation: ").append(toIndentedString(financialInformation)).append("\n");
    sb.append("    education: ").append(toIndentedString(education)).append("\n");
    sb.append("    employmentDetails: ").append(toIndentedString(employmentDetails)).append("\n");
    sb.append("    identificationDocumentDetails: ").append(toIndentedString(identificationDocumentDetails)).append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    partnerCustomerDetails: ").append(toIndentedString(partnerCustomerDetails)).append("\n");
    sb.append("    consentDetails: ").append(toIndentedString(consentDetails)).append("\n");
    sb.append("    marketingConsent: ").append(toIndentedString(marketingConsent)).append("\n");
    sb.append("    selfDeclaration: ").append(toIndentedString(selfDeclaration)).append("\n");
    sb.append("    kycInformation: ").append(toIndentedString(kycInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
