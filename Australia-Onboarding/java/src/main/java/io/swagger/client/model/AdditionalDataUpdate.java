/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CountrySpecificGroup;
import io.swagger.client.model.PrimaryBankDetails;
import io.swagger.client.model.ReferralTracking;
import io.swagger.client.model.TradeReferenceDetails;
import io.swagger.client.model.UtilityBillDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * AdditionalDataUpdate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class AdditionalDataUpdate {
  @SerializedName("accountFundSource")
  private String accountFundSource = null;

  @SerializedName("numberOfDependents")
  private BigDecimal numberOfDependents = null;

  @SerializedName("staffIndicator")
  private Boolean staffIndicator = null;

  @SerializedName("otpAuthenticationSuccessFlag")
  private Boolean otpAuthenticationSuccessFlag = null;

  @SerializedName("bureauDataPrePopulateConsentFlag")
  private Boolean bureauDataPrePopulateConsentFlag = null;

  @SerializedName("businessNature")
  private String businessNature = null;

  @SerializedName("emergencyContactName")
  private String emergencyContactName = null;

  @SerializedName("emergencyContactSurname")
  private String emergencyContactSurname = null;

  @SerializedName("emergencyContactRelationship")
  private String emergencyContactRelationship = null;

  @SerializedName("emergencyContactPhoneNumber")
  private String emergencyContactPhoneNumber = null;

  @SerializedName("overLimitConsentFlag")
  private Boolean overLimitConsentFlag = null;

  @SerializedName("countrySpecificGroup")
  private CountrySpecificGroup countrySpecificGroup = null;

  @SerializedName("primaryBankDetails")
  private PrimaryBankDetails primaryBankDetails = null;

  @SerializedName("referralGivenName")
  private String referralGivenName = null;

  @SerializedName("referralSurname")
  private String referralSurname = null;

  @SerializedName("introducerId")
  private String introducerId = null;

  @SerializedName("relatedToCitiEmployeeFlag")
  private Boolean relatedToCitiEmployeeFlag = null;

  @SerializedName("relatedCitiEmployeeName")
  private String relatedCitiEmployeeName = null;

  @SerializedName("relatedCitiEmployeeDepartment")
  private String relatedCitiEmployeeDepartment = null;

  @SerializedName("creditCardUsagePurpose")
  private String creditCardUsagePurpose = null;

  @SerializedName("cashPinFlag")
  private Boolean cashPinFlag = null;

  @SerializedName("mediaId")
  private String mediaId = null;

  @SerializedName("referralCode")
  private String referralCode = null;

  @SerializedName("referralTracking")
  private ReferralTracking referralTracking = null;

  @SerializedName("utilityBillDetails")
  private UtilityBillDetails utilityBillDetails = null;

  @SerializedName("feeCode")
  private String feeCode = null;

  @SerializedName("billingCycleDay")
  private String billingCycleDay = null;

  @SerializedName("applicationReferenceId")
  private String applicationReferenceId = null;

  @SerializedName("customerSegment")
  private String customerSegment = null;

  @SerializedName("printingSerialNumber")
  private String printingSerialNumber = null;

  @SerializedName("additionalInformation")
  private String additionalInformation = null;

  @SerializedName("tradeReferenceDetails")
  private TradeReferenceDetails tradeReferenceDetails = null;

  @SerializedName("bureauSessionId ")
  private String bureauSessionId_ = null;

  public AdditionalDataUpdate accountFundSource(String accountFundSource) {
    this.accountFundSource = accountFundSource;
    return this;
  }

   /**
   * This field is to indicates the primary source from which this account will be funded. This is a reference data field. Please use /v1/utilities/referenceData/{accountFundSource} resource to get valid value of this field with description.
   * @return accountFundSource
  **/
  @Schema(example = "BUSINESS_INCOME", description = "This field is to indicates the primary source from which this account will be funded. This is a reference data field. Please use /v1/utilities/referenceData/{accountFundSource} resource to get valid value of this field with description.")
  public String getAccountFundSource() {
    return accountFundSource;
  }

  public void setAccountFundSource(String accountFundSource) {
    this.accountFundSource = accountFundSource;
  }

  public AdditionalDataUpdate numberOfDependents(BigDecimal numberOfDependents) {
    this.numberOfDependents = numberOfDependents;
    return this;
  }

   /**
   * Number of dependants
   * @return numberOfDependents
  **/
  @Schema(example = "2.0", description = "Number of dependants")
  public BigDecimal getNumberOfDependents() {
    return numberOfDependents;
  }

  public void setNumberOfDependents(BigDecimal numberOfDependents) {
    this.numberOfDependents = numberOfDependents;
  }

  public AdditionalDataUpdate staffIndicator(Boolean staffIndicator) {
    this.staffIndicator = staffIndicator;
    return this;
  }

   /**
   * Flag to indicates if applicant is a Citi Staff. Valid values: true and false
   * @return staffIndicator
  **/
  @Schema(example = "true", description = "Flag to indicates if applicant is a Citi Staff. Valid values: true and false")
  public Boolean isStaffIndicator() {
    return staffIndicator;
  }

  public void setStaffIndicator(Boolean staffIndicator) {
    this.staffIndicator = staffIndicator;
  }

  public AdditionalDataUpdate otpAuthenticationSuccessFlag(Boolean otpAuthenticationSuccessFlag) {
    this.otpAuthenticationSuccessFlag = otpAuthenticationSuccessFlag;
    return this;
  }

   /**
   * Flag to indicate if customer is authenticated successfully
   * @return otpAuthenticationSuccessFlag
  **/
  @Schema(example = "true", description = "Flag to indicate if customer is authenticated successfully")
  public Boolean isOtpAuthenticationSuccessFlag() {
    return otpAuthenticationSuccessFlag;
  }

  public void setOtpAuthenticationSuccessFlag(Boolean otpAuthenticationSuccessFlag) {
    this.otpAuthenticationSuccessFlag = otpAuthenticationSuccessFlag;
  }

  public AdditionalDataUpdate bureauDataPrePopulateConsentFlag(Boolean bureauDataPrePopulateConsentFlag) {
    this.bureauDataPrePopulateConsentFlag = bureauDataPrePopulateConsentFlag;
    return this;
  }

   /**
   * Flag to capture applicant&#x27;s consent for Bureau Data Prepopulation
   * @return bureauDataPrePopulateConsentFlag
  **/
  @Schema(example = "true", description = "Flag to capture applicant's consent for Bureau Data Prepopulation")
  public Boolean isBureauDataPrePopulateConsentFlag() {
    return bureauDataPrePopulateConsentFlag;
  }

  public void setBureauDataPrePopulateConsentFlag(Boolean bureauDataPrePopulateConsentFlag) {
    this.bureauDataPrePopulateConsentFlag = bureauDataPrePopulateConsentFlag;
  }

  public AdditionalDataUpdate businessNature(String businessNature) {
    this.businessNature = businessNature;
    return this;
  }

   /**
   * Business nature of the applicant. This is a reference data data field. Please use /v1/utilities/referenceData/{businessNature} resource to get valid value of this field with description.
   * @return businessNature
  **/
  @Schema(example = "BANKING_FINANCIAL_INSTITUTIONS", description = "Business nature of the applicant. This is a reference data data field. Please use /v1/utilities/referenceData/{businessNature} resource to get valid value of this field with description.")
  public String getBusinessNature() {
    return businessNature;
  }

  public void setBusinessNature(String businessNature) {
    this.businessNature = businessNature;
  }

  public AdditionalDataUpdate emergencyContactName(String emergencyContactName) {
    this.emergencyContactName = emergencyContactName;
    return this;
  }

   /**
   * Emergency contact given name
   * @return emergencyContactName
  **/
  @Schema(example = "Pearline", description = "Emergency contact given name")
  public String getEmergencyContactName() {
    return emergencyContactName;
  }

  public void setEmergencyContactName(String emergencyContactName) {
    this.emergencyContactName = emergencyContactName;
  }

  public AdditionalDataUpdate emergencyContactSurname(String emergencyContactSurname) {
    this.emergencyContactSurname = emergencyContactSurname;
    return this;
  }

   /**
   * Emergency contact surname
   * @return emergencyContactSurname
  **/
  @Schema(example = "Buffet", description = "Emergency contact surname")
  public String getEmergencyContactSurname() {
    return emergencyContactSurname;
  }

  public void setEmergencyContactSurname(String emergencyContactSurname) {
    this.emergencyContactSurname = emergencyContactSurname;
  }

  public AdditionalDataUpdate emergencyContactRelationship(String emergencyContactRelationship) {
    this.emergencyContactRelationship = emergencyContactRelationship;
    return this;
  }

   /**
   * Applicant&#x27;s relationship with the emergency contact.This is a reference data. Please use /v1/utilities/referenceData/{emergencyContactRelationship} resource to get valid value of this field
   * @return emergencyContactRelationship
  **/
  @Schema(example = "FATHER", description = "Applicant's relationship with the emergency contact.This is a reference data. Please use /v1/utilities/referenceData/{emergencyContactRelationship} resource to get valid value of this field")
  public String getEmergencyContactRelationship() {
    return emergencyContactRelationship;
  }

  public void setEmergencyContactRelationship(String emergencyContactRelationship) {
    this.emergencyContactRelationship = emergencyContactRelationship;
  }

  public AdditionalDataUpdate emergencyContactPhoneNumber(String emergencyContactPhoneNumber) {
    this.emergencyContactPhoneNumber = emergencyContactPhoneNumber;
    return this;
  }

   /**
   * Emergency Contact Number.
   * @return emergencyContactPhoneNumber
  **/
  @Schema(example = "65012301", description = "Emergency Contact Number.")
  public String getEmergencyContactPhoneNumber() {
    return emergencyContactPhoneNumber;
  }

  public void setEmergencyContactPhoneNumber(String emergencyContactPhoneNumber) {
    this.emergencyContactPhoneNumber = emergencyContactPhoneNumber;
  }

  public AdditionalDataUpdate overLimitConsentFlag(Boolean overLimitConsentFlag) {
    this.overLimitConsentFlag = overLimitConsentFlag;
    return this;
  }

   /**
   * Customer Consent on spending more than the limit assigned to him. Valid values: true and false
   * @return overLimitConsentFlag
  **/
  @Schema(example = "true", description = "Customer Consent on spending more than the limit assigned to him. Valid values: true and false")
  public Boolean isOverLimitConsentFlag() {
    return overLimitConsentFlag;
  }

  public void setOverLimitConsentFlag(Boolean overLimitConsentFlag) {
    this.overLimitConsentFlag = overLimitConsentFlag;
  }

  public AdditionalDataUpdate countrySpecificGroup(CountrySpecificGroup countrySpecificGroup) {
    this.countrySpecificGroup = countrySpecificGroup;
    return this;
  }

   /**
   * Get countrySpecificGroup
   * @return countrySpecificGroup
  **/
  @Schema(description = "")
  public CountrySpecificGroup getCountrySpecificGroup() {
    return countrySpecificGroup;
  }

  public void setCountrySpecificGroup(CountrySpecificGroup countrySpecificGroup) {
    this.countrySpecificGroup = countrySpecificGroup;
  }

  public AdditionalDataUpdate primaryBankDetails(PrimaryBankDetails primaryBankDetails) {
    this.primaryBankDetails = primaryBankDetails;
    return this;
  }

   /**
   * Get primaryBankDetails
   * @return primaryBankDetails
  **/
  @Schema(description = "")
  public PrimaryBankDetails getPrimaryBankDetails() {
    return primaryBankDetails;
  }

  public void setPrimaryBankDetails(PrimaryBankDetails primaryBankDetails) {
    this.primaryBankDetails = primaryBankDetails;
  }

  public AdditionalDataUpdate referralGivenName(String referralGivenName) {
    this.referralGivenName = referralGivenName;
    return this;
  }

   /**
   * Referral First Name.
   * @return referralGivenName
  **/
  @Schema(example = "Maxwell", description = "Referral First Name.")
  public String getReferralGivenName() {
    return referralGivenName;
  }

  public void setReferralGivenName(String referralGivenName) {
    this.referralGivenName = referralGivenName;
  }

  public AdditionalDataUpdate referralSurname(String referralSurname) {
    this.referralSurname = referralSurname;
    return this;
  }

   /**
   * Referral Surname/Last Name.
   * @return referralSurname
  **/
  @Schema(example = "Gate", description = "Referral Surname/Last Name.")
  public String getReferralSurname() {
    return referralSurname;
  }

  public void setReferralSurname(String referralSurname) {
    this.referralSurname = referralSurname;
  }

  public AdditionalDataUpdate introducerId(String introducerId) {
    this.introducerId = introducerId;
    return this;
  }

   /**
   * Unique identifier associated with the introducer who had referred the applicant.
   * @return introducerId
  **/
  @Schema(example = "sb27464", description = "Unique identifier associated with the introducer who had referred the applicant.")
  public String getIntroducerId() {
    return introducerId;
  }

  public void setIntroducerId(String introducerId) {
    this.introducerId = introducerId;
  }

  public AdditionalDataUpdate relatedToCitiEmployeeFlag(Boolean relatedToCitiEmployeeFlag) {
    this.relatedToCitiEmployeeFlag = relatedToCitiEmployeeFlag;
    return this;
  }

   /**
   * Self declaration if applicant has any relation with citi bank employee. Valid values: true and false
   * @return relatedToCitiEmployeeFlag
  **/
  @Schema(example = "true", description = "Self declaration if applicant has any relation with citi bank employee. Valid values: true and false")
  public Boolean isRelatedToCitiEmployeeFlag() {
    return relatedToCitiEmployeeFlag;
  }

  public void setRelatedToCitiEmployeeFlag(Boolean relatedToCitiEmployeeFlag) {
    this.relatedToCitiEmployeeFlag = relatedToCitiEmployeeFlag;
  }

  public AdditionalDataUpdate relatedCitiEmployeeName(String relatedCitiEmployeeName) {
    this.relatedCitiEmployeeName = relatedCitiEmployeeName;
    return this;
  }

   /**
   * Name of the citi employee if applicant has any relation with citi bank employee.
   * @return relatedCitiEmployeeName
  **/
  @Schema(example = "Anderson", description = "Name of the citi employee if applicant has any relation with citi bank employee.")
  public String getRelatedCitiEmployeeName() {
    return relatedCitiEmployeeName;
  }

  public void setRelatedCitiEmployeeName(String relatedCitiEmployeeName) {
    this.relatedCitiEmployeeName = relatedCitiEmployeeName;
  }

  public AdditionalDataUpdate relatedCitiEmployeeDepartment(String relatedCitiEmployeeDepartment) {
    this.relatedCitiEmployeeDepartment = relatedCitiEmployeeDepartment;
    return this;
  }

   /**
   * Department of citi employee if applicant has any relation with citi bank employee.
   * @return relatedCitiEmployeeDepartment
  **/
  @Schema(example = "Finance", description = "Department of citi employee if applicant has any relation with citi bank employee.")
  public String getRelatedCitiEmployeeDepartment() {
    return relatedCitiEmployeeDepartment;
  }

  public void setRelatedCitiEmployeeDepartment(String relatedCitiEmployeeDepartment) {
    this.relatedCitiEmployeeDepartment = relatedCitiEmployeeDepartment;
  }

  public AdditionalDataUpdate creditCardUsagePurpose(String creditCardUsagePurpose) {
    this.creditCardUsagePurpose = creditCardUsagePurpose;
    return this;
  }

   /**
   * Indicates applicants usage of credit card whether it is for personal or business.Please use /v1/utilities/referenceData/{creditCardUsagePurpose} resource to get valid value of this field with description.
   * @return creditCardUsagePurpose
  **/
  @Schema(example = "PERSONAL", description = "Indicates applicants usage of credit card whether it is for personal or business.Please use /v1/utilities/referenceData/{creditCardUsagePurpose} resource to get valid value of this field with description.")
  public String getCreditCardUsagePurpose() {
    return creditCardUsagePurpose;
  }

  public void setCreditCardUsagePurpose(String creditCardUsagePurpose) {
    this.creditCardUsagePurpose = creditCardUsagePurpose;
  }

  public AdditionalDataUpdate cashPinFlag(Boolean cashPinFlag) {
    this.cashPinFlag = cashPinFlag;
    return this;
  }

   /**
   * Indicates whether the customer wants a separate cash PIN.
   * @return cashPinFlag
  **/
  @Schema(example = "true", description = "Indicates whether the customer wants a separate cash PIN.")
  public Boolean isCashPinFlag() {
    return cashPinFlag;
  }

  public void setCashPinFlag(Boolean cashPinFlag) {
    this.cashPinFlag = cashPinFlag;
  }

  public AdditionalDataUpdate mediaId(String mediaId) {
    this.mediaId = mediaId;
    return this;
  }

   /**
   * The media ID will be used to determine which offer / campaign banner was clicked when the customer made his application 
   * @return mediaId
  **/
  @Schema(example = "71850", description = "The media ID will be used to determine which offer / campaign banner was clicked when the customer made his application ")
  public String getMediaId() {
    return mediaId;
  }

  public void setMediaId(String mediaId) {
    this.mediaId = mediaId;
  }

  public AdditionalDataUpdate referralCode(String referralCode) {
    this.referralCode = referralCode;
    return this;
  }

   /**
   * Referral Code used for the customer
   * @return referralCode
  **/
  @Schema(example = "BBB", description = "Referral Code used for the customer")
  public String getReferralCode() {
    return referralCode;
  }

  public void setReferralCode(String referralCode) {
    this.referralCode = referralCode;
  }

  public AdditionalDataUpdate referralTracking(ReferralTracking referralTracking) {
    this.referralTracking = referralTracking;
    return this;
  }

   /**
   * Get referralTracking
   * @return referralTracking
  **/
  @Schema(description = "")
  public ReferralTracking getReferralTracking() {
    return referralTracking;
  }

  public void setReferralTracking(ReferralTracking referralTracking) {
    this.referralTracking = referralTracking;
  }

  public AdditionalDataUpdate utilityBillDetails(UtilityBillDetails utilityBillDetails) {
    this.utilityBillDetails = utilityBillDetails;
    return this;
  }

   /**
   * Get utilityBillDetails
   * @return utilityBillDetails
  **/
  @Schema(description = "")
  public UtilityBillDetails getUtilityBillDetails() {
    return utilityBillDetails;
  }

  public void setUtilityBillDetails(UtilityBillDetails utilityBillDetails) {
    this.utilityBillDetails = utilityBillDetails;
  }

  public AdditionalDataUpdate feeCode(String feeCode) {
    this.feeCode = feeCode;
    return this;
  }

   /**
   * Fee code that applied to the requested product
   * @return feeCode
  **/
  @Schema(example = "ND", description = "Fee code that applied to the requested product")
  public String getFeeCode() {
    return feeCode;
  }

  public void setFeeCode(String feeCode) {
    this.feeCode = feeCode;
  }

  public AdditionalDataUpdate billingCycleDay(String billingCycleDay) {
    this.billingCycleDay = billingCycleDay;
    return this;
  }

   /**
   * Day of each month for the bill payment. This is a reference data field. Please use /v1/utilities/referenceData/{billingCycleDay} resource to get valid value of this field with description.
   * @return billingCycleDay
  **/
  @Schema(example = "DAY_5", description = "Day of each month for the bill payment. This is a reference data field. Please use /v1/utilities/referenceData/{billingCycleDay} resource to get valid value of this field with description.")
  public String getBillingCycleDay() {
    return billingCycleDay;
  }

  public void setBillingCycleDay(String billingCycleDay) {
    this.billingCycleDay = billingCycleDay;
  }

  public AdditionalDataUpdate applicationReferenceId(String applicationReferenceId) {
    this.applicationReferenceId = applicationReferenceId;
    return this;
  }

   /**
   * Unique reference ID associated with the application
   * @return applicationReferenceId
  **/
  @Schema(example = "123456789", description = "Unique reference ID associated with the application")
  public String getApplicationReferenceId() {
    return applicationReferenceId;
  }

  public void setApplicationReferenceId(String applicationReferenceId) {
    this.applicationReferenceId = applicationReferenceId;
  }

  public AdditionalDataUpdate customerSegment(String customerSegment) {
    this.customerSegment = customerSegment;
    return this;
  }

   /**
   * Customer segment decides each applicant’s interest rate  Different customer target will be subjected to different interest rate..This is a reference data field. Please use /v1/utilities/referenceData/{customerSegment} resource to get valid value of this field with description. 
   * @return customerSegment
  **/
  @Schema(example = "S6", description = "Customer segment decides each applicant’s interest rate  Different customer target will be subjected to different interest rate..This is a reference data field. Please use /v1/utilities/referenceData/{customerSegment} resource to get valid value of this field with description. ")
  public String getCustomerSegment() {
    return customerSegment;
  }

  public void setCustomerSegment(String customerSegment) {
    this.customerSegment = customerSegment;
  }

  public AdditionalDataUpdate printingSerialNumber(String printingSerialNumber) {
    this.printingSerialNumber = printingSerialNumber;
    return this;
  }

   /**
   * This field refers to the unique number for each application to be identified by COLA and printed in PDF form.It enables to identify the customer in case the customer could not complete filling his/her details and was dropped-off in between
   * @return printingSerialNumber
  **/
  @Schema(example = "1805061194", description = "This field refers to the unique number for each application to be identified by COLA and printed in PDF form.It enables to identify the customer in case the customer could not complete filling his/her details and was dropped-off in between")
  public String getPrintingSerialNumber() {
    return printingSerialNumber;
  }

  public void setPrintingSerialNumber(String printingSerialNumber) {
    this.printingSerialNumber = printingSerialNumber;
  }

  public AdditionalDataUpdate additionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * This field refers to the additional comments given by the customer which is to be noted-down during the application process.
   * @return additionalInformation
  **/
  @Schema(example = "Urgent card issuance requirement", description = "This field refers to the additional comments given by the customer which is to be noted-down during the application process.")
  public String getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }

  public AdditionalDataUpdate tradeReferenceDetails(TradeReferenceDetails tradeReferenceDetails) {
    this.tradeReferenceDetails = tradeReferenceDetails;
    return this;
  }

   /**
   * Get tradeReferenceDetails
   * @return tradeReferenceDetails
  **/
  @Schema(description = "")
  public TradeReferenceDetails getTradeReferenceDetails() {
    return tradeReferenceDetails;
  }

  public void setTradeReferenceDetails(TradeReferenceDetails tradeReferenceDetails) {
    this.tradeReferenceDetails = tradeReferenceDetails;
  }

  public AdditionalDataUpdate bureauSessionId_(String bureauSessionId_) {
    this.bureauSessionId_ = bureauSessionId_;
    return this;
  }

   /**
   * Session ID that is generated from the session / interaction of channel with bureau.
   * @return bureauSessionId_
  **/
  @Schema(example = "781239192391312", description = "Session ID that is generated from the session / interaction of channel with bureau.")
  public String getBureauSessionId_() {
    return bureauSessionId_;
  }

  public void setBureauSessionId_(String bureauSessionId_) {
    this.bureauSessionId_ = bureauSessionId_;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalDataUpdate additionalDataUpdate = (AdditionalDataUpdate) o;
    return Objects.equals(this.accountFundSource, additionalDataUpdate.accountFundSource) &&
        Objects.equals(this.numberOfDependents, additionalDataUpdate.numberOfDependents) &&
        Objects.equals(this.staffIndicator, additionalDataUpdate.staffIndicator) &&
        Objects.equals(this.otpAuthenticationSuccessFlag, additionalDataUpdate.otpAuthenticationSuccessFlag) &&
        Objects.equals(this.bureauDataPrePopulateConsentFlag, additionalDataUpdate.bureauDataPrePopulateConsentFlag) &&
        Objects.equals(this.businessNature, additionalDataUpdate.businessNature) &&
        Objects.equals(this.emergencyContactName, additionalDataUpdate.emergencyContactName) &&
        Objects.equals(this.emergencyContactSurname, additionalDataUpdate.emergencyContactSurname) &&
        Objects.equals(this.emergencyContactRelationship, additionalDataUpdate.emergencyContactRelationship) &&
        Objects.equals(this.emergencyContactPhoneNumber, additionalDataUpdate.emergencyContactPhoneNumber) &&
        Objects.equals(this.overLimitConsentFlag, additionalDataUpdate.overLimitConsentFlag) &&
        Objects.equals(this.countrySpecificGroup, additionalDataUpdate.countrySpecificGroup) &&
        Objects.equals(this.primaryBankDetails, additionalDataUpdate.primaryBankDetails) &&
        Objects.equals(this.referralGivenName, additionalDataUpdate.referralGivenName) &&
        Objects.equals(this.referralSurname, additionalDataUpdate.referralSurname) &&
        Objects.equals(this.introducerId, additionalDataUpdate.introducerId) &&
        Objects.equals(this.relatedToCitiEmployeeFlag, additionalDataUpdate.relatedToCitiEmployeeFlag) &&
        Objects.equals(this.relatedCitiEmployeeName, additionalDataUpdate.relatedCitiEmployeeName) &&
        Objects.equals(this.relatedCitiEmployeeDepartment, additionalDataUpdate.relatedCitiEmployeeDepartment) &&
        Objects.equals(this.creditCardUsagePurpose, additionalDataUpdate.creditCardUsagePurpose) &&
        Objects.equals(this.cashPinFlag, additionalDataUpdate.cashPinFlag) &&
        Objects.equals(this.mediaId, additionalDataUpdate.mediaId) &&
        Objects.equals(this.referralCode, additionalDataUpdate.referralCode) &&
        Objects.equals(this.referralTracking, additionalDataUpdate.referralTracking) &&
        Objects.equals(this.utilityBillDetails, additionalDataUpdate.utilityBillDetails) &&
        Objects.equals(this.feeCode, additionalDataUpdate.feeCode) &&
        Objects.equals(this.billingCycleDay, additionalDataUpdate.billingCycleDay) &&
        Objects.equals(this.applicationReferenceId, additionalDataUpdate.applicationReferenceId) &&
        Objects.equals(this.customerSegment, additionalDataUpdate.customerSegment) &&
        Objects.equals(this.printingSerialNumber, additionalDataUpdate.printingSerialNumber) &&
        Objects.equals(this.additionalInformation, additionalDataUpdate.additionalInformation) &&
        Objects.equals(this.tradeReferenceDetails, additionalDataUpdate.tradeReferenceDetails) &&
        Objects.equals(this.bureauSessionId_, additionalDataUpdate.bureauSessionId_);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountFundSource, numberOfDependents, staffIndicator, otpAuthenticationSuccessFlag, bureauDataPrePopulateConsentFlag, businessNature, emergencyContactName, emergencyContactSurname, emergencyContactRelationship, emergencyContactPhoneNumber, overLimitConsentFlag, countrySpecificGroup, primaryBankDetails, referralGivenName, referralSurname, introducerId, relatedToCitiEmployeeFlag, relatedCitiEmployeeName, relatedCitiEmployeeDepartment, creditCardUsagePurpose, cashPinFlag, mediaId, referralCode, referralTracking, utilityBillDetails, feeCode, billingCycleDay, applicationReferenceId, customerSegment, printingSerialNumber, additionalInformation, tradeReferenceDetails, bureauSessionId_);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalDataUpdate {\n");
    
    sb.append("    accountFundSource: ").append(toIndentedString(accountFundSource)).append("\n");
    sb.append("    numberOfDependents: ").append(toIndentedString(numberOfDependents)).append("\n");
    sb.append("    staffIndicator: ").append(toIndentedString(staffIndicator)).append("\n");
    sb.append("    otpAuthenticationSuccessFlag: ").append(toIndentedString(otpAuthenticationSuccessFlag)).append("\n");
    sb.append("    bureauDataPrePopulateConsentFlag: ").append(toIndentedString(bureauDataPrePopulateConsentFlag)).append("\n");
    sb.append("    businessNature: ").append(toIndentedString(businessNature)).append("\n");
    sb.append("    emergencyContactName: ").append(toIndentedString(emergencyContactName)).append("\n");
    sb.append("    emergencyContactSurname: ").append(toIndentedString(emergencyContactSurname)).append("\n");
    sb.append("    emergencyContactRelationship: ").append(toIndentedString(emergencyContactRelationship)).append("\n");
    sb.append("    emergencyContactPhoneNumber: ").append(toIndentedString(emergencyContactPhoneNumber)).append("\n");
    sb.append("    overLimitConsentFlag: ").append(toIndentedString(overLimitConsentFlag)).append("\n");
    sb.append("    countrySpecificGroup: ").append(toIndentedString(countrySpecificGroup)).append("\n");
    sb.append("    primaryBankDetails: ").append(toIndentedString(primaryBankDetails)).append("\n");
    sb.append("    referralGivenName: ").append(toIndentedString(referralGivenName)).append("\n");
    sb.append("    referralSurname: ").append(toIndentedString(referralSurname)).append("\n");
    sb.append("    introducerId: ").append(toIndentedString(introducerId)).append("\n");
    sb.append("    relatedToCitiEmployeeFlag: ").append(toIndentedString(relatedToCitiEmployeeFlag)).append("\n");
    sb.append("    relatedCitiEmployeeName: ").append(toIndentedString(relatedCitiEmployeeName)).append("\n");
    sb.append("    relatedCitiEmployeeDepartment: ").append(toIndentedString(relatedCitiEmployeeDepartment)).append("\n");
    sb.append("    creditCardUsagePurpose: ").append(toIndentedString(creditCardUsagePurpose)).append("\n");
    sb.append("    cashPinFlag: ").append(toIndentedString(cashPinFlag)).append("\n");
    sb.append("    mediaId: ").append(toIndentedString(mediaId)).append("\n");
    sb.append("    referralCode: ").append(toIndentedString(referralCode)).append("\n");
    sb.append("    referralTracking: ").append(toIndentedString(referralTracking)).append("\n");
    sb.append("    utilityBillDetails: ").append(toIndentedString(utilityBillDetails)).append("\n");
    sb.append("    feeCode: ").append(toIndentedString(feeCode)).append("\n");
    sb.append("    billingCycleDay: ").append(toIndentedString(billingCycleDay)).append("\n");
    sb.append("    applicationReferenceId: ").append(toIndentedString(applicationReferenceId)).append("\n");
    sb.append("    customerSegment: ").append(toIndentedString(customerSegment)).append("\n");
    sb.append("    printingSerialNumber: ").append(toIndentedString(printingSerialNumber)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    tradeReferenceDetails: ").append(toIndentedString(tradeReferenceDetails)).append("\n");
    sb.append("    bureauSessionId_: ").append(toIndentedString(bureauSessionId_)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
