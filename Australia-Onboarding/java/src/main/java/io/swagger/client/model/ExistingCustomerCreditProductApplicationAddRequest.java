/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ECMApplicant;
import io.swagger.client.model.ECMProduct;
import io.swagger.client.model.MarketingCampaignOfferDetails;
import io.swagger.client.model.SalesAgentDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ExistingCustomerCreditProductApplicationAddRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ExistingCustomerCreditProductApplicationAddRequest {
  @SerializedName("product")
  private ECMProduct product = null;

  @SerializedName("applicant")
  private ECMApplicant applicant = null;

  @SerializedName("salesAgentDetails")
  private SalesAgentDetails salesAgentDetails = null;

  @SerializedName("marketingCampaignOfferDetails")
  private MarketingCampaignOfferDetails marketingCampaignOfferDetails = null;

  @SerializedName("subCardType")
  private String subCardType = null;

  @SerializedName("displayCardNumber")
  private String displayCardNumber = null;

  @SerializedName("controlFlowId")
  private String controlFlowId = null;

  public ExistingCustomerCreditProductApplicationAddRequest product(ECMProduct product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @Schema(description = "")
  public ECMProduct getProduct() {
    return product;
  }

  public void setProduct(ECMProduct product) {
    this.product = product;
  }

  public ExistingCustomerCreditProductApplicationAddRequest applicant(ECMApplicant applicant) {
    this.applicant = applicant;
    return this;
  }

   /**
   * Get applicant
   * @return applicant
  **/
  @Schema(description = "")
  public ECMApplicant getApplicant() {
    return applicant;
  }

  public void setApplicant(ECMApplicant applicant) {
    this.applicant = applicant;
  }

  public ExistingCustomerCreditProductApplicationAddRequest salesAgentDetails(SalesAgentDetails salesAgentDetails) {
    this.salesAgentDetails = salesAgentDetails;
    return this;
  }

   /**
   * Get salesAgentDetails
   * @return salesAgentDetails
  **/
  @Schema(description = "")
  public SalesAgentDetails getSalesAgentDetails() {
    return salesAgentDetails;
  }

  public void setSalesAgentDetails(SalesAgentDetails salesAgentDetails) {
    this.salesAgentDetails = salesAgentDetails;
  }

  public ExistingCustomerCreditProductApplicationAddRequest marketingCampaignOfferDetails(MarketingCampaignOfferDetails marketingCampaignOfferDetails) {
    this.marketingCampaignOfferDetails = marketingCampaignOfferDetails;
    return this;
  }

   /**
   * Get marketingCampaignOfferDetails
   * @return marketingCampaignOfferDetails
  **/
  @Schema(description = "")
  public MarketingCampaignOfferDetails getMarketingCampaignOfferDetails() {
    return marketingCampaignOfferDetails;
  }

  public void setMarketingCampaignOfferDetails(MarketingCampaignOfferDetails marketingCampaignOfferDetails) {
    this.marketingCampaignOfferDetails = marketingCampaignOfferDetails;
  }

  public ExistingCustomerCreditProductApplicationAddRequest subCardType(String subCardType) {
    this.subCardType = subCardType;
    return this;
  }

   /**
   * Type of existing card of customer.
   * @return subCardType
  **/
  @Schema(example = "DEBIT_CARD,CREDIT_CARD", description = "Type of existing card of customer.")
  public String getSubCardType() {
    return subCardType;
  }

  public void setSubCardType(String subCardType) {
    this.subCardType = subCardType;
  }

  public ExistingCustomerCreditProductApplicationAddRequest displayCardNumber(String displayCardNumber) {
    this.displayCardNumber = displayCardNumber;
    return this;
  }

   /**
   * Last 4 digits of card number
   * @return displayCardNumber
  **/
  @Schema(example = "2391", description = "Last 4 digits of card number")
  public String getDisplayCardNumber() {
    return displayCardNumber;
  }

  public void setDisplayCardNumber(String displayCardNumber) {
    this.displayCardNumber = displayCardNumber;
  }

  public ExistingCustomerCreditProductApplicationAddRequest controlFlowId(String controlFlowId) {
    this.controlFlowId = controlFlowId;
    return this;
  }

   /**
   * Control Flow Id
   * @return controlFlowId
  **/
  @Schema(example = "6e3774334f724a2b7947663653712f52456f524c41797038516a59347a437549564a77755676376e616a733d", required = true, description = "Control Flow Id")
  public String getControlFlowId() {
    return controlFlowId;
  }

  public void setControlFlowId(String controlFlowId) {
    this.controlFlowId = controlFlowId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExistingCustomerCreditProductApplicationAddRequest existingCustomerCreditProductApplicationAddRequest = (ExistingCustomerCreditProductApplicationAddRequest) o;
    return Objects.equals(this.product, existingCustomerCreditProductApplicationAddRequest.product) &&
        Objects.equals(this.applicant, existingCustomerCreditProductApplicationAddRequest.applicant) &&
        Objects.equals(this.salesAgentDetails, existingCustomerCreditProductApplicationAddRequest.salesAgentDetails) &&
        Objects.equals(this.marketingCampaignOfferDetails, existingCustomerCreditProductApplicationAddRequest.marketingCampaignOfferDetails) &&
        Objects.equals(this.subCardType, existingCustomerCreditProductApplicationAddRequest.subCardType) &&
        Objects.equals(this.displayCardNumber, existingCustomerCreditProductApplicationAddRequest.displayCardNumber) &&
        Objects.equals(this.controlFlowId, existingCustomerCreditProductApplicationAddRequest.controlFlowId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(product, applicant, salesAgentDetails, marketingCampaignOfferDetails, subCardType, displayCardNumber, controlFlowId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExistingCustomerCreditProductApplicationAddRequest {\n");
    
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    applicant: ").append(toIndentedString(applicant)).append("\n");
    sb.append("    salesAgentDetails: ").append(toIndentedString(salesAgentDetails)).append("\n");
    sb.append("    marketingCampaignOfferDetails: ").append(toIndentedString(marketingCampaignOfferDetails)).append("\n");
    sb.append("    subCardType: ").append(toIndentedString(subCardType)).append("\n");
    sb.append("    displayCardNumber: ").append(toIndentedString(displayCardNumber)).append("\n");
    sb.append("    controlFlowId: ").append(toIndentedString(controlFlowId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
