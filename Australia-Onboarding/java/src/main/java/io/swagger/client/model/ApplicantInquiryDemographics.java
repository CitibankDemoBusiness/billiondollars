/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * ApplicantInquiryDemographics
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicantInquiryDemographics {
  @SerializedName("gender")
  private String gender = null;

  @SerializedName("dateOfBirth")
  private LocalDate dateOfBirth = null;

  @SerializedName("placeOfBirth")
  private String placeOfBirth = null;

  @SerializedName("countryOfBirth")
  private String countryOfBirth = null;

  @SerializedName("nationality")
  private String nationality = null;

  @SerializedName("maritalStatus")
  private String maritalStatus = null;

  @SerializedName("residentialStatus")
  private String residentialStatus = null;

  public ApplicantInquiryDemographics gender(String gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Gender/sex. This is a reference data field. Please use /v1/apac/utilities/referenceData/{gender} resource to get valid value of this field with description. You can use gender field name as the referenceCode parameter to retrieve the values.
   * @return gender
  **/
  @Schema(example = "MALE", description = "Gender/sex. This is a reference data field. Please use /v1/apac/utilities/referenceData/{gender} resource to get valid value of this field with description. You can use gender field name as the referenceCode parameter to retrieve the values.")
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public ApplicantInquiryDemographics dateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Applicant&#x27;s date of birth in  ISO 8601 date format YYYY-MM-DD
   * @return dateOfBirth
  **/
  @Schema(example = "Wed Jan 02 00:00:00 UTC 1980", description = "Applicant's date of birth in  ISO 8601 date format YYYY-MM-DD")
  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public ApplicantInquiryDemographics placeOfBirth(String placeOfBirth) {
    this.placeOfBirth = placeOfBirth;
    return this;
  }

   /**
   * Applicant&#x27;s place of birth
   * @return placeOfBirth
  **/
  @Schema(example = "Canberra'", description = "Applicant's place of birth")
  public String getPlaceOfBirth() {
    return placeOfBirth;
  }

  public void setPlaceOfBirth(String placeOfBirth) {
    this.placeOfBirth = placeOfBirth;
  }

  public ApplicantInquiryDemographics countryOfBirth(String countryOfBirth) {
    this.countryOfBirth = countryOfBirth;
    return this;
  }

   /**
   * Applicant&#x27;s Country of birth. This is a reference data field. Please use /utilities/referenceData/{country} resource to get valid values of this field with descriptions. You can use the countryOfBirth as the referenceCode parameter to retrieve the values.
   * @return countryOfBirth
  **/
  @Schema(example = "AU", description = "Applicant's Country of birth. This is a reference data field. Please use /utilities/referenceData/{country} resource to get valid values of this field with descriptions. You can use the countryOfBirth as the referenceCode parameter to retrieve the values.")
  public String getCountryOfBirth() {
    return countryOfBirth;
  }

  public void setCountryOfBirth(String countryOfBirth) {
    this.countryOfBirth = countryOfBirth;
  }

  public ApplicantInquiryDemographics nationality(String nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Applicant&#x27;s nationality. This is a reference data field. Please use /v1/apac/utilities/referenceData/{country} resource to get valid value of this field with description. You can use nationality field name as the referenceCode parameter to retrieve the values.
   * @return nationality
  **/
  @Schema(example = "AU", description = "Applicant's nationality. This is a reference data field. Please use /v1/apac/utilities/referenceData/{country} resource to get valid value of this field with description. You can use nationality field name as the referenceCode parameter to retrieve the values.")
  public String getNationality() {
    return nationality;
  }

  public void setNationality(String nationality) {
    this.nationality = nationality;
  }

  public ApplicantInquiryDemographics maritalStatus(String maritalStatus) {
    this.maritalStatus = maritalStatus;
    return this;
  }

   /**
   * Applicant&#x27;s marital status. This is a reference data field. Please use /v1/apac/utilities/referenceData/{maritalStatus} resource to get valid value of this field with description. You can use maritalStatus field name as the referenceCode parameter to retrieve the values.
   * @return maritalStatus
  **/
  @Schema(example = "MARRIED", description = "Applicant's marital status. This is a reference data field. Please use /v1/apac/utilities/referenceData/{maritalStatus} resource to get valid value of this field with description. You can use maritalStatus field name as the referenceCode parameter to retrieve the values.")
  public String getMaritalStatus() {
    return maritalStatus;
  }

  public void setMaritalStatus(String maritalStatus) {
    this.maritalStatus = maritalStatus;
  }

  public ApplicantInquiryDemographics residentialStatus(String residentialStatus) {
    this.residentialStatus = residentialStatus;
    return this;
  }

   /**
   * Indicate status of residence. This is a reference data field. Please use /v1/apac/utilities/referenceData/{residenceStatus} resource to get valid value of this field with description. You can use residenceStatus field name as the referenceCode parameter to retrieve the values.
   * @return residentialStatus
  **/
  @Schema(example = "RENTED_HOUSE", description = "Indicate status of residence. This is a reference data field. Please use /v1/apac/utilities/referenceData/{residenceStatus} resource to get valid value of this field with description. You can use residenceStatus field name as the referenceCode parameter to retrieve the values.")
  public String getResidentialStatus() {
    return residentialStatus;
  }

  public void setResidentialStatus(String residentialStatus) {
    this.residentialStatus = residentialStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicantInquiryDemographics applicantInquiryDemographics = (ApplicantInquiryDemographics) o;
    return Objects.equals(this.gender, applicantInquiryDemographics.gender) &&
        Objects.equals(this.dateOfBirth, applicantInquiryDemographics.dateOfBirth) &&
        Objects.equals(this.placeOfBirth, applicantInquiryDemographics.placeOfBirth) &&
        Objects.equals(this.countryOfBirth, applicantInquiryDemographics.countryOfBirth) &&
        Objects.equals(this.nationality, applicantInquiryDemographics.nationality) &&
        Objects.equals(this.maritalStatus, applicantInquiryDemographics.maritalStatus) &&
        Objects.equals(this.residentialStatus, applicantInquiryDemographics.residentialStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gender, dateOfBirth, placeOfBirth, countryOfBirth, nationality, maritalStatus, residentialStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicantInquiryDemographics {\n");
    
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    placeOfBirth: ").append(toIndentedString(placeOfBirth)).append("\n");
    sb.append("    countryOfBirth: ").append(toIndentedString(countryOfBirth)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    residentialStatus: ").append(toIndentedString(residentialStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
