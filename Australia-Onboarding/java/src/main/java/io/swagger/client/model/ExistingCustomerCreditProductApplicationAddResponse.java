/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DisplayApplicantDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ExistingCustomerCreditProductApplicationAddResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ExistingCustomerCreditProductApplicationAddResponse {
  @SerializedName("applicationId")
  private String applicationId = null;

  @SerializedName("applicationStage")
  private String applicationStage = null;

  @SerializedName("survivorLineRequiredFlag")
  private Boolean survivorLineRequiredFlag = null;

  @SerializedName("existingCreditLimit")
  private Double existingCreditLimit = null;

  @SerializedName("displayApplicantDetails")
  private DisplayApplicantDetails displayApplicantDetails = null;

  @SerializedName("controlFlowId")
  private String controlFlowId = null;

  public ExistingCustomerCreditProductApplicationAddResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Unique identifier for the application
   * @return applicationId
  **/
  @Schema(example = "ZOW9IO793854", required = true, description = "Unique identifier for the application")
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }

  public ExistingCustomerCreditProductApplicationAddResponse applicationStage(String applicationStage) {
    this.applicationStage = applicationStage;
    return this;
  }

   /**
   * Application stage of an Application
   * @return applicationStage
  **/
  @Schema(example = "BACKGROUND_SCREENING", required = true, description = "Application stage of an Application")
  public String getApplicationStage() {
    return applicationStage;
  }

  public void setApplicationStage(String applicationStage) {
    this.applicationStage = applicationStage;
  }

  public ExistingCustomerCreditProductApplicationAddResponse survivorLineRequiredFlag(Boolean survivorLineRequiredFlag) {
    this.survivorLineRequiredFlag = survivorLineRequiredFlag;
    return this;
  }

   /**
   * This indicates whether customer requires a Survivor Line product (Credit Card) or not. Valid values: true and false
   * @return survivorLineRequiredFlag
  **/
  @Schema(example = "false", description = "This indicates whether customer requires a Survivor Line product (Credit Card) or not. Valid values: true and false")
  public Boolean isSurvivorLineRequiredFlag() {
    return survivorLineRequiredFlag;
  }

  public void setSurvivorLineRequiredFlag(Boolean survivorLineRequiredFlag) {
    this.survivorLineRequiredFlag = survivorLineRequiredFlag;
  }

  public ExistingCustomerCreditProductApplicationAddResponse existingCreditLimit(Double existingCreditLimit) {
    this.existingCreditLimit = existingCreditLimit;
    return this;
  }

   /**
   * Credit limit of customer for the existing credit card
   * @return existingCreditLimit
  **/
  @Schema(example = "25000.25", description = "Credit limit of customer for the existing credit card")
  public Double getExistingCreditLimit() {
    return existingCreditLimit;
  }

  public void setExistingCreditLimit(Double existingCreditLimit) {
    this.existingCreditLimit = existingCreditLimit;
  }

  public ExistingCustomerCreditProductApplicationAddResponse displayApplicantDetails(DisplayApplicantDetails displayApplicantDetails) {
    this.displayApplicantDetails = displayApplicantDetails;
    return this;
  }

   /**
   * Get displayApplicantDetails
   * @return displayApplicantDetails
  **/
  @Schema(required = true, description = "")
  public DisplayApplicantDetails getDisplayApplicantDetails() {
    return displayApplicantDetails;
  }

  public void setDisplayApplicantDetails(DisplayApplicantDetails displayApplicantDetails) {
    this.displayApplicantDetails = displayApplicantDetails;
  }

  public ExistingCustomerCreditProductApplicationAddResponse controlFlowId(String controlFlowId) {
    this.controlFlowId = controlFlowId;
    return this;
  }

   /**
   * Control flow id is used to control the flow for subsequent requests in the session.
   * @return controlFlowId
  **/
  @Schema(example = "6e3774334f724a2b7947663653712f52456f524c41797038516a59347a437549564a77755676376e616a733d", description = "Control flow id is used to control the flow for subsequent requests in the session.")
  public String getControlFlowId() {
    return controlFlowId;
  }

  public void setControlFlowId(String controlFlowId) {
    this.controlFlowId = controlFlowId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExistingCustomerCreditProductApplicationAddResponse existingCustomerCreditProductApplicationAddResponse = (ExistingCustomerCreditProductApplicationAddResponse) o;
    return Objects.equals(this.applicationId, existingCustomerCreditProductApplicationAddResponse.applicationId) &&
        Objects.equals(this.applicationStage, existingCustomerCreditProductApplicationAddResponse.applicationStage) &&
        Objects.equals(this.survivorLineRequiredFlag, existingCustomerCreditProductApplicationAddResponse.survivorLineRequiredFlag) &&
        Objects.equals(this.existingCreditLimit, existingCustomerCreditProductApplicationAddResponse.existingCreditLimit) &&
        Objects.equals(this.displayApplicantDetails, existingCustomerCreditProductApplicationAddResponse.displayApplicantDetails) &&
        Objects.equals(this.controlFlowId, existingCustomerCreditProductApplicationAddResponse.controlFlowId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, applicationStage, survivorLineRequiredFlag, existingCreditLimit, displayApplicantDetails, controlFlowId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExistingCustomerCreditProductApplicationAddResponse {\n");
    
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    applicationStage: ").append(toIndentedString(applicationStage)).append("\n");
    sb.append("    survivorLineRequiredFlag: ").append(toIndentedString(survivorLineRequiredFlag)).append("\n");
    sb.append("    existingCreditLimit: ").append(toIndentedString(existingCreditLimit)).append("\n");
    sb.append("    displayApplicantDetails: ").append(toIndentedString(displayApplicantDetails)).append("\n");
    sb.append("    controlFlowId: ").append(toIndentedString(controlFlowId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
