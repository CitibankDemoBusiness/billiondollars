/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ApplicantUpdateCreditCardProduct
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicantUpdateCreditCardProduct {
  @SerializedName("embossName")
  private String embossName = null;

  @SerializedName("requestedCreditLimit")
  private Double requestedCreditLimit = null;

  @SerializedName("overseasCardActivationFlag")
  private Boolean overseasCardActivationFlag = null;

  public ApplicantUpdateCreditCardProduct embossName(String embossName) {
    this.embossName = embossName;
    return this;
  }

   /**
   * Name to be embossed on card.
   * @return embossName
  **/
  @Schema(example = "Matthew Hayden", description = "Name to be embossed on card.")
  public String getEmbossName() {
    return embossName;
  }

  public void setEmbossName(String embossName) {
    this.embossName = embossName;
  }

  public ApplicantUpdateCreditCardProduct requestedCreditLimit(Double requestedCreditLimit) {
    this.requestedCreditLimit = requestedCreditLimit;
    return this;
  }

   /**
   * Credit limit accepted by applicant
   * @return requestedCreditLimit
  **/
  @Schema(example = "25000.25", description = "Credit limit accepted by applicant")
  public Double getRequestedCreditLimit() {
    return requestedCreditLimit;
  }

  public void setRequestedCreditLimit(Double requestedCreditLimit) {
    this.requestedCreditLimit = requestedCreditLimit;
  }

  public ApplicantUpdateCreditCardProduct overseasCardActivationFlag(Boolean overseasCardActivationFlag) {
    this.overseasCardActivationFlag = overseasCardActivationFlag;
    return this;
  }

   /**
   * Flag to activate the card for overseas usage.Valid values: true and false
   * @return overseasCardActivationFlag
  **/
  @Schema(example = "true", description = "Flag to activate the card for overseas usage.Valid values: true and false")
  public Boolean isOverseasCardActivationFlag() {
    return overseasCardActivationFlag;
  }

  public void setOverseasCardActivationFlag(Boolean overseasCardActivationFlag) {
    this.overseasCardActivationFlag = overseasCardActivationFlag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicantUpdateCreditCardProduct applicantUpdateCreditCardProduct = (ApplicantUpdateCreditCardProduct) o;
    return Objects.equals(this.embossName, applicantUpdateCreditCardProduct.embossName) &&
        Objects.equals(this.requestedCreditLimit, applicantUpdateCreditCardProduct.requestedCreditLimit) &&
        Objects.equals(this.overseasCardActivationFlag, applicantUpdateCreditCardProduct.overseasCardActivationFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(embossName, requestedCreditLimit, overseasCardActivationFlag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicantUpdateCreditCardProduct {\n");
    
    sb.append("    embossName: ").append(toIndentedString(embossName)).append("\n");
    sb.append("    requestedCreditLimit: ").append(toIndentedString(requestedCreditLimit)).append("\n");
    sb.append("    overseasCardActivationFlag: ").append(toIndentedString(overseasCardActivationFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
