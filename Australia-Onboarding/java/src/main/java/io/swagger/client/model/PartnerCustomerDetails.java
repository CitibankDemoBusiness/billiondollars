/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PartnerCustomerDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class PartnerCustomerDetails {
  @SerializedName("partnerCustomerInternalId")
  private String partnerCustomerInternalId = null;

  @SerializedName("partnerCustomerId")
  private String partnerCustomerId = null;

  @SerializedName("partnerCustomerSegment")
  private String partnerCustomerSegment = null;

  @SerializedName("verifiedByPartnerFlag")
  private Boolean verifiedByPartnerFlag = null;

  public PartnerCustomerDetails partnerCustomerInternalId(String partnerCustomerInternalId) {
    this.partnerCustomerInternalId = partnerCustomerInternalId;
    return this;
  }

   /**
   * Unique customer internal number associated with the partner.
   * @return partnerCustomerInternalId
  **/
  @Schema(example = "ZOW9IO793855", description = "Unique customer internal number associated with the partner.")
  public String getPartnerCustomerInternalId() {
    return partnerCustomerInternalId;
  }

  public void setPartnerCustomerInternalId(String partnerCustomerInternalId) {
    this.partnerCustomerInternalId = partnerCustomerInternalId;
  }

  public PartnerCustomerDetails partnerCustomerId(String partnerCustomerId) {
    this.partnerCustomerId = partnerCustomerId;
    return this;
  }

   /**
   * Unique customer Id associated with the partner
   * @return partnerCustomerId
  **/
  @Schema(example = "P011100000125", description = "Unique customer Id associated with the partner")
  public String getPartnerCustomerId() {
    return partnerCustomerId;
  }

  public void setPartnerCustomerId(String partnerCustomerId) {
    this.partnerCustomerId = partnerCustomerId;
  }

  public PartnerCustomerDetails partnerCustomerSegment(String partnerCustomerSegment) {
    this.partnerCustomerSegment = partnerCustomerSegment;
    return this;
  }

   /**
   * Partner customer segment.Partner customer segment.This is a reference data field. Please use /v1/utilities/referenceData/{partnerCustomerSegment} resource to get possible value of this field with description. 
   * @return partnerCustomerSegment
  **/
  @Schema(example = "AD1", description = "Partner customer segment.Partner customer segment.This is a reference data field. Please use /v1/utilities/referenceData/{partnerCustomerSegment} resource to get possible value of this field with description. ")
  public String getPartnerCustomerSegment() {
    return partnerCustomerSegment;
  }

  public void setPartnerCustomerSegment(String partnerCustomerSegment) {
    this.partnerCustomerSegment = partnerCustomerSegment;
  }

  public PartnerCustomerDetails verifiedByPartnerFlag(Boolean verifiedByPartnerFlag) {
    this.verifiedByPartnerFlag = verifiedByPartnerFlag;
    return this;
  }

   /**
   * Flag to indicate whether phone and address are verified by partner.
   * @return verifiedByPartnerFlag
  **/
  @Schema(example = "true", description = "Flag to indicate whether phone and address are verified by partner.")
  public Boolean isVerifiedByPartnerFlag() {
    return verifiedByPartnerFlag;
  }

  public void setVerifiedByPartnerFlag(Boolean verifiedByPartnerFlag) {
    this.verifiedByPartnerFlag = verifiedByPartnerFlag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartnerCustomerDetails partnerCustomerDetails = (PartnerCustomerDetails) o;
    return Objects.equals(this.partnerCustomerInternalId, partnerCustomerDetails.partnerCustomerInternalId) &&
        Objects.equals(this.partnerCustomerId, partnerCustomerDetails.partnerCustomerId) &&
        Objects.equals(this.partnerCustomerSegment, partnerCustomerDetails.partnerCustomerSegment) &&
        Objects.equals(this.verifiedByPartnerFlag, partnerCustomerDetails.verifiedByPartnerFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partnerCustomerInternalId, partnerCustomerId, partnerCustomerSegment, verifiedByPartnerFlag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartnerCustomerDetails {\n");
    
    sb.append("    partnerCustomerInternalId: ").append(toIndentedString(partnerCustomerInternalId)).append("\n");
    sb.append("    partnerCustomerId: ").append(toIndentedString(partnerCustomerId)).append("\n");
    sb.append("    partnerCustomerSegment: ").append(toIndentedString(partnerCustomerSegment)).append("\n");
    sb.append("    verifiedByPartnerFlag: ").append(toIndentedString(verifiedByPartnerFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
