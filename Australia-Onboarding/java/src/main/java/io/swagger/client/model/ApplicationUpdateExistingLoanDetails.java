/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ApplicationUpdateExistingLoanDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicationUpdateExistingLoanDetails {
  @SerializedName("loanType")
  private String loanType = null;

  @SerializedName("otherDebtObligationType")
  private String otherDebtObligationType = null;

  @SerializedName("monthlyInstallmentAmount")
  private Double monthlyInstallmentAmount = null;

  @SerializedName("outstandingBalanceAmount")
  private Double outstandingBalanceAmount = null;

  @SerializedName("debtOwnership")
  private String debtOwnership = null;

  @SerializedName("lenderName")
  private String lenderName = null;

  public ApplicationUpdateExistingLoanDetails loanType(String loanType) {
    this.loanType = loanType;
    return this;
  }

   /**
   * Loan Type.This is a reference data field. Please use /v1/apac/utilities/referenceData/{loanType} resource to get valid value of this field with description. You can use loanType field name as the referenceCode parameter to retrieve the values.
   * @return loanType
  **/
  @Schema(example = "STUDENT_LOAN", description = "Loan Type.This is a reference data field. Please use /v1/apac/utilities/referenceData/{loanType} resource to get valid value of this field with description. You can use loanType field name as the referenceCode parameter to retrieve the values.")
  public String getLoanType() {
    return loanType;
  }

  public void setLoanType(String loanType) {
    this.loanType = loanType;
  }

  public ApplicationUpdateExistingLoanDetails otherDebtObligationType(String otherDebtObligationType) {
    this.otherDebtObligationType = otherDebtObligationType;
    return this;
  }

   /**
   * Other debt obligation type.
   * @return otherDebtObligationType
  **/
  @Schema(example = "Free text", description = "Other debt obligation type.")
  public String getOtherDebtObligationType() {
    return otherDebtObligationType;
  }

  public void setOtherDebtObligationType(String otherDebtObligationType) {
    this.otherDebtObligationType = otherDebtObligationType;
  }

  public ApplicationUpdateExistingLoanDetails monthlyInstallmentAmount(Double monthlyInstallmentAmount) {
    this.monthlyInstallmentAmount = monthlyInstallmentAmount;
    return this;
  }

   /**
   * Monthly repayment amount
   * @return monthlyInstallmentAmount
  **/
  @Schema(example = "250.25", description = "Monthly repayment amount")
  public Double getMonthlyInstallmentAmount() {
    return monthlyInstallmentAmount;
  }

  public void setMonthlyInstallmentAmount(Double monthlyInstallmentAmount) {
    this.monthlyInstallmentAmount = monthlyInstallmentAmount;
  }

  public ApplicationUpdateExistingLoanDetails outstandingBalanceAmount(Double outstandingBalanceAmount) {
    this.outstandingBalanceAmount = outstandingBalanceAmount;
    return this;
  }

   /**
   * Balance Owing
   * @return outstandingBalanceAmount
  **/
  @Schema(example = "5000.25", description = "Balance Owing")
  public Double getOutstandingBalanceAmount() {
    return outstandingBalanceAmount;
  }

  public void setOutstandingBalanceAmount(Double outstandingBalanceAmount) {
    this.outstandingBalanceAmount = outstandingBalanceAmount;
  }

  public ApplicationUpdateExistingLoanDetails debtOwnership(String debtOwnership) {
    this.debtOwnership = debtOwnership;
    return this;
  }

   /**
   * Nature debt ownership. Please use /v1/apac/utilities/referenceData/{debtOwnership} resource to get valid value of this field with description.
   * @return debtOwnership
  **/
  @Schema(example = "JOINT", description = "Nature debt ownership. Please use /v1/apac/utilities/referenceData/{debtOwnership} resource to get valid value of this field with description.")
  public String getDebtOwnership() {
    return debtOwnership;
  }

  public void setDebtOwnership(String debtOwnership) {
    this.debtOwnership = debtOwnership;
  }

  public ApplicationUpdateExistingLoanDetails lenderName(String lenderName) {
    this.lenderName = lenderName;
    return this;
  }

   /**
   * Name of the lender/non-banking financial institution.
   * @return lenderName
  **/
  @Schema(example = "KINROS CORPORATION", description = "Name of the lender/non-banking financial institution.")
  public String getLenderName() {
    return lenderName;
  }

  public void setLenderName(String lenderName) {
    this.lenderName = lenderName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationUpdateExistingLoanDetails applicationUpdateExistingLoanDetails = (ApplicationUpdateExistingLoanDetails) o;
    return Objects.equals(this.loanType, applicationUpdateExistingLoanDetails.loanType) &&
        Objects.equals(this.otherDebtObligationType, applicationUpdateExistingLoanDetails.otherDebtObligationType) &&
        Objects.equals(this.monthlyInstallmentAmount, applicationUpdateExistingLoanDetails.monthlyInstallmentAmount) &&
        Objects.equals(this.outstandingBalanceAmount, applicationUpdateExistingLoanDetails.outstandingBalanceAmount) &&
        Objects.equals(this.debtOwnership, applicationUpdateExistingLoanDetails.debtOwnership) &&
        Objects.equals(this.lenderName, applicationUpdateExistingLoanDetails.lenderName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loanType, otherDebtObligationType, monthlyInstallmentAmount, outstandingBalanceAmount, debtOwnership, lenderName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationUpdateExistingLoanDetails {\n");
    
    sb.append("    loanType: ").append(toIndentedString(loanType)).append("\n");
    sb.append("    otherDebtObligationType: ").append(toIndentedString(otherDebtObligationType)).append("\n");
    sb.append("    monthlyInstallmentAmount: ").append(toIndentedString(monthlyInstallmentAmount)).append("\n");
    sb.append("    outstandingBalanceAmount: ").append(toIndentedString(outstandingBalanceAmount)).append("\n");
    sb.append("    debtOwnership: ").append(toIndentedString(debtOwnership)).append("\n");
    sb.append("    lenderName: ").append(toIndentedString(lenderName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
