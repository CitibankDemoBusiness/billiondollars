/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApplicantUpdateCountrySpecificAddress;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ApplicantUpdateAddress
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicantUpdateAddress {
  @SerializedName("addressType")
  private String addressType = null;

  @SerializedName("addressLine1")
  private String addressLine1 = null;

  @SerializedName("addressLine2")
  private String addressLine2 = null;

  @SerializedName("addressLine3")
  private String addressLine3 = null;

  @SerializedName("addressLine4")
  private String addressLine4 = null;

  @SerializedName("cityName")
  private String cityName = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  @SerializedName("residenceDurationInYears")
  private Integer residenceDurationInYears = null;

  @SerializedName("residenceDurationInMonths")
  private Integer residenceDurationInMonths = null;

  @SerializedName("countrySpecificAddress")
  private ApplicantUpdateCountrySpecificAddress countrySpecificAddress = null;

  public ApplicantUpdateAddress addressType(String addressType) {
    this.addressType = addressType;
    return this;
  }

   /**
   * Type of the address. This is a reference data field. Please use /utilities/referenceData/{addressType} resource to get valid values of this field with descriptions. You can use addressType as the referenceCode parameter to retrieve the values.
   * @return addressType
  **/
  @Schema(example = "HOME_ADDRESS", description = "Type of the address. This is a reference data field. Please use /utilities/referenceData/{addressType} resource to get valid values of this field with descriptions. You can use addressType as the referenceCode parameter to retrieve the values.")
  public String getAddressType() {
    return addressType;
  }

  public void setAddressType(String addressType) {
    this.addressType = addressType;
  }

  public ApplicantUpdateAddress addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Address line 1
   * @return addressLine1
  **/
  @Schema(example = "Post Box 56", description = "Address line 1")
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }

  public ApplicantUpdateAddress addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Address line 2
   * @return addressLine2
  **/
  @Schema(example = "99 George Street", description = "Address line 2")
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }

  public ApplicantUpdateAddress addressLine3(String addressLine3) {
    this.addressLine3 = addressLine3;
    return this;
  }

   /**
   * Address line 3
   * @return addressLine3
  **/
  @Schema(example = "Broadway Avenue", description = "Address line 3")
  public String getAddressLine3() {
    return addressLine3;
  }

  public void setAddressLine3(String addressLine3) {
    this.addressLine3 = addressLine3;
  }

  public ApplicantUpdateAddress addressLine4(String addressLine4) {
    this.addressLine4 = addressLine4;
    return this;
  }

   /**
   * Address line 4
   * @return addressLine4
  **/
  @Schema(example = "Wandaloo ESP", description = "Address line 4")
  public String getAddressLine4() {
    return addressLine4;
  }

  public void setAddressLine4(String addressLine4) {
    this.addressLine4 = addressLine4;
  }

  public ApplicantUpdateAddress cityName(String cityName) {
    this.cityName = cityName;
    return this;
  }

   /**
   * City
   * @return cityName
  **/
  @Schema(example = "Tharwa", description = "City")
  public String getCityName() {
    return cityName;
  }

  public void setCityName(String cityName) {
    this.cityName = cityName;
  }

  public ApplicantUpdateAddress state(String state) {
    this.state = state;
    return this;
  }

   /**
   * State.This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressState} resource to get valid value of this field with description. You can use addressState field name as the referenceCode parameter to retrieve the values.
   * @return state
  **/
  @Schema(example = "Canberra", description = "State.This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressState} resource to get valid value of this field with description. You can use addressState field name as the referenceCode parameter to retrieve the values.")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public ApplicantUpdateAddress postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal/ZIP code
   * @return postalCode
  **/
  @Schema(example = "WA 6125", description = "Postal/ZIP code")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public ApplicantUpdateAddress countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO country code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{country} resource to get valid value of this field with description. You can use countryCode field name as the referenceCode parameter to retrieve the values.
   * @return countryCode
  **/
  @Schema(example = "AU", description = "ISO country code. This is a reference data field. Please use /v1/apac/utilities/referenceData/{country} resource to get valid value of this field with description. You can use countryCode field name as the referenceCode parameter to retrieve the values.")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public ApplicantUpdateAddress residenceDurationInYears(Integer residenceDurationInYears) {
    this.residenceDurationInYears = residenceDurationInYears;
    return this;
  }

   /**
   * Applicant&#x27;s residence duration in the current address in years
   * @return residenceDurationInYears
  **/
  @Schema(example = "2", description = "Applicant's residence duration in the current address in years")
  public Integer getResidenceDurationInYears() {
    return residenceDurationInYears;
  }

  public void setResidenceDurationInYears(Integer residenceDurationInYears) {
    this.residenceDurationInYears = residenceDurationInYears;
  }

  public ApplicantUpdateAddress residenceDurationInMonths(Integer residenceDurationInMonths) {
    this.residenceDurationInMonths = residenceDurationInMonths;
    return this;
  }

   /**
   * Applicant&#x27;s residence duration in the current address in months
   * @return residenceDurationInMonths
  **/
  @Schema(example = "5", description = "Applicant's residence duration in the current address in months")
  public Integer getResidenceDurationInMonths() {
    return residenceDurationInMonths;
  }

  public void setResidenceDurationInMonths(Integer residenceDurationInMonths) {
    this.residenceDurationInMonths = residenceDurationInMonths;
  }

  public ApplicantUpdateAddress countrySpecificAddress(ApplicantUpdateCountrySpecificAddress countrySpecificAddress) {
    this.countrySpecificAddress = countrySpecificAddress;
    return this;
  }

   /**
   * Get countrySpecificAddress
   * @return countrySpecificAddress
  **/
  @Schema(description = "")
  public ApplicantUpdateCountrySpecificAddress getCountrySpecificAddress() {
    return countrySpecificAddress;
  }

  public void setCountrySpecificAddress(ApplicantUpdateCountrySpecificAddress countrySpecificAddress) {
    this.countrySpecificAddress = countrySpecificAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicantUpdateAddress applicantUpdateAddress = (ApplicantUpdateAddress) o;
    return Objects.equals(this.addressType, applicantUpdateAddress.addressType) &&
        Objects.equals(this.addressLine1, applicantUpdateAddress.addressLine1) &&
        Objects.equals(this.addressLine2, applicantUpdateAddress.addressLine2) &&
        Objects.equals(this.addressLine3, applicantUpdateAddress.addressLine3) &&
        Objects.equals(this.addressLine4, applicantUpdateAddress.addressLine4) &&
        Objects.equals(this.cityName, applicantUpdateAddress.cityName) &&
        Objects.equals(this.state, applicantUpdateAddress.state) &&
        Objects.equals(this.postalCode, applicantUpdateAddress.postalCode) &&
        Objects.equals(this.countryCode, applicantUpdateAddress.countryCode) &&
        Objects.equals(this.residenceDurationInYears, applicantUpdateAddress.residenceDurationInYears) &&
        Objects.equals(this.residenceDurationInMonths, applicantUpdateAddress.residenceDurationInMonths) &&
        Objects.equals(this.countrySpecificAddress, applicantUpdateAddress.countrySpecificAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressType, addressLine1, addressLine2, addressLine3, addressLine4, cityName, state, postalCode, countryCode, residenceDurationInYears, residenceDurationInMonths, countrySpecificAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicantUpdateAddress {\n");
    
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressLine3: ").append(toIndentedString(addressLine3)).append("\n");
    sb.append("    addressLine4: ").append(toIndentedString(addressLine4)).append("\n");
    sb.append("    cityName: ").append(toIndentedString(cityName)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    residenceDurationInYears: ").append(toIndentedString(residenceDurationInYears)).append("\n");
    sb.append("    residenceDurationInMonths: ").append(toIndentedString(residenceDurationInMonths)).append("\n");
    sb.append("    countrySpecificAddress: ").append(toIndentedString(countrySpecificAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
