/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * RepaymentSchedule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class RepaymentSchedule {
  @SerializedName("tenorOccurence")
  private String tenorOccurence = null;

  @SerializedName("paymentDueDate")
  private LocalDate paymentDueDate = null;

  @SerializedName("monthlyInstallmentAmount")
  private Double monthlyInstallmentAmount = null;

  @SerializedName("principalAmount")
  private Double principalAmount = null;

  @SerializedName("interestAmount")
  private Double interestAmount = null;

  @SerializedName("remainingPrincipalAmount")
  private Double remainingPrincipalAmount = null;

  public RepaymentSchedule tenorOccurence(String tenorOccurence) {
    this.tenorOccurence = tenorOccurence;
    return this;
  }

   /**
   * Different tenor applicable for repayment
   * @return tenorOccurence
  **/
  @Schema(example = "10", description = "Different tenor applicable for repayment")
  public String getTenorOccurence() {
    return tenorOccurence;
  }

  public void setTenorOccurence(String tenorOccurence) {
    this.tenorOccurence = tenorOccurence;
  }

  public RepaymentSchedule paymentDueDate(LocalDate paymentDueDate) {
    this.paymentDueDate = paymentDueDate;
    return this;
  }

   /**
   * Payment due date for each instalment in ISO 8601 date format YYYY-MM-DD
   * @return paymentDueDate
  **/
  @Schema(example = "Fri Sep 15 00:00:00 UTC 1972", description = "Payment due date for each instalment in ISO 8601 date format YYYY-MM-DD")
  public LocalDate getPaymentDueDate() {
    return paymentDueDate;
  }

  public void setPaymentDueDate(LocalDate paymentDueDate) {
    this.paymentDueDate = paymentDueDate;
  }

  public RepaymentSchedule monthlyInstallmentAmount(Double monthlyInstallmentAmount) {
    this.monthlyInstallmentAmount = monthlyInstallmentAmount;
    return this;
  }

   /**
   * Monthly instalment amount for loan taken
   * @return monthlyInstallmentAmount
  **/
  @Schema(example = "500.25", description = "Monthly instalment amount for loan taken")
  public Double getMonthlyInstallmentAmount() {
    return monthlyInstallmentAmount;
  }

  public void setMonthlyInstallmentAmount(Double monthlyInstallmentAmount) {
    this.monthlyInstallmentAmount = monthlyInstallmentAmount;
  }

  public RepaymentSchedule principalAmount(Double principalAmount) {
    this.principalAmount = principalAmount;
    return this;
  }

   /**
   * Principal amount of instalment
   * @return principalAmount
  **/
  @Schema(example = "500.25", description = "Principal amount of instalment")
  public Double getPrincipalAmount() {
    return principalAmount;
  }

  public void setPrincipalAmount(Double principalAmount) {
    this.principalAmount = principalAmount;
  }

  public RepaymentSchedule interestAmount(Double interestAmount) {
    this.interestAmount = interestAmount;
    return this;
  }

   /**
   * Interest amount of instalment
   * @return interestAmount
  **/
  @Schema(example = "500.25", description = "Interest amount of instalment")
  public Double getInterestAmount() {
    return interestAmount;
  }

  public void setInterestAmount(Double interestAmount) {
    this.interestAmount = interestAmount;
  }

  public RepaymentSchedule remainingPrincipalAmount(Double remainingPrincipalAmount) {
    this.remainingPrincipalAmount = remainingPrincipalAmount;
    return this;
  }

   /**
   * Remaining Principal Amount after each instalment has been paid by customer
   * @return remainingPrincipalAmount
  **/
  @Schema(example = "500.25", description = "Remaining Principal Amount after each instalment has been paid by customer")
  public Double getRemainingPrincipalAmount() {
    return remainingPrincipalAmount;
  }

  public void setRemainingPrincipalAmount(Double remainingPrincipalAmount) {
    this.remainingPrincipalAmount = remainingPrincipalAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepaymentSchedule repaymentSchedule = (RepaymentSchedule) o;
    return Objects.equals(this.tenorOccurence, repaymentSchedule.tenorOccurence) &&
        Objects.equals(this.paymentDueDate, repaymentSchedule.paymentDueDate) &&
        Objects.equals(this.monthlyInstallmentAmount, repaymentSchedule.monthlyInstallmentAmount) &&
        Objects.equals(this.principalAmount, repaymentSchedule.principalAmount) &&
        Objects.equals(this.interestAmount, repaymentSchedule.interestAmount) &&
        Objects.equals(this.remainingPrincipalAmount, repaymentSchedule.remainingPrincipalAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenorOccurence, paymentDueDate, monthlyInstallmentAmount, principalAmount, interestAmount, remainingPrincipalAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepaymentSchedule {\n");
    
    sb.append("    tenorOccurence: ").append(toIndentedString(tenorOccurence)).append("\n");
    sb.append("    paymentDueDate: ").append(toIndentedString(paymentDueDate)).append("\n");
    sb.append("    monthlyInstallmentAmount: ").append(toIndentedString(monthlyInstallmentAmount)).append("\n");
    sb.append("    principalAmount: ").append(toIndentedString(principalAmount)).append("\n");
    sb.append("    interestAmount: ").append(toIndentedString(interestAmount)).append("\n");
    sb.append("    remainingPrincipalAmount: ").append(toIndentedString(remainingPrincipalAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
