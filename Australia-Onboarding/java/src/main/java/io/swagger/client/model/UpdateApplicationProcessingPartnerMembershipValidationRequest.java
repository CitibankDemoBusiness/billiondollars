/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ConsentDetails;
import io.swagger.client.model.MembershipInformation;
import io.swagger.client.model.Product;
import io.swagger.client.model.SalesAgentDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * UpdateApplicationProcessingPartnerMembershipValidationRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class UpdateApplicationProcessingPartnerMembershipValidationRequest {
  @SerializedName("membershipInformation")
  private MembershipInformation membershipInformation = null;

  @SerializedName("salesAgentDetails")
  private SalesAgentDetails salesAgentDetails = null;

  @SerializedName("product")
  private Product product = null;

  @SerializedName("consentDetails")
  private List<ConsentDetails> consentDetails = null;

  public UpdateApplicationProcessingPartnerMembershipValidationRequest membershipInformation(MembershipInformation membershipInformation) {
    this.membershipInformation = membershipInformation;
    return this;
  }

   /**
   * Get membershipInformation
   * @return membershipInformation
  **/
  @Schema(description = "")
  public MembershipInformation getMembershipInformation() {
    return membershipInformation;
  }

  public void setMembershipInformation(MembershipInformation membershipInformation) {
    this.membershipInformation = membershipInformation;
  }

  public UpdateApplicationProcessingPartnerMembershipValidationRequest salesAgentDetails(SalesAgentDetails salesAgentDetails) {
    this.salesAgentDetails = salesAgentDetails;
    return this;
  }

   /**
   * Get salesAgentDetails
   * @return salesAgentDetails
  **/
  @Schema(description = "")
  public SalesAgentDetails getSalesAgentDetails() {
    return salesAgentDetails;
  }

  public void setSalesAgentDetails(SalesAgentDetails salesAgentDetails) {
    this.salesAgentDetails = salesAgentDetails;
  }

  public UpdateApplicationProcessingPartnerMembershipValidationRequest product(Product product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @Schema(description = "")
  public Product getProduct() {
    return product;
  }

  public void setProduct(Product product) {
    this.product = product;
  }

  public UpdateApplicationProcessingPartnerMembershipValidationRequest consentDetails(List<ConsentDetails> consentDetails) {
    this.consentDetails = consentDetails;
    return this;
  }

  public UpdateApplicationProcessingPartnerMembershipValidationRequest addConsentDetailsItem(ConsentDetails consentDetailsItem) {
    if (this.consentDetails == null) {
      this.consentDetails = new ArrayList<ConsentDetails>();
    }
    this.consentDetails.add(consentDetailsItem);
    return this;
  }

   /**
   * Get consentDetails
   * @return consentDetails
  **/
  @Schema(description = "")
  public List<ConsentDetails> getConsentDetails() {
    return consentDetails;
  }

  public void setConsentDetails(List<ConsentDetails> consentDetails) {
    this.consentDetails = consentDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateApplicationProcessingPartnerMembershipValidationRequest updateApplicationProcessingPartnerMembershipValidationRequest = (UpdateApplicationProcessingPartnerMembershipValidationRequest) o;
    return Objects.equals(this.membershipInformation, updateApplicationProcessingPartnerMembershipValidationRequest.membershipInformation) &&
        Objects.equals(this.salesAgentDetails, updateApplicationProcessingPartnerMembershipValidationRequest.salesAgentDetails) &&
        Objects.equals(this.product, updateApplicationProcessingPartnerMembershipValidationRequest.product) &&
        Objects.equals(this.consentDetails, updateApplicationProcessingPartnerMembershipValidationRequest.consentDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(membershipInformation, salesAgentDetails, product, consentDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateApplicationProcessingPartnerMembershipValidationRequest {\n");
    
    sb.append("    membershipInformation: ").append(toIndentedString(membershipInformation)).append("\n");
    sb.append("    salesAgentDetails: ").append(toIndentedString(salesAgentDetails)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    consentDetails: ").append(toIndentedString(consentDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
