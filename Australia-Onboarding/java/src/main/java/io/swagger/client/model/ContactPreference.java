/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ContactPreference
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ContactPreference {
  @SerializedName("sendSmsAdviceFag")
  private Boolean sendSmsAdviceFag = null;

  @SerializedName("preferredMailingAddress")
  private String preferredMailingAddress = null;

  public ContactPreference sendSmsAdviceFag(Boolean sendSmsAdviceFag) {
    this.sendSmsAdviceFag = sendSmsAdviceFag;
    return this;
  }

   /**
   * Prospect is opting to receive advices via SMS. Valid values: true and false
   * @return sendSmsAdviceFag
  **/
  @Schema(example = "true", description = "Prospect is opting to receive advices via SMS. Valid values: true and false")
  public Boolean isSendSmsAdviceFag() {
    return sendSmsAdviceFag;
  }

  public void setSendSmsAdviceFag(Boolean sendSmsAdviceFag) {
    this.sendSmsAdviceFag = sendSmsAdviceFag;
  }

  public ContactPreference preferredMailingAddress(String preferredMailingAddress) {
    this.preferredMailingAddress = preferredMailingAddress;
    return this;
  }

   /**
   * Preferred Mailing Address by prospect. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid values of this field with descriptions. You can use the field name as preferredMailingAddress referenceCode parameter to retrieve the values.
   * @return preferredMailingAddress
  **/
  @Schema(example = "HOME_ADDRESS", description = "Preferred Mailing Address by prospect. This is a reference data field. Please use /v1/apac/utilities/referenceData/{addressType} resource to get valid values of this field with descriptions. You can use the field name as preferredMailingAddress referenceCode parameter to retrieve the values.")
  public String getPreferredMailingAddress() {
    return preferredMailingAddress;
  }

  public void setPreferredMailingAddress(String preferredMailingAddress) {
    this.preferredMailingAddress = preferredMailingAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactPreference contactPreference = (ContactPreference) o;
    return Objects.equals(this.sendSmsAdviceFag, contactPreference.sendSmsAdviceFag) &&
        Objects.equals(this.preferredMailingAddress, contactPreference.preferredMailingAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sendSmsAdviceFag, preferredMailingAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactPreference {\n");
    
    sb.append("    sendSmsAdviceFag: ").append(toIndentedString(sendSmsAdviceFag)).append("\n");
    sb.append("    preferredMailingAddress: ").append(toIndentedString(preferredMailingAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
