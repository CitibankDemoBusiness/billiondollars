/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApplicationUpdateCreditCardProduct;
import io.swagger.client.model.ApplicationUpdateReadyCreditProduct;
import io.swagger.client.model.ApplicationUpdateUnsecuredLoanProduct;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ApplicationUpdateProduct
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ApplicationUpdateProduct {
  @SerializedName("creditCardProduct")
  private ApplicationUpdateCreditCardProduct creditCardProduct = null;

  @SerializedName("readyCreditProduct")
  private ApplicationUpdateReadyCreditProduct readyCreditProduct = null;

  @SerializedName("unsecuredLoanProduct")
  private ApplicationUpdateUnsecuredLoanProduct unsecuredLoanProduct = null;

  public ApplicationUpdateProduct creditCardProduct(ApplicationUpdateCreditCardProduct creditCardProduct) {
    this.creditCardProduct = creditCardProduct;
    return this;
  }

   /**
   * Get creditCardProduct
   * @return creditCardProduct
  **/
  @Schema(description = "")
  public ApplicationUpdateCreditCardProduct getCreditCardProduct() {
    return creditCardProduct;
  }

  public void setCreditCardProduct(ApplicationUpdateCreditCardProduct creditCardProduct) {
    this.creditCardProduct = creditCardProduct;
  }

  public ApplicationUpdateProduct readyCreditProduct(ApplicationUpdateReadyCreditProduct readyCreditProduct) {
    this.readyCreditProduct = readyCreditProduct;
    return this;
  }

   /**
   * Get readyCreditProduct
   * @return readyCreditProduct
  **/
  @Schema(description = "")
  public ApplicationUpdateReadyCreditProduct getReadyCreditProduct() {
    return readyCreditProduct;
  }

  public void setReadyCreditProduct(ApplicationUpdateReadyCreditProduct readyCreditProduct) {
    this.readyCreditProduct = readyCreditProduct;
  }

  public ApplicationUpdateProduct unsecuredLoanProduct(ApplicationUpdateUnsecuredLoanProduct unsecuredLoanProduct) {
    this.unsecuredLoanProduct = unsecuredLoanProduct;
    return this;
  }

   /**
   * Get unsecuredLoanProduct
   * @return unsecuredLoanProduct
  **/
  @Schema(description = "")
  public ApplicationUpdateUnsecuredLoanProduct getUnsecuredLoanProduct() {
    return unsecuredLoanProduct;
  }

  public void setUnsecuredLoanProduct(ApplicationUpdateUnsecuredLoanProduct unsecuredLoanProduct) {
    this.unsecuredLoanProduct = unsecuredLoanProduct;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationUpdateProduct applicationUpdateProduct = (ApplicationUpdateProduct) o;
    return Objects.equals(this.creditCardProduct, applicationUpdateProduct.creditCardProduct) &&
        Objects.equals(this.readyCreditProduct, applicationUpdateProduct.readyCreditProduct) &&
        Objects.equals(this.unsecuredLoanProduct, applicationUpdateProduct.unsecuredLoanProduct);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditCardProduct, readyCreditProduct, unsecuredLoanProduct);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationUpdateProduct {\n");
    
    sb.append("    creditCardProduct: ").append(toIndentedString(creditCardProduct)).append("\n");
    sb.append("    readyCreditProduct: ").append(toIndentedString(readyCreditProduct)).append("\n");
    sb.append("    unsecuredLoanProduct: ").append(toIndentedString(unsecuredLoanProduct)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
