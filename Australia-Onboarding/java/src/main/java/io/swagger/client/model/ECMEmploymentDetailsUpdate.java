/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ECMEmploymentDetailsUpdate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ECMEmploymentDetailsUpdate {
  @SerializedName("employerName")
  private String employerName = null;

  @SerializedName("employerRegistrationNumber")
  private String employerRegistrationNumber = null;

  @SerializedName("occupationCode")
  private String occupationCode = null;

  @SerializedName("otherOccupationDescription")
  private String otherOccupationDescription = null;

  @SerializedName("industryCode")
  private String industryCode = null;

  @SerializedName("otherIndustryDescription")
  private String otherIndustryDescription = null;

  @SerializedName("employmentDurationInYears")
  private Integer employmentDurationInYears = null;

  @SerializedName("employmentDurationInMonths")
  private Integer employmentDurationInMonths = null;

  @SerializedName("previousEmployerName")
  private String previousEmployerName = null;

  @SerializedName("monthsInPreviousEmployment")
  private Integer monthsInPreviousEmployment = null;

  @SerializedName("yearsInPreviousEmployment")
  private Integer yearsInPreviousEmployment = null;

  @SerializedName("emailAddress")
  private String emailAddress = null;

  @SerializedName("employmentStatus")
  private String employmentStatus = null;

  public ECMEmploymentDetailsUpdate employerName(String employerName) {
    this.employerName = employerName;
    return this;
  }

   /**
   * Name of the employer.
   * @return employerName
  **/
  @Schema(description = "Name of the employer.")
  public String getEmployerName() {
    return employerName;
  }

  public void setEmployerName(String employerName) {
    this.employerName = employerName;
  }

  public ECMEmploymentDetailsUpdate employerRegistrationNumber(String employerRegistrationNumber) {
    this.employerRegistrationNumber = employerRegistrationNumber;
    return this;
  }

   /**
   * Employer registration number
   * @return employerRegistrationNumber
  **/
  @Schema(description = "Employer registration number")
  public String getEmployerRegistrationNumber() {
    return employerRegistrationNumber;
  }

  public void setEmployerRegistrationNumber(String employerRegistrationNumber) {
    this.employerRegistrationNumber = employerRegistrationNumber;
  }

  public ECMEmploymentDetailsUpdate occupationCode(String occupationCode) {
    this.occupationCode = occupationCode;
    return this;
  }

   /**
   * Occupation code. This is a reference data field. Please use /v1/utilities/referenceData/{occupationCode} resource to get valid value of this field with description.
   * @return occupationCode
  **/
  @Schema(description = "Occupation code. This is a reference data field. Please use /v1/utilities/referenceData/{occupationCode} resource to get valid value of this field with description.")
  public String getOccupationCode() {
    return occupationCode;
  }

  public void setOccupationCode(String occupationCode) {
    this.occupationCode = occupationCode;
  }

  public ECMEmploymentDetailsUpdate otherOccupationDescription(String otherOccupationDescription) {
    this.otherOccupationDescription = otherOccupationDescription;
    return this;
  }

   /**
   * Other Occupation details entered by the Applicant.This is applicable if Applicant selects Others from the occupation Code drop down
   * @return otherOccupationDescription
  **/
  @Schema(description = "Other Occupation details entered by the Applicant.This is applicable if Applicant selects Others from the occupation Code drop down")
  public String getOtherOccupationDescription() {
    return otherOccupationDescription;
  }

  public void setOtherOccupationDescription(String otherOccupationDescription) {
    this.otherOccupationDescription = otherOccupationDescription;
  }

  public ECMEmploymentDetailsUpdate industryCode(String industryCode) {
    this.industryCode = industryCode;
    return this;
  }

   /**
   * Code of the industry of employment. This is a reference data field. Please use /v1/utilities/referenceData/{industryCode} resource to get valid value of this field with description.
   * @return industryCode
  **/
  @Schema(description = "Code of the industry of employment. This is a reference data field. Please use /v1/utilities/referenceData/{industryCode} resource to get valid value of this field with description.")
  public String getIndustryCode() {
    return industryCode;
  }

  public void setIndustryCode(String industryCode) {
    this.industryCode = industryCode;
  }

  public ECMEmploymentDetailsUpdate otherIndustryDescription(String otherIndustryDescription) {
    this.otherIndustryDescription = otherIndustryDescription;
    return this;
  }

   /**
   * Other Industry details entered by the Applicant.This is applicable if Applicant selects Others from the industry code drop down
   * @return otherIndustryDescription
  **/
  @Schema(description = "Other Industry details entered by the Applicant.This is applicable if Applicant selects Others from the industry code drop down")
  public String getOtherIndustryDescription() {
    return otherIndustryDescription;
  }

  public void setOtherIndustryDescription(String otherIndustryDescription) {
    this.otherIndustryDescription = otherIndustryDescription;
  }

  public ECMEmploymentDetailsUpdate employmentDurationInYears(Integer employmentDurationInYears) {
    this.employmentDurationInYears = employmentDurationInYears;
    return this;
  }

   /**
   * Employment duration in years
   * @return employmentDurationInYears
  **/
  @Schema(description = "Employment duration in years")
  public Integer getEmploymentDurationInYears() {
    return employmentDurationInYears;
  }

  public void setEmploymentDurationInYears(Integer employmentDurationInYears) {
    this.employmentDurationInYears = employmentDurationInYears;
  }

  public ECMEmploymentDetailsUpdate employmentDurationInMonths(Integer employmentDurationInMonths) {
    this.employmentDurationInMonths = employmentDurationInMonths;
    return this;
  }

   /**
   * Employment duration in months
   * @return employmentDurationInMonths
  **/
  @Schema(description = "Employment duration in months")
  public Integer getEmploymentDurationInMonths() {
    return employmentDurationInMonths;
  }

  public void setEmploymentDurationInMonths(Integer employmentDurationInMonths) {
    this.employmentDurationInMonths = employmentDurationInMonths;
  }

  public ECMEmploymentDetailsUpdate previousEmployerName(String previousEmployerName) {
    this.previousEmployerName = previousEmployerName;
    return this;
  }

   /**
   * Name of the previous employer.
   * @return previousEmployerName
  **/
  @Schema(description = "Name of the previous employer.")
  public String getPreviousEmployerName() {
    return previousEmployerName;
  }

  public void setPreviousEmployerName(String previousEmployerName) {
    this.previousEmployerName = previousEmployerName;
  }

  public ECMEmploymentDetailsUpdate monthsInPreviousEmployment(Integer monthsInPreviousEmployment) {
    this.monthsInPreviousEmployment = monthsInPreviousEmployment;
    return this;
  }

   /**
   * Months spent in the previous employment
   * @return monthsInPreviousEmployment
  **/
  @Schema(description = "Months spent in the previous employment")
  public Integer getMonthsInPreviousEmployment() {
    return monthsInPreviousEmployment;
  }

  public void setMonthsInPreviousEmployment(Integer monthsInPreviousEmployment) {
    this.monthsInPreviousEmployment = monthsInPreviousEmployment;
  }

  public ECMEmploymentDetailsUpdate yearsInPreviousEmployment(Integer yearsInPreviousEmployment) {
    this.yearsInPreviousEmployment = yearsInPreviousEmployment;
    return this;
  }

   /**
   * Years spent in the previous employment
   * @return yearsInPreviousEmployment
  **/
  @Schema(description = "Years spent in the previous employment")
  public Integer getYearsInPreviousEmployment() {
    return yearsInPreviousEmployment;
  }

  public void setYearsInPreviousEmployment(Integer yearsInPreviousEmployment) {
    this.yearsInPreviousEmployment = yearsInPreviousEmployment;
  }

  public ECMEmploymentDetailsUpdate emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Employers email address
   * @return emailAddress
  **/
  @Schema(description = "Employers email address")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public ECMEmploymentDetailsUpdate employmentStatus(String employmentStatus) {
    this.employmentStatus = employmentStatus;
    return this;
  }

   /**
   * Status of the employment.This is a reference data field. Please use /v1/utilities/referenceData/{employmentStatus} resource to get valid value of this field with description.
   * @return employmentStatus
  **/
  @Schema(example = "EMPLOYED", description = "Status of the employment.This is a reference data field. Please use /v1/utilities/referenceData/{employmentStatus} resource to get valid value of this field with description.")
  public String getEmploymentStatus() {
    return employmentStatus;
  }

  public void setEmploymentStatus(String employmentStatus) {
    this.employmentStatus = employmentStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ECMEmploymentDetailsUpdate ecMEmploymentDetailsUpdate = (ECMEmploymentDetailsUpdate) o;
    return Objects.equals(this.employerName, ecMEmploymentDetailsUpdate.employerName) &&
        Objects.equals(this.employerRegistrationNumber, ecMEmploymentDetailsUpdate.employerRegistrationNumber) &&
        Objects.equals(this.occupationCode, ecMEmploymentDetailsUpdate.occupationCode) &&
        Objects.equals(this.otherOccupationDescription, ecMEmploymentDetailsUpdate.otherOccupationDescription) &&
        Objects.equals(this.industryCode, ecMEmploymentDetailsUpdate.industryCode) &&
        Objects.equals(this.otherIndustryDescription, ecMEmploymentDetailsUpdate.otherIndustryDescription) &&
        Objects.equals(this.employmentDurationInYears, ecMEmploymentDetailsUpdate.employmentDurationInYears) &&
        Objects.equals(this.employmentDurationInMonths, ecMEmploymentDetailsUpdate.employmentDurationInMonths) &&
        Objects.equals(this.previousEmployerName, ecMEmploymentDetailsUpdate.previousEmployerName) &&
        Objects.equals(this.monthsInPreviousEmployment, ecMEmploymentDetailsUpdate.monthsInPreviousEmployment) &&
        Objects.equals(this.yearsInPreviousEmployment, ecMEmploymentDetailsUpdate.yearsInPreviousEmployment) &&
        Objects.equals(this.emailAddress, ecMEmploymentDetailsUpdate.emailAddress) &&
        Objects.equals(this.employmentStatus, ecMEmploymentDetailsUpdate.employmentStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employerName, employerRegistrationNumber, occupationCode, otherOccupationDescription, industryCode, otherIndustryDescription, employmentDurationInYears, employmentDurationInMonths, previousEmployerName, monthsInPreviousEmployment, yearsInPreviousEmployment, emailAddress, employmentStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ECMEmploymentDetailsUpdate {\n");
    
    sb.append("    employerName: ").append(toIndentedString(employerName)).append("\n");
    sb.append("    employerRegistrationNumber: ").append(toIndentedString(employerRegistrationNumber)).append("\n");
    sb.append("    occupationCode: ").append(toIndentedString(occupationCode)).append("\n");
    sb.append("    otherOccupationDescription: ").append(toIndentedString(otherOccupationDescription)).append("\n");
    sb.append("    industryCode: ").append(toIndentedString(industryCode)).append("\n");
    sb.append("    otherIndustryDescription: ").append(toIndentedString(otherIndustryDescription)).append("\n");
    sb.append("    employmentDurationInYears: ").append(toIndentedString(employmentDurationInYears)).append("\n");
    sb.append("    employmentDurationInMonths: ").append(toIndentedString(employmentDurationInMonths)).append("\n");
    sb.append("    previousEmployerName: ").append(toIndentedString(previousEmployerName)).append("\n");
    sb.append("    monthsInPreviousEmployment: ").append(toIndentedString(monthsInPreviousEmployment)).append("\n");
    sb.append("    yearsInPreviousEmployment: ").append(toIndentedString(yearsInPreviousEmployment)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    employmentStatus: ").append(toIndentedString(employmentStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
