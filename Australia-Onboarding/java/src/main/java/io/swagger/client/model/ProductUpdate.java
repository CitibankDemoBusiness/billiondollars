/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CreditCardProductUpdate;
import io.swagger.client.model.ReadyCreditProductUpdate;
import io.swagger.client.model.UnsecuredLoanProductUpdate;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ProductUpdate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T16:52:20.568061Z[Etc/UTC]")
public class ProductUpdate {
  @SerializedName("creditCardProduct")
  private CreditCardProductUpdate creditCardProduct = null;

  @SerializedName("readyCreditProduct")
  private ReadyCreditProductUpdate readyCreditProduct = null;

  @SerializedName("unsecuredLoanProduct")
  private UnsecuredLoanProductUpdate unsecuredLoanProduct = null;

  public ProductUpdate creditCardProduct(CreditCardProductUpdate creditCardProduct) {
    this.creditCardProduct = creditCardProduct;
    return this;
  }

   /**
   * Get creditCardProduct
   * @return creditCardProduct
  **/
  @Schema(description = "")
  public CreditCardProductUpdate getCreditCardProduct() {
    return creditCardProduct;
  }

  public void setCreditCardProduct(CreditCardProductUpdate creditCardProduct) {
    this.creditCardProduct = creditCardProduct;
  }

  public ProductUpdate readyCreditProduct(ReadyCreditProductUpdate readyCreditProduct) {
    this.readyCreditProduct = readyCreditProduct;
    return this;
  }

   /**
   * Get readyCreditProduct
   * @return readyCreditProduct
  **/
  @Schema(description = "")
  public ReadyCreditProductUpdate getReadyCreditProduct() {
    return readyCreditProduct;
  }

  public void setReadyCreditProduct(ReadyCreditProductUpdate readyCreditProduct) {
    this.readyCreditProduct = readyCreditProduct;
  }

  public ProductUpdate unsecuredLoanProduct(UnsecuredLoanProductUpdate unsecuredLoanProduct) {
    this.unsecuredLoanProduct = unsecuredLoanProduct;
    return this;
  }

   /**
   * Get unsecuredLoanProduct
   * @return unsecuredLoanProduct
  **/
  @Schema(description = "")
  public UnsecuredLoanProductUpdate getUnsecuredLoanProduct() {
    return unsecuredLoanProduct;
  }

  public void setUnsecuredLoanProduct(UnsecuredLoanProductUpdate unsecuredLoanProduct) {
    this.unsecuredLoanProduct = unsecuredLoanProduct;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductUpdate productUpdate = (ProductUpdate) o;
    return Objects.equals(this.creditCardProduct, productUpdate.creditCardProduct) &&
        Objects.equals(this.readyCreditProduct, productUpdate.readyCreditProduct) &&
        Objects.equals(this.unsecuredLoanProduct, productUpdate.unsecuredLoanProduct);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditCardProduct, readyCreditProduct, unsecuredLoanProduct);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductUpdate {\n");
    
    sb.append("    creditCardProduct: ").append(toIndentedString(creditCardProduct)).append("\n");
    sb.append("    readyCreditProduct: ").append(toIndentedString(readyCreditProduct)).append("\n");
    sb.append("    unsecuredLoanProduct: ").append(toIndentedString(unsecuredLoanProduct)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
