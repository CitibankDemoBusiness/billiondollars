/*
 * Onboarding
 * The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApplicantAddRequest;
import io.swagger.client.model.ApplicantAddResponse;
import io.swagger.client.model.ApplicantDeleteRequest;
import io.swagger.client.model.ApplicantInquiryResponse;
import io.swagger.client.model.ApplicantUpdateRequest;
import io.swagger.client.model.ApplicationAddRequest;
import io.swagger.client.model.ApplicationAddResponse;
import io.swagger.client.model.ApplicationInquiryResponse;
import io.swagger.client.model.ApplicationStatusResponse;
import io.swagger.client.model.ApplicationUpdateRequest;
import io.swagger.client.model.ApplicationUpdateResponse;
import io.swagger.client.model.BackgroundScreeningRequest;
import io.swagger.client.model.BackgroundScreeningResponse;
import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.FinalSubmitRequest;
import io.swagger.client.model.InPrincipleApprovalRequest;
import io.swagger.client.model.InPrincipleApprovalResponse;
import io.swagger.client.model.InsertDocumentRequest;
import io.swagger.client.model.InsertDocumentResponse;
import io.swagger.client.model.OfferAcceptanceRequest;
import io.swagger.client.model.ProspectAddRequest;
import io.swagger.client.model.ProspectAddResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Upload Application Documents
     *
     * This API allows the applicant to upload the documents online to the specified application. Required documents such as drivers license and banking statements will be returned in the application decision.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingApplicationsApplicationIdDocumentsPostTest() throws ApiException {
        InsertDocumentRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        InsertDocumentResponse response = api.v1ApacOnboardingApplicationsApplicationIdDocumentsPost(body, authorization, uuid, accept, clientId, contentType, applicationId);

        // TODO: test validations
    }
    /**
     * Supp Applicant Delete
     *
     * Allows primary card holder to delete the supplementary card application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdDeletePutTest() throws ApiException {
        ApplicantDeleteRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        String applicantId = null;
        api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdDeletePut(body, authorization, uuid, accept, clientId, contentType, applicationId, applicantId);

        // TODO: test validations
    }
    /**
     * Supp Applicant Update
     *
     * Allows primary card holder to edit or update the supplementary card application details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdPutTest() throws ApiException {
        ApplicantUpdateRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        String applicantId = null;
        api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsApplicantIdPut(body, authorization, uuid, accept, clientId, contentType, applicationId, applicantId);

        // TODO: test validations
    }
    /**
     * Supp Applicant Inquiry
     *
     * This API returns supplementary application details for the specific supplementary application id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsGetTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String applicationId = null;
        String controlFlowId = null;
        String applicantId = null;
        ApplicantInquiryResponse response = api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsGet(authorization, uuid, accept, clientId, applicationId, controlFlowId, applicantId);

        // TODO: test validations
    }
    /**
     * Supp Applicant Add
     *
     * This API creates a new supplementary card application along with primary card application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsPostTest() throws ApiException {
        ApplicantAddRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        ApplicantAddResponse response = api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdApplicantsPost(body, authorization, uuid, accept, clientId, contentType, applicationId);

        // TODO: test validations
    }
    /**
     * Screen Unsecured Credit Application
     *
     * This API submits the specified unsecured credit application for screening.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdBackgroundScreeningPostTest() throws ApiException {
        BackgroundScreeningRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        BackgroundScreeningResponse response = api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdBackgroundScreeningPost(body, authorization, uuid, accept, clientId, contentType, applicationId);

        // TODO: test validations
    }
    /**
     * Application Inquiry
     *
     * This API returns the application details and status for a specific application id after a successful Multi Factor Authentication.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdGetTest() throws ApiException {
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String applicationId = null;
        String controlFlowId = null;
        ApplicationInquiryResponse response = api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdGet(authorization, uuid, accept, clientId, applicationId, controlFlowId);

        // TODO: test validations
    }
    /**
     * Request Credit Application Decision
     *
     * This API returns the results of a decision inquiry for an application, including credit limit, counter-product offers and cross-sell offers along with the list of required documents.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdInPrincipleApprovalsPostTest() throws ApiException {
        InPrincipleApprovalRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        InPrincipleApprovalResponse response = api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdInPrincipleApprovalsPost(body, authorization, uuid, accept, clientId, contentType, applicationId);

        // TODO: test validations
    }
    /**
     * Accept Cross Sell Products
     *
     * This API accepts specified cross-sell product offers that were returned in the application decision.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdOfferAcceptancePostTest() throws ApiException {
        OfferAcceptanceRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdOfferAcceptancePost(body, authorization, uuid, accept, clientId, contentType, applicationId);

        // TODO: test validations
    }
    /**
     * Update Unsecured Credit Application
     *
     * This API updates a saved application to correct information that was previously blank.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdPutTest() throws ApiException {
        ApplicationUpdateRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        ApplicationUpdateResponse response = api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdPut(body, authorization, uuid, accept, clientId, contentType, applicationId);

        // TODO: test validations
    }
    /**
     * Check Application Status
     *
     * This API returns the status for a specified submitted application and takes the application id as parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdStatusGetTest() throws ApiException {
        String applicationId = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String controlFlowId = null;
        ApplicationStatusResponse response = api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdStatusGet(applicationId, authorization, uuid, accept, clientId, controlFlowId);

        // TODO: test validations
    }
    /**
     * Submit Application
     *
     * This API submits the created application to host systems for a particular application id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdSubmissionPostTest() throws ApiException {
        FinalSubmitRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String applicationId = null;
        api.v1ApacOnboardingProductsUnsecuredApplicationsApplicationIdSubmissionPost(body, authorization, uuid, accept, clientId, contentType, applicationId);

        // TODO: test validations
    }
    /**
     * Create Unsecured Credit Application
     *
     * This API pre-populates an application for card and banking products with the applicant&#x27;s details. The API will then return an application id that can be used to perform actions on the application and check status.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProductsUnsecuredApplicationsPostTest() throws ApiException {
        ApplicationAddRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        String acceptLanguage = null;
        ApplicationAddResponse response = api.v1ApacOnboardingProductsUnsecuredApplicationsPost(body, authorization, uuid, accept, clientId, contentType, acceptLanguage);

        // TODO: test validations
    }
    /**
     * Submit Prospect
     *
     * This API is used to create a new prospect or a potential customer for the bank. Returns a prospect id that can be used for reach out and conversions to applications.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1ApacOnboardingProspectsPostTest() throws ApiException {
        ProspectAddRequest body = null;
        String authorization = null;
        String uuid = null;
        String accept = null;
        String clientId = null;
        String contentType = null;
        ProspectAddResponse response = api.v1ApacOnboardingProspectsPost(body, authorization, uuid, accept, clientId, contentType);

        // TODO: test validations
    }
}
