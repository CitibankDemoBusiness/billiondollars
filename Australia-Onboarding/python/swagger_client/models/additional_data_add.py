# coding: utf-8

"""
    Onboarding

    The Onboarding API allows you to initiate the basic account opening process for new customers. The resources allow you to present eligible products, send applications for screening and submit a new application for one or more products. The resources also allow you to submit supporting documents. Application status can be checked at any point in the process, with decisioning happening in real time.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AdditionalDataAdd(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_fund_source': 'str',
        'number_of_dependents': 'float',
        'staff_indicator': 'bool',
        'business_nature': 'str',
        'emergency_contact_name': 'str',
        'emergency_contact_surname': 'str',
        'emergency_contact_relationship': 'str',
        'emergency_contact_phone_number': 'str',
        'over_limit_consent_flag': 'bool',
        'country_specific_group': 'CountrySpecificGroup',
        'primary_bank_details': 'PrimaryBankDetails',
        'referral_given_name': 'str',
        'referral_surname': 'str',
        'referral_code': 'str',
        'media_id': 'str',
        'introducer_id': 'str',
        'related_to_citi_employee_flag': 'bool',
        'related_citi_employee_name': 'str',
        'related_citi_employee_department': 'str',
        'credit_card_usage_purpose': 'str',
        'cash_pin_flag': 'bool',
        'referral_tracking': 'ReferralTracking',
        'utility_bill_details': 'UtilityBillDetails',
        'fee_code': 'str',
        'billing_cycle_day': 'str',
        'application_reference_id': 'str',
        'customer_segment': 'str',
        'printing_serial_number': 'str',
        'additional_information': 'str',
        'trade_reference_details': 'TradeReferenceDetails',
        'bureau_session_id_': 'str'
    }

    attribute_map = {
        'account_fund_source': 'accountFundSource',
        'number_of_dependents': 'numberOfDependents',
        'staff_indicator': 'staffIndicator',
        'business_nature': 'businessNature',
        'emergency_contact_name': 'emergencyContactName',
        'emergency_contact_surname': 'emergencyContactSurname',
        'emergency_contact_relationship': 'emergencyContactRelationship',
        'emergency_contact_phone_number': 'emergencyContactPhoneNumber',
        'over_limit_consent_flag': 'overLimitConsentFlag',
        'country_specific_group': 'countrySpecificGroup',
        'primary_bank_details': 'primaryBankDetails',
        'referral_given_name': 'referralGivenName',
        'referral_surname': 'referralSurname',
        'referral_code': 'referralCode',
        'media_id': 'mediaId',
        'introducer_id': 'introducerId',
        'related_to_citi_employee_flag': 'relatedToCitiEmployeeFlag',
        'related_citi_employee_name': 'relatedCitiEmployeeName',
        'related_citi_employee_department': 'relatedCitiEmployeeDepartment',
        'credit_card_usage_purpose': 'creditCardUsagePurpose',
        'cash_pin_flag': 'cashPinFlag',
        'referral_tracking': 'referralTracking',
        'utility_bill_details': 'utilityBillDetails',
        'fee_code': 'feeCode',
        'billing_cycle_day': 'billingCycleDay',
        'application_reference_id': 'applicationReferenceId',
        'customer_segment': 'customerSegment',
        'printing_serial_number': 'printingSerialNumber',
        'additional_information': 'additionalInformation',
        'trade_reference_details': 'tradeReferenceDetails',
        'bureau_session_id_': 'bureauSessionId '
    }

    def __init__(self, account_fund_source=None, number_of_dependents=None, staff_indicator=None, business_nature=None, emergency_contact_name=None, emergency_contact_surname=None, emergency_contact_relationship=None, emergency_contact_phone_number=None, over_limit_consent_flag=None, country_specific_group=None, primary_bank_details=None, referral_given_name=None, referral_surname=None, referral_code=None, media_id=None, introducer_id=None, related_to_citi_employee_flag=None, related_citi_employee_name=None, related_citi_employee_department=None, credit_card_usage_purpose=None, cash_pin_flag=None, referral_tracking=None, utility_bill_details=None, fee_code=None, billing_cycle_day=None, application_reference_id=None, customer_segment=None, printing_serial_number=None, additional_information=None, trade_reference_details=None, bureau_session_id_=None):  # noqa: E501
        """AdditionalDataAdd - a model defined in Swagger"""  # noqa: E501
        self._account_fund_source = None
        self._number_of_dependents = None
        self._staff_indicator = None
        self._business_nature = None
        self._emergency_contact_name = None
        self._emergency_contact_surname = None
        self._emergency_contact_relationship = None
        self._emergency_contact_phone_number = None
        self._over_limit_consent_flag = None
        self._country_specific_group = None
        self._primary_bank_details = None
        self._referral_given_name = None
        self._referral_surname = None
        self._referral_code = None
        self._media_id = None
        self._introducer_id = None
        self._related_to_citi_employee_flag = None
        self._related_citi_employee_name = None
        self._related_citi_employee_department = None
        self._credit_card_usage_purpose = None
        self._cash_pin_flag = None
        self._referral_tracking = None
        self._utility_bill_details = None
        self._fee_code = None
        self._billing_cycle_day = None
        self._application_reference_id = None
        self._customer_segment = None
        self._printing_serial_number = None
        self._additional_information = None
        self._trade_reference_details = None
        self._bureau_session_id_ = None
        self.discriminator = None
        if account_fund_source is not None:
            self.account_fund_source = account_fund_source
        if number_of_dependents is not None:
            self.number_of_dependents = number_of_dependents
        if staff_indicator is not None:
            self.staff_indicator = staff_indicator
        if business_nature is not None:
            self.business_nature = business_nature
        if emergency_contact_name is not None:
            self.emergency_contact_name = emergency_contact_name
        if emergency_contact_surname is not None:
            self.emergency_contact_surname = emergency_contact_surname
        if emergency_contact_relationship is not None:
            self.emergency_contact_relationship = emergency_contact_relationship
        if emergency_contact_phone_number is not None:
            self.emergency_contact_phone_number = emergency_contact_phone_number
        if over_limit_consent_flag is not None:
            self.over_limit_consent_flag = over_limit_consent_flag
        if country_specific_group is not None:
            self.country_specific_group = country_specific_group
        if primary_bank_details is not None:
            self.primary_bank_details = primary_bank_details
        if referral_given_name is not None:
            self.referral_given_name = referral_given_name
        if referral_surname is not None:
            self.referral_surname = referral_surname
        if referral_code is not None:
            self.referral_code = referral_code
        if media_id is not None:
            self.media_id = media_id
        if introducer_id is not None:
            self.introducer_id = introducer_id
        if related_to_citi_employee_flag is not None:
            self.related_to_citi_employee_flag = related_to_citi_employee_flag
        if related_citi_employee_name is not None:
            self.related_citi_employee_name = related_citi_employee_name
        if related_citi_employee_department is not None:
            self.related_citi_employee_department = related_citi_employee_department
        if credit_card_usage_purpose is not None:
            self.credit_card_usage_purpose = credit_card_usage_purpose
        if cash_pin_flag is not None:
            self.cash_pin_flag = cash_pin_flag
        if referral_tracking is not None:
            self.referral_tracking = referral_tracking
        if utility_bill_details is not None:
            self.utility_bill_details = utility_bill_details
        if fee_code is not None:
            self.fee_code = fee_code
        if billing_cycle_day is not None:
            self.billing_cycle_day = billing_cycle_day
        if application_reference_id is not None:
            self.application_reference_id = application_reference_id
        if customer_segment is not None:
            self.customer_segment = customer_segment
        if printing_serial_number is not None:
            self.printing_serial_number = printing_serial_number
        if additional_information is not None:
            self.additional_information = additional_information
        if trade_reference_details is not None:
            self.trade_reference_details = trade_reference_details
        if bureau_session_id_ is not None:
            self.bureau_session_id_ = bureau_session_id_

    @property
    def account_fund_source(self):
        """Gets the account_fund_source of this AdditionalDataAdd.  # noqa: E501

        This field is to indicates the primary source from which this account will be funded. This is a reference data field. Please use /v1/utilities/referenceData/{accountFundSource} resource to get valid value of this field with description.  # noqa: E501

        :return: The account_fund_source of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._account_fund_source

    @account_fund_source.setter
    def account_fund_source(self, account_fund_source):
        """Sets the account_fund_source of this AdditionalDataAdd.

        This field is to indicates the primary source from which this account will be funded. This is a reference data field. Please use /v1/utilities/referenceData/{accountFundSource} resource to get valid value of this field with description.  # noqa: E501

        :param account_fund_source: The account_fund_source of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._account_fund_source = account_fund_source

    @property
    def number_of_dependents(self):
        """Gets the number_of_dependents of this AdditionalDataAdd.  # noqa: E501

        Number of dependents  # noqa: E501

        :return: The number_of_dependents of this AdditionalDataAdd.  # noqa: E501
        :rtype: float
        """
        return self._number_of_dependents

    @number_of_dependents.setter
    def number_of_dependents(self, number_of_dependents):
        """Sets the number_of_dependents of this AdditionalDataAdd.

        Number of dependents  # noqa: E501

        :param number_of_dependents: The number_of_dependents of this AdditionalDataAdd.  # noqa: E501
        :type: float
        """

        self._number_of_dependents = number_of_dependents

    @property
    def staff_indicator(self):
        """Gets the staff_indicator of this AdditionalDataAdd.  # noqa: E501

        Flag to indicates if applicant is a Citi Staff. Valid values: true and false  # noqa: E501

        :return: The staff_indicator of this AdditionalDataAdd.  # noqa: E501
        :rtype: bool
        """
        return self._staff_indicator

    @staff_indicator.setter
    def staff_indicator(self, staff_indicator):
        """Sets the staff_indicator of this AdditionalDataAdd.

        Flag to indicates if applicant is a Citi Staff. Valid values: true and false  # noqa: E501

        :param staff_indicator: The staff_indicator of this AdditionalDataAdd.  # noqa: E501
        :type: bool
        """

        self._staff_indicator = staff_indicator

    @property
    def business_nature(self):
        """Gets the business_nature of this AdditionalDataAdd.  # noqa: E501

        Business nature of the applicant This is a reference data field. Please use /v1/utilities/referenceData/{businessNature} resource to get valid value of this field with description.  # noqa: E501

        :return: The business_nature of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._business_nature

    @business_nature.setter
    def business_nature(self, business_nature):
        """Sets the business_nature of this AdditionalDataAdd.

        Business nature of the applicant This is a reference data field. Please use /v1/utilities/referenceData/{businessNature} resource to get valid value of this field with description.  # noqa: E501

        :param business_nature: The business_nature of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._business_nature = business_nature

    @property
    def emergency_contact_name(self):
        """Gets the emergency_contact_name of this AdditionalDataAdd.  # noqa: E501

        Emergency contact given name  # noqa: E501

        :return: The emergency_contact_name of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._emergency_contact_name

    @emergency_contact_name.setter
    def emergency_contact_name(self, emergency_contact_name):
        """Sets the emergency_contact_name of this AdditionalDataAdd.

        Emergency contact given name  # noqa: E501

        :param emergency_contact_name: The emergency_contact_name of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._emergency_contact_name = emergency_contact_name

    @property
    def emergency_contact_surname(self):
        """Gets the emergency_contact_surname of this AdditionalDataAdd.  # noqa: E501

        Emergency contact surname  # noqa: E501

        :return: The emergency_contact_surname of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._emergency_contact_surname

    @emergency_contact_surname.setter
    def emergency_contact_surname(self, emergency_contact_surname):
        """Sets the emergency_contact_surname of this AdditionalDataAdd.

        Emergency contact surname  # noqa: E501

        :param emergency_contact_surname: The emergency_contact_surname of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._emergency_contact_surname = emergency_contact_surname

    @property
    def emergency_contact_relationship(self):
        """Gets the emergency_contact_relationship of this AdditionalDataAdd.  # noqa: E501

        Applicant's relationship with the emergency contact.This is a reference data. Please use /v1/utilities/referenceData/{emergencyContactRelationship} resource to get valid value of this field  # noqa: E501

        :return: The emergency_contact_relationship of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._emergency_contact_relationship

    @emergency_contact_relationship.setter
    def emergency_contact_relationship(self, emergency_contact_relationship):
        """Sets the emergency_contact_relationship of this AdditionalDataAdd.

        Applicant's relationship with the emergency contact.This is a reference data. Please use /v1/utilities/referenceData/{emergencyContactRelationship} resource to get valid value of this field  # noqa: E501

        :param emergency_contact_relationship: The emergency_contact_relationship of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._emergency_contact_relationship = emergency_contact_relationship

    @property
    def emergency_contact_phone_number(self):
        """Gets the emergency_contact_phone_number of this AdditionalDataAdd.  # noqa: E501

        Emergency contact Number.  # noqa: E501

        :return: The emergency_contact_phone_number of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._emergency_contact_phone_number

    @emergency_contact_phone_number.setter
    def emergency_contact_phone_number(self, emergency_contact_phone_number):
        """Sets the emergency_contact_phone_number of this AdditionalDataAdd.

        Emergency contact Number.  # noqa: E501

        :param emergency_contact_phone_number: The emergency_contact_phone_number of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._emergency_contact_phone_number = emergency_contact_phone_number

    @property
    def over_limit_consent_flag(self):
        """Gets the over_limit_consent_flag of this AdditionalDataAdd.  # noqa: E501

        Customer consent on spending more than the limit assigned to him. Valid values: true and false  # noqa: E501

        :return: The over_limit_consent_flag of this AdditionalDataAdd.  # noqa: E501
        :rtype: bool
        """
        return self._over_limit_consent_flag

    @over_limit_consent_flag.setter
    def over_limit_consent_flag(self, over_limit_consent_flag):
        """Sets the over_limit_consent_flag of this AdditionalDataAdd.

        Customer consent on spending more than the limit assigned to him. Valid values: true and false  # noqa: E501

        :param over_limit_consent_flag: The over_limit_consent_flag of this AdditionalDataAdd.  # noqa: E501
        :type: bool
        """

        self._over_limit_consent_flag = over_limit_consent_flag

    @property
    def country_specific_group(self):
        """Gets the country_specific_group of this AdditionalDataAdd.  # noqa: E501


        :return: The country_specific_group of this AdditionalDataAdd.  # noqa: E501
        :rtype: CountrySpecificGroup
        """
        return self._country_specific_group

    @country_specific_group.setter
    def country_specific_group(self, country_specific_group):
        """Sets the country_specific_group of this AdditionalDataAdd.


        :param country_specific_group: The country_specific_group of this AdditionalDataAdd.  # noqa: E501
        :type: CountrySpecificGroup
        """

        self._country_specific_group = country_specific_group

    @property
    def primary_bank_details(self):
        """Gets the primary_bank_details of this AdditionalDataAdd.  # noqa: E501


        :return: The primary_bank_details of this AdditionalDataAdd.  # noqa: E501
        :rtype: PrimaryBankDetails
        """
        return self._primary_bank_details

    @primary_bank_details.setter
    def primary_bank_details(self, primary_bank_details):
        """Sets the primary_bank_details of this AdditionalDataAdd.


        :param primary_bank_details: The primary_bank_details of this AdditionalDataAdd.  # noqa: E501
        :type: PrimaryBankDetails
        """

        self._primary_bank_details = primary_bank_details

    @property
    def referral_given_name(self):
        """Gets the referral_given_name of this AdditionalDataAdd.  # noqa: E501

        Referral First Name.  # noqa: E501

        :return: The referral_given_name of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._referral_given_name

    @referral_given_name.setter
    def referral_given_name(self, referral_given_name):
        """Sets the referral_given_name of this AdditionalDataAdd.

        Referral First Name.  # noqa: E501

        :param referral_given_name: The referral_given_name of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._referral_given_name = referral_given_name

    @property
    def referral_surname(self):
        """Gets the referral_surname of this AdditionalDataAdd.  # noqa: E501

        Referral Surname/Last Name.  # noqa: E501

        :return: The referral_surname of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._referral_surname

    @referral_surname.setter
    def referral_surname(self, referral_surname):
        """Sets the referral_surname of this AdditionalDataAdd.

        Referral Surname/Last Name.  # noqa: E501

        :param referral_surname: The referral_surname of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._referral_surname = referral_surname

    @property
    def referral_code(self):
        """Gets the referral_code of this AdditionalDataAdd.  # noqa: E501

        Referral Code used for the customer  # noqa: E501

        :return: The referral_code of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._referral_code

    @referral_code.setter
    def referral_code(self, referral_code):
        """Sets the referral_code of this AdditionalDataAdd.

        Referral Code used for the customer  # noqa: E501

        :param referral_code: The referral_code of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._referral_code = referral_code

    @property
    def media_id(self):
        """Gets the media_id of this AdditionalDataAdd.  # noqa: E501

        The media ID will be used to determine which offer / campaign banner was clicked when the customer made his application   # noqa: E501

        :return: The media_id of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._media_id

    @media_id.setter
    def media_id(self, media_id):
        """Sets the media_id of this AdditionalDataAdd.

        The media ID will be used to determine which offer / campaign banner was clicked when the customer made his application   # noqa: E501

        :param media_id: The media_id of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._media_id = media_id

    @property
    def introducer_id(self):
        """Gets the introducer_id of this AdditionalDataAdd.  # noqa: E501

        Unique identifier associated with the introducer who had referred the applicant.  # noqa: E501

        :return: The introducer_id of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._introducer_id

    @introducer_id.setter
    def introducer_id(self, introducer_id):
        """Sets the introducer_id of this AdditionalDataAdd.

        Unique identifier associated with the introducer who had referred the applicant.  # noqa: E501

        :param introducer_id: The introducer_id of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._introducer_id = introducer_id

    @property
    def related_to_citi_employee_flag(self):
        """Gets the related_to_citi_employee_flag of this AdditionalDataAdd.  # noqa: E501

        Self declaration if applicant has any relation with citi bank employee. Valid values: true and false  # noqa: E501

        :return: The related_to_citi_employee_flag of this AdditionalDataAdd.  # noqa: E501
        :rtype: bool
        """
        return self._related_to_citi_employee_flag

    @related_to_citi_employee_flag.setter
    def related_to_citi_employee_flag(self, related_to_citi_employee_flag):
        """Sets the related_to_citi_employee_flag of this AdditionalDataAdd.

        Self declaration if applicant has any relation with citi bank employee. Valid values: true and false  # noqa: E501

        :param related_to_citi_employee_flag: The related_to_citi_employee_flag of this AdditionalDataAdd.  # noqa: E501
        :type: bool
        """

        self._related_to_citi_employee_flag = related_to_citi_employee_flag

    @property
    def related_citi_employee_name(self):
        """Gets the related_citi_employee_name of this AdditionalDataAdd.  # noqa: E501

        Name of the citi employee if applicant has any relation with citi bank employee.  # noqa: E501

        :return: The related_citi_employee_name of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._related_citi_employee_name

    @related_citi_employee_name.setter
    def related_citi_employee_name(self, related_citi_employee_name):
        """Sets the related_citi_employee_name of this AdditionalDataAdd.

        Name of the citi employee if applicant has any relation with citi bank employee.  # noqa: E501

        :param related_citi_employee_name: The related_citi_employee_name of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._related_citi_employee_name = related_citi_employee_name

    @property
    def related_citi_employee_department(self):
        """Gets the related_citi_employee_department of this AdditionalDataAdd.  # noqa: E501

        Department of citi employee if applicant has any relation with citi bank employee.  # noqa: E501

        :return: The related_citi_employee_department of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._related_citi_employee_department

    @related_citi_employee_department.setter
    def related_citi_employee_department(self, related_citi_employee_department):
        """Sets the related_citi_employee_department of this AdditionalDataAdd.

        Department of citi employee if applicant has any relation with citi bank employee.  # noqa: E501

        :param related_citi_employee_department: The related_citi_employee_department of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._related_citi_employee_department = related_citi_employee_department

    @property
    def credit_card_usage_purpose(self):
        """Gets the credit_card_usage_purpose of this AdditionalDataAdd.  # noqa: E501

        Indicates applicants usage of credit card whether it is for personal or business.Please use /v1/utilities/referenceData/{creditCardUsagePurpose} resource to get valid value of this field with description.  # noqa: E501

        :return: The credit_card_usage_purpose of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._credit_card_usage_purpose

    @credit_card_usage_purpose.setter
    def credit_card_usage_purpose(self, credit_card_usage_purpose):
        """Sets the credit_card_usage_purpose of this AdditionalDataAdd.

        Indicates applicants usage of credit card whether it is for personal or business.Please use /v1/utilities/referenceData/{creditCardUsagePurpose} resource to get valid value of this field with description.  # noqa: E501

        :param credit_card_usage_purpose: The credit_card_usage_purpose of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._credit_card_usage_purpose = credit_card_usage_purpose

    @property
    def cash_pin_flag(self):
        """Gets the cash_pin_flag of this AdditionalDataAdd.  # noqa: E501

        Indicates whether the customer wants a separate cash PIN.  # noqa: E501

        :return: The cash_pin_flag of this AdditionalDataAdd.  # noqa: E501
        :rtype: bool
        """
        return self._cash_pin_flag

    @cash_pin_flag.setter
    def cash_pin_flag(self, cash_pin_flag):
        """Sets the cash_pin_flag of this AdditionalDataAdd.

        Indicates whether the customer wants a separate cash PIN.  # noqa: E501

        :param cash_pin_flag: The cash_pin_flag of this AdditionalDataAdd.  # noqa: E501
        :type: bool
        """

        self._cash_pin_flag = cash_pin_flag

    @property
    def referral_tracking(self):
        """Gets the referral_tracking of this AdditionalDataAdd.  # noqa: E501


        :return: The referral_tracking of this AdditionalDataAdd.  # noqa: E501
        :rtype: ReferralTracking
        """
        return self._referral_tracking

    @referral_tracking.setter
    def referral_tracking(self, referral_tracking):
        """Sets the referral_tracking of this AdditionalDataAdd.


        :param referral_tracking: The referral_tracking of this AdditionalDataAdd.  # noqa: E501
        :type: ReferralTracking
        """

        self._referral_tracking = referral_tracking

    @property
    def utility_bill_details(self):
        """Gets the utility_bill_details of this AdditionalDataAdd.  # noqa: E501


        :return: The utility_bill_details of this AdditionalDataAdd.  # noqa: E501
        :rtype: UtilityBillDetails
        """
        return self._utility_bill_details

    @utility_bill_details.setter
    def utility_bill_details(self, utility_bill_details):
        """Sets the utility_bill_details of this AdditionalDataAdd.


        :param utility_bill_details: The utility_bill_details of this AdditionalDataAdd.  # noqa: E501
        :type: UtilityBillDetails
        """

        self._utility_bill_details = utility_bill_details

    @property
    def fee_code(self):
        """Gets the fee_code of this AdditionalDataAdd.  # noqa: E501

        Fee code that applied to the requested product  # noqa: E501

        :return: The fee_code of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._fee_code

    @fee_code.setter
    def fee_code(self, fee_code):
        """Sets the fee_code of this AdditionalDataAdd.

        Fee code that applied to the requested product  # noqa: E501

        :param fee_code: The fee_code of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._fee_code = fee_code

    @property
    def billing_cycle_day(self):
        """Gets the billing_cycle_day of this AdditionalDataAdd.  # noqa: E501

        Day of each month for the bill payment. This is a reference data field. Please use /v1/utilities/referenceData/{billingCycleDay} resource to get valid value of this field with description.  # noqa: E501

        :return: The billing_cycle_day of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._billing_cycle_day

    @billing_cycle_day.setter
    def billing_cycle_day(self, billing_cycle_day):
        """Sets the billing_cycle_day of this AdditionalDataAdd.

        Day of each month for the bill payment. This is a reference data field. Please use /v1/utilities/referenceData/{billingCycleDay} resource to get valid value of this field with description.  # noqa: E501

        :param billing_cycle_day: The billing_cycle_day of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._billing_cycle_day = billing_cycle_day

    @property
    def application_reference_id(self):
        """Gets the application_reference_id of this AdditionalDataAdd.  # noqa: E501

        Unique reference ID associated with the application  # noqa: E501

        :return: The application_reference_id of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._application_reference_id

    @application_reference_id.setter
    def application_reference_id(self, application_reference_id):
        """Sets the application_reference_id of this AdditionalDataAdd.

        Unique reference ID associated with the application  # noqa: E501

        :param application_reference_id: The application_reference_id of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._application_reference_id = application_reference_id

    @property
    def customer_segment(self):
        """Gets the customer_segment of this AdditionalDataAdd.  # noqa: E501

        Customer segment decides each applicants interest rate  Different customer target will be subjected to different interest rate..This is a reference data field. Please use /v1/utilities/referenceData/{customerSegment} resource to get valid value of this field with description.   # noqa: E501

        :return: The customer_segment of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._customer_segment

    @customer_segment.setter
    def customer_segment(self, customer_segment):
        """Sets the customer_segment of this AdditionalDataAdd.

        Customer segment decides each applicants interest rate  Different customer target will be subjected to different interest rate..This is a reference data field. Please use /v1/utilities/referenceData/{customerSegment} resource to get valid value of this field with description.   # noqa: E501

        :param customer_segment: The customer_segment of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._customer_segment = customer_segment

    @property
    def printing_serial_number(self):
        """Gets the printing_serial_number of this AdditionalDataAdd.  # noqa: E501

        This field refers to the unique number for each application to be identified by COLA and printed in PDF form.It enables to identify the customer in case the customer could not complete filling his/her details and was dropped-off in between  # noqa: E501

        :return: The printing_serial_number of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._printing_serial_number

    @printing_serial_number.setter
    def printing_serial_number(self, printing_serial_number):
        """Sets the printing_serial_number of this AdditionalDataAdd.

        This field refers to the unique number for each application to be identified by COLA and printed in PDF form.It enables to identify the customer in case the customer could not complete filling his/her details and was dropped-off in between  # noqa: E501

        :param printing_serial_number: The printing_serial_number of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._printing_serial_number = printing_serial_number

    @property
    def additional_information(self):
        """Gets the additional_information of this AdditionalDataAdd.  # noqa: E501

        This field refers to the additional comments given by the customer which is to be noted-down during the application process.  # noqa: E501

        :return: The additional_information of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this AdditionalDataAdd.

        This field refers to the additional comments given by the customer which is to be noted-down during the application process.  # noqa: E501

        :param additional_information: The additional_information of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._additional_information = additional_information

    @property
    def trade_reference_details(self):
        """Gets the trade_reference_details of this AdditionalDataAdd.  # noqa: E501


        :return: The trade_reference_details of this AdditionalDataAdd.  # noqa: E501
        :rtype: TradeReferenceDetails
        """
        return self._trade_reference_details

    @trade_reference_details.setter
    def trade_reference_details(self, trade_reference_details):
        """Sets the trade_reference_details of this AdditionalDataAdd.


        :param trade_reference_details: The trade_reference_details of this AdditionalDataAdd.  # noqa: E501
        :type: TradeReferenceDetails
        """

        self._trade_reference_details = trade_reference_details

    @property
    def bureau_session_id_(self):
        """Gets the bureau_session_id_ of this AdditionalDataAdd.  # noqa: E501

        Session ID that is generated from the session / interaction of channel with bureau.  # noqa: E501

        :return: The bureau_session_id_ of this AdditionalDataAdd.  # noqa: E501
        :rtype: str
        """
        return self._bureau_session_id_

    @bureau_session_id_.setter
    def bureau_session_id_(self, bureau_session_id_):
        """Sets the bureau_session_id_ of this AdditionalDataAdd.

        Session ID that is generated from the session / interaction of channel with bureau.  # noqa: E501

        :param bureau_session_id_: The bureau_session_id_ of this AdditionalDataAdd.  # noqa: E501
        :type: str
        """

        self._bureau_session_id_ = bureau_session_id_

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AdditionalDataAdd, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdditionalDataAdd):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
