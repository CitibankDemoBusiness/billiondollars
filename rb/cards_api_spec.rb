=begin
#Cards

#The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CARDSApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CARDSApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CARDSApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CARDSApi' do
    it 'should create an instance of CARDSApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CARDSApi)
    end
  end

  # unit tests for notify_credit_charge_card_fulfillment_arrangement_authorised_transaction
  # This API will be triggered by partner(VISA) to notify the cardholder about authorisation transaction.
  # This API will be triggered by partner(VISA) to notify the cardholder about authorisation transaction.
  # @param body NotifyCreditChargeCardFulfillmentArrangementAuthorisedTransactionRequest
  # @param authorization HTTP Basic authentication by passing base64 encoded value of the client id and client secret separated by colon (:).Example: Base64(client_id:client_secret) will be passed as Basic KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;
  # @param uuid 128 bit random UUID generated uniquely for every request.
  # @param accept Content-Type that are acceptable for the response.
  # @param content_type application/json
  # @param [Hash] opts the optional parameters
  # @option opts [String] :client_id Client ID generated during application registration.
  # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
  # @option opts [String] :accept_language List of acceptable human languages for response.
  # @option opts [String] :x_jws_signature This field is signature generated when partner sign API payload.This signature will be used to validate that the call is coming from a valid partner. This signature is a JWT token, which will be validated with partnerâ€™s JWK stored in DB
  # @return [nil]
  describe 'notify_credit_charge_card_fulfillment_arrangement_authorised_transaction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
