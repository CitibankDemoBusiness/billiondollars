=begin
#Cards

#The Cards API allows you to perform actions on the actual credit cards of the Citi Customer who authorized your app.

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

module SwaggerClient
  class CreditCardsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Issuance of Companion Card
    # This API is used to issue a new companion card for primary credit card.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param content_type The MIME type of the body of the request (used with POST and PUT requests). Always pass application/json.
    # @param client_id Client ID generated during application registration.
    # @param card_id Card Id in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [CompanionCardApplicationRequest] :body CompanionCardApplicationRequest
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [CompanionCardApplicationResponse]
    def companion_card_application(authorization, uuid, accept, content_type, client_id, card_id, opts = {})
      data, _status_code, _headers = companion_card_application_with_http_info(authorization, uuid, accept, content_type, client_id, card_id, opts)
      data
    end

    # Issuance of Companion Card
    # This API is used to issue a new companion card for primary credit card.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param content_type The MIME type of the body of the request (used with POST and PUT requests). Always pass application/json.
    # @param client_id Client ID generated during application registration.
    # @param card_id Card Id in encrypted format
    # @param [Hash] opts the optional parameters
    # @option opts [CompanionCardApplicationRequest] :body CompanionCardApplicationRequest
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(CompanionCardApplicationResponse, Integer, Hash)>] CompanionCardApplicationResponse data, response status code and response headers
    def companion_card_application_with_http_info(authorization, uuid, accept, content_type, client_id, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreditCardsApi.companion_card_application ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CreditCardsApi.companion_card_application"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CreditCardsApi.companion_card_application"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CreditCardsApi.companion_card_application"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CreditCardsApi.companion_card_application"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CreditCardsApi.companion_card_application"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CreditCardsApi.companion_card_application"
      end
      # resource path
      local_var_path = '/v1/creditCards/{cardId}/companion/applications'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'Content-Type'] = content_type
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'body']) 

      return_type = opts[:return_type] || 'CompanionCardApplicationResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditCardsApi#companion_card_application\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Transaction Eligibility and Easy Payment Plans
    # This API is used to check the Easy Payment Plans eligibility for a card and the available Payment Plans details.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param card_id The card id in encrypted format.
    # @param eligble_loan_amount Elligible loan amount for easy payment plan booking..
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [EasyPaymentPlansTransactionEligibilityResponse]
    def easy_payment_plans_transaction_eligibility(authorization, uuid, accept, client_id, card_id, eligble_loan_amount, opts = {})
      data, _status_code, _headers = easy_payment_plans_transaction_eligibility_with_http_info(authorization, uuid, accept, client_id, card_id, eligble_loan_amount, opts)
      data
    end

    # Transaction Eligibility and Easy Payment Plans
    # This API is used to check the Easy Payment Plans eligibility for a card and the available Payment Plans details.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param card_id The card id in encrypted format.
    # @param eligble_loan_amount Elligible loan amount for easy payment plan booking..
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(EasyPaymentPlansTransactionEligibilityResponse, Integer, Hash)>] EasyPaymentPlansTransactionEligibilityResponse data, response status code and response headers
    def easy_payment_plans_transaction_eligibility_with_http_info(authorization, uuid, accept, client_id, card_id, eligble_loan_amount, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreditCardsApi.easy_payment_plans_transaction_eligibility ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CreditCardsApi.easy_payment_plans_transaction_eligibility"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CreditCardsApi.easy_payment_plans_transaction_eligibility"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CreditCardsApi.easy_payment_plans_transaction_eligibility"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CreditCardsApi.easy_payment_plans_transaction_eligibility"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CreditCardsApi.easy_payment_plans_transaction_eligibility"
      end
      # verify the required parameter 'eligble_loan_amount' is set
      if @api_client.config.client_side_validation && eligble_loan_amount.nil?
        fail ArgumentError, "Missing the required parameter 'eligble_loan_amount' when calling CreditCardsApi.easy_payment_plans_transaction_eligibility"
      end
      # resource path
      local_var_path = '/v1/creditCards/{cardId}/transactions/eligibility/easyPaymentPlan'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'eligbleLoanAmount'] = eligble_loan_amount

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'EasyPaymentPlansTransactionEligibilityResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditCardsApi#easy_payment_plans_transaction_eligibility\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Book Easy Payment Plan
    # This API is triggered after the EPP plan selection and completes the EPP booking. On successful booking, it returns transaction reference in the response.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [EppLoanBookingResponse]
    def v1_credit_cards_card_id_easy_payment_plans_bookings_post(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      data, _status_code, _headers = v1_credit_cards_card_id_easy_payment_plans_bookings_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts)
      data
    end

    # Book Easy Payment Plan
    # This API is triggered after the EPP plan selection and completes the EPP booking. On successful booking, it returns transaction reference in the response.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param card_id The card id  in encrypted format.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(EppLoanBookingResponse, Integer, Hash)>] EppLoanBookingResponse data, response status code and response headers
    def v1_credit_cards_card_id_easy_payment_plans_bookings_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_bookings_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_bookings_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_bookings_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_bookings_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_bookings_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_bookings_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_bookings_post"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_bookings_post"
      end
      # resource path
      local_var_path = '/v1/creditCards/{cardId}/easyPaymentPlans/bookings'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'EppLoanBookingResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditCardsApi#v1_credit_cards_card_id_easy_payment_plans_bookings_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Check Easy Payment Plan Eligibility
    # This API is used to validate the transaction eligibility for EPP conversion.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client_id generated during consumer onboarding
    # @param card_id Card Id in encrypted format.
    # @param epp_loan_booking_type Type of the easy payment plan loan booking.This is a reference data field. Please use /v1/utilities/referenceData/{eppLoanBookingType} resource to get possible value of this field with description.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :next_start_index In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data.
    # @return [EasyPaymentPlansEligibilityInquiryResponse]
    def v1_credit_cards_card_id_easy_payment_plans_eligibility_get(authorization, uuid, accept, client_id, card_id, epp_loan_booking_type, opts = {})
      data, _status_code, _headers = v1_credit_cards_card_id_easy_payment_plans_eligibility_get_with_http_info(authorization, uuid, accept, client_id, card_id, epp_loan_booking_type, opts)
      data
    end

    # Check Easy Payment Plan Eligibility
    # This API is used to validate the transaction eligibility for EPP conversion.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client_id generated during consumer onboarding
    # @param card_id Card Id in encrypted format.
    # @param epp_loan_booking_type Type of the easy payment plan loan booking.This is a reference data field. Please use /v1/utilities/referenceData/{eppLoanBookingType} resource to get possible value of this field with description.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :next_start_index In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data.
    # @return [Array<(EasyPaymentPlansEligibilityInquiryResponse, Integer, Hash)>] EasyPaymentPlansEligibilityInquiryResponse data, response status code and response headers
    def v1_credit_cards_card_id_easy_payment_plans_eligibility_get_with_http_info(authorization, uuid, accept, client_id, card_id, epp_loan_booking_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_eligibility_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_eligibility_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_eligibility_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_eligibility_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_eligibility_get"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_eligibility_get"
      end
      # verify the required parameter 'epp_loan_booking_type' is set
      if @api_client.config.client_side_validation && epp_loan_booking_type.nil?
        fail ArgumentError, "Missing the required parameter 'epp_loan_booking_type' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_eligibility_get"
      end
      # resource path
      local_var_path = '/v1/creditCards/{cardId}/easyPaymentPlans/eligibility'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'eppLoanBookingType'] = epp_loan_booking_type
      query_params[:'nextStartIndex'] = opts[:'next_start_index'] if !opts[:'next_start_index'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'EasyPaymentPlansEligibilityInquiryResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditCardsApi#v1_credit_cards_card_id_easy_payment_plans_eligibility_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Easy Payment Plan Repayment Schedule
    # This API allows the customer to view the payment breakdown details and the repayment schedule for the Easy Payment Plan selected.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client id generated during consumer onboarding
    # @param card_id The card id  in encrypted format.
    # @param loan_amount Loan amount for easy payment plan booking.
    # @param tenor Tenure of loan in months.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :next_start_index In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data.
    # @return [EppRepaymentScheuleResponse]
    def v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get(authorization, uuid, accept, client_id, card_id, loan_amount, tenor, opts = {})
      data, _status_code, _headers = v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get_with_http_info(authorization, uuid, accept, client_id, card_id, loan_amount, tenor, opts)
      data
    end

    # Easy Payment Plan Repayment Schedule
    # This API allows the customer to view the payment breakdown details and the repayment schedule for the Easy Payment Plan selected.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client id generated during consumer onboarding
    # @param card_id The card id  in encrypted format.
    # @param loan_amount Loan amount for easy payment plan booking.
    # @param tenor Tenure of loan in months.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @option opts [String] :next_start_index In some cases there is more data than what can be returned in a single response. If there is additional data available a nextStartIndex will be returned. Pass the nextStartIndex in your next request to retrieve the next set of data.
    # @return [Array<(EppRepaymentScheuleResponse, Integer, Hash)>] EppRepaymentScheuleResponse data, response status code and response headers
    def v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get_with_http_info(authorization, uuid, accept, client_id, card_id, loan_amount, tenor, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get"
      end
      # verify the required parameter 'loan_amount' is set
      if @api_client.config.client_side_validation && loan_amount.nil?
        fail ArgumentError, "Missing the required parameter 'loan_amount' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get"
      end
      # verify the required parameter 'tenor' is set
      if @api_client.config.client_side_validation && tenor.nil?
        fail ArgumentError, "Missing the required parameter 'tenor' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get"
      end
      # resource path
      local_var_path = '/v1/creditCards/{cardId}/easyPaymentPlans/repaymentSchedules'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'loanAmount'] = loan_amount
      query_params[:'tenor'] = tenor
      query_params[:'nextStartIndex'] = opts[:'next_start_index'] if !opts[:'next_start_index'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'EppRepaymentScheuleResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditCardsApi#v1_credit_cards_card_id_easy_payment_plans_repayment_schedules_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve Easy Payment Plans Options
    # This API retrieves the available Easy Payment Plans to be used by the customer for the repayment of his/her loans.
    # @param body Easy payment plan Request
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client id generated during consumer onboarding
    # @param card_id The card id  in encrypted format.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [EppResponse]
    def v1_credit_cards_card_id_easy_payment_plans_search_post(body, authorization, uuid, accept, client_id, card_id, opts = {})
      data, _status_code, _headers = v1_credit_cards_card_id_easy_payment_plans_search_post_with_http_info(body, authorization, uuid, accept, client_id, card_id, opts)
      data
    end

    # Retrieve Easy Payment Plans Options
    # This API retrieves the available Easy Payment Plans to be used by the customer for the repayment of his/her loans.
    # @param body Easy payment plan Request
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client id generated during consumer onboarding
    # @param card_id The card id  in encrypted format.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(EppResponse, Integer, Hash)>] EppResponse data, response status code and response headers
    def v1_credit_cards_card_id_easy_payment_plans_search_post_with_http_info(body, authorization, uuid, accept, client_id, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_search_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_search_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_search_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_search_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_search_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_search_post"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CreditCardsApi.v1_credit_cards_card_id_easy_payment_plans_search_post"
      end
      # resource path
      local_var_path = '/v1/creditCards/{cardId}/easyPaymentPlans/search'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'EppResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditCardsApi#v1_credit_cards_card_id_easy_payment_plans_search_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Supplementary Cards
    # This API retrieves the details of all the supplementary cards associated with the primary card id in the request.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client id generated during consumer onboarding
    # @param card_id The primary card id  in encrypted format.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [SupplementaryCardListingResponse]
    def v1_credit_cards_card_id_supplementary_cards_get(authorization, uuid, accept, client_id, card_id, opts = {})
      data, _status_code, _headers = v1_credit_cards_card_id_supplementary_cards_get_with_http_info(authorization, uuid, accept, client_id, card_id, opts)
      data
    end

    # List Supplementary Cards
    # This API retrieves the details of all the supplementary cards associated with the primary card id in the request.
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id client id generated during consumer onboarding
    # @param card_id The primary card id  in encrypted format.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(SupplementaryCardListingResponse, Integer, Hash)>] SupplementaryCardListingResponse data, response status code and response headers
    def v1_credit_cards_card_id_supplementary_cards_get_with_http_info(authorization, uuid, accept, client_id, card_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreditCardsApi.v1_credit_cards_card_id_supplementary_cards_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CreditCardsApi.v1_credit_cards_card_id_supplementary_cards_get"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CreditCardsApi.v1_credit_cards_card_id_supplementary_cards_get"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CreditCardsApi.v1_credit_cards_card_id_supplementary_cards_get"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CreditCardsApi.v1_credit_cards_card_id_supplementary_cards_get"
      end
      # verify the required parameter 'card_id' is set
      if @api_client.config.client_side_validation && card_id.nil?
        fail ArgumentError, "Missing the required parameter 'card_id' when calling CreditCardsApi.v1_credit_cards_card_id_supplementary_cards_get"
      end
      # resource path
      local_var_path = '/v1/creditCards/{cardId}/supplementaryCards'.sub('{' + 'cardId' + '}', card_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'SupplementaryCardListingResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditCardsApi#v1_credit_cards_card_id_supplementary_cards_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve Composite Credit Cards Statement Summary
    # This API is used to retrieve the statement summary for multiple credit cards in a single request.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [CardStatementSummaryResponse]
    def v1_credit_cards_statements_summary_search_post(body, authorization, uuid, accept, client_id, content_type, opts = {})
      data, _status_code, _headers = v1_credit_cards_statements_summary_search_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts)
      data
    end

    # Retrieve Composite Credit Cards Statement Summary
    # This API is used to retrieve the statement summary for multiple credit cards in a single request.
    # @param body 
    # @param authorization The most recent Authorization token. This will have the format Bearer + {space} + {accessToken}. Example: Bearer KGNsaWVudF9pZDpjbGllbnRfc2VjcmV0KQ&#x3D;&#x3D;.
    # @param uuid 128 bit random UUID generated uniquely for every request.
    # @param accept Content-Type that are acceptable for the response.
    # @param client_id Client ID generated during application registration.
    # @param content_type application/json
    # @param [Hash] opts the optional parameters
    # @option opts [String] :client_details This field is used to capture device,browser and network information. Refer the developer portal for more information.These are the fields which will be passed as part of the header devicePrint,deviceTokenCookie,userIpAddress,userAgent,hardwareId,simId,deviceModel,deviceName,deviceOsName,deviceOsVersion,multitaskingSupportFlag,languageSupport,wifiMacAddress,cellTowerId,locationAreaCode,rsaApplicationKey,wapClientId,mobileCarrierCode,mobileCountryCode,osId,geoLongitude,geoLatitude,geoHorizontalAccuracy,geoAltitude,geoAltitudeAccuracy,geoSpeed,geoTimestamp,geoStatus,basicServiceSetId,signalStrength,wifiChannel,serviceSetId
    # @return [Array<(CardStatementSummaryResponse, Integer, Hash)>] CardStatementSummaryResponse data, response status code and response headers
    def v1_credit_cards_statements_summary_search_post_with_http_info(body, authorization, uuid, accept, client_id, content_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CreditCardsApi.v1_credit_cards_statements_summary_search_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling CreditCardsApi.v1_credit_cards_statements_summary_search_post"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling CreditCardsApi.v1_credit_cards_statements_summary_search_post"
      end
      # verify the required parameter 'uuid' is set
      if @api_client.config.client_side_validation && uuid.nil?
        fail ArgumentError, "Missing the required parameter 'uuid' when calling CreditCardsApi.v1_credit_cards_statements_summary_search_post"
      end
      # verify the required parameter 'accept' is set
      if @api_client.config.client_side_validation && accept.nil?
        fail ArgumentError, "Missing the required parameter 'accept' when calling CreditCardsApi.v1_credit_cards_statements_summary_search_post"
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling CreditCardsApi.v1_credit_cards_statements_summary_search_post"
      end
      # verify the required parameter 'content_type' is set
      if @api_client.config.client_side_validation && content_type.nil?
        fail ArgumentError, "Missing the required parameter 'content_type' when calling CreditCardsApi.v1_credit_cards_statements_summary_search_post"
      end
      # resource path
      local_var_path = '/v1/creditCards/statements/summary/search'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization
      header_params[:'uuid'] = uuid
      header_params[:'Accept'] = accept
      header_params[:'client_id'] = client_id
      header_params[:'Content-Type'] = content_type
      header_params[:'clientDetails'] = opts[:'client_details'] if !opts[:'client_details'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'CardStatementSummaryResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditCardsApi#v1_credit_cards_statements_summary_search_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
