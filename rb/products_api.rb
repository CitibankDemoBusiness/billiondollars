=begin
#ConsumerDataStandards_Digital_Regulatory

#The product \\amp Product Details APIs allow third-parties to retrieve a list of Product categories \\amp details for Citi and our White-label Partners.

OpenAPI spec version: 1.2.0
Contact: cdr-data61@csiro.au
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

module SwaggerClient
  class ProductsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Product Detail
    # This API is used to get the detailed information on the selected product such as features, eligibility, fees and more. To retrieve the details, simply pass the product id returned from the Get Products API callout.
    # @param product_id ID of the specific product requested
    # @param x_v Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_min_v Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
    # @return [ResponseBankingProductById]
    def get_product_detail(product_id, x_v, opts = {})
      data, _status_code, _headers = get_product_detail_with_http_info(product_id, x_v, opts)
      data
    end

    # Get Product Detail
    # This API is used to get the detailed information on the selected product such as features, eligibility, fees and more. To retrieve the details, simply pass the product id returned from the Get Products API callout.
    # @param product_id ID of the specific product requested
    # @param x_v Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_min_v Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
    # @return [Array<(ResponseBankingProductById, Integer, Hash)>] ResponseBankingProductById data, response status code and response headers
    def get_product_detail_with_http_info(product_id, x_v, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductsApi.get_product_detail ...'
      end
      # verify the required parameter 'product_id' is set
      if @api_client.config.client_side_validation && product_id.nil?
        fail ArgumentError, "Missing the required parameter 'product_id' when calling ProductsApi.get_product_detail"
      end
      # verify the required parameter 'x_v' is set
      if @api_client.config.client_side_validation && x_v.nil?
        fail ArgumentError, "Missing the required parameter 'x_v' when calling ProductsApi.get_product_detail"
      end
      # resource path
      local_var_path = '/banking/products/{productId}'.sub('{' + 'productId' + '}', product_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-v'] = x_v
      header_params[:'x-min-v'] = opts[:'x_min_v'] if !opts[:'x_min_v'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'ResponseBankingProductById' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductsApi#get_product_detail\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Products
    # This API is used to get the list of product categories that are currently offered to the market.
    # @param x_v Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
    # @param [Hash] opts the optional parameters
    # @option opts [String] :effective Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to &#x27;CURRENT&#x27; (default to CURRENT)
    # @option opts [String] :updated_since Only include products that have been updated after the specified date and time. If absent defaults to include all products
    # @option opts [String] :brand Filter results based on a specific brand
    # @option opts [String] :product_category Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.
    # @option opts [Integer] :page Page of results to request (standard pagination) (default to 1)
    # @option opts [Integer] :page_size Page size to request. Default is 25 (standard pagination) (default to 25)
    # @option opts [String] :x_min_v Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
    # @return [ResponseBankingProductList]
    def list_products(x_v, opts = {})
      data, _status_code, _headers = list_products_with_http_info(x_v, opts)
      data
    end

    # Get Products
    # This API is used to get the list of product categories that are currently offered to the market.
    # @param x_v Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
    # @param [Hash] opts the optional parameters
    # @option opts [String] :effective Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to &#x27;CURRENT&#x27;
    # @option opts [String] :updated_since Only include products that have been updated after the specified date and time. If absent defaults to include all products
    # @option opts [String] :brand Filter results based on a specific brand
    # @option opts [String] :product_category Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.
    # @option opts [Integer] :page Page of results to request (standard pagination)
    # @option opts [Integer] :page_size Page size to request. Default is 25 (standard pagination)
    # @option opts [String] :x_min_v Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable.
    # @return [Array<(ResponseBankingProductList, Integer, Hash)>] ResponseBankingProductList data, response status code and response headers
    def list_products_with_http_info(x_v, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductsApi.list_products ...'
      end
      # verify the required parameter 'x_v' is set
      if @api_client.config.client_side_validation && x_v.nil?
        fail ArgumentError, "Missing the required parameter 'x_v' when calling ProductsApi.list_products"
      end
      if @api_client.config.client_side_validation && opts[:'effective'] && !['CURRENT', 'FUTURE', 'ALL'].include?(opts[:'effective'])
        fail ArgumentError, 'invalid value for "effective", must be one of CURRENT, FUTURE, ALL'
      end
      if @api_client.config.client_side_validation && opts[:'product_category'] && !['TRANS_AND_SAVINGS_ACCOUNTS', 'TERM_DEPOSITS', 'TRAVEL_CARDS', 'REGULATED_TRUST_ACCOUNTS', 'RESIDENTIAL_MORTGAGES', 'CRED_AND_CHRG_CARDS', 'PERS_LOANS', 'MARGIN_LOANS', 'LEASES', 'TRADE_FINANCE', 'OVERDRAFTS', 'BUSINESS_LOANS'].include?(opts[:'product_category'])
        fail ArgumentError, 'invalid value for "product_category", must be one of TRANS_AND_SAVINGS_ACCOUNTS, TERM_DEPOSITS, TRAVEL_CARDS, REGULATED_TRUST_ACCOUNTS, RESIDENTIAL_MORTGAGES, CRED_AND_CHRG_CARDS, PERS_LOANS, MARGIN_LOANS, LEASES, TRADE_FINANCE, OVERDRAFTS, BUSINESS_LOANS'
      end
      # resource path
      local_var_path = '/banking/products'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'effective'] = opts[:'effective'] if !opts[:'effective'].nil?
      query_params[:'updated-since'] = opts[:'updated_since'] if !opts[:'updated_since'].nil?
      query_params[:'brand'] = opts[:'brand'] if !opts[:'brand'].nil?
      query_params[:'product-category'] = opts[:'product_category'] if !opts[:'product_category'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'page-size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-v'] = x_v
      header_params[:'x-min-v'] = opts[:'x_min_v'] if !opts[:'x_min_v'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'ResponseBankingProductList' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductsApi#list_products\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
